{"version":3,"sources":["data/SingleSignOn/reducer.js"],"names":["initialState","user","isLoadingUser","reducer","state","action","type","payload","set"],"mappings":";;;;;;AAAA;;AAEA;;AAWA,IAAMA,eAAe,mBAAQ;AAC3BC,QAAM,IADqB;AAE3BC,iBAAe;AAFY,CAAR,CAArB;;AAKA,IAAMC,UAAU,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAChD,UAAQA,OAAOC,IAAf;AACE;AACA;AACE,aAAO,mBAAQ;AACbL,cAAM,mBAAQI,OAAOE,OAAf,CADO;AAEbL,uBAAe;AAFF,OAAR,CAAP;AAIF;AACA;AACA;AACA;AACA;AACE,aAAO,mBAAQ;AACbD,cAAM,IADO;AAEbC,uBAAe;AAFF,OAAR,CAAP;AAIF;AACE,aAAOE,MAAMI,GAAN,CAAU,eAAV,EAA2B,IAA3B,CAAP;AACF;AACE,aAAOJ,KAAP;AAnBJ;AAqBD,CAtBD;;kBAwBeD,O","file":"reducer.js","sourcesContent":["import { Map } from 'immutable';\n\nimport {\n  USER_EXPIRED,\n  REDIRECT_SUCCESS,\n  USER_FOUND,\n  SILENT_RENEW_ERROR,\n  SESSION_TERMINATED,\n  LOADING_USER,\n  USER_SIGNED_OUT,\n  TRIGGER_USER_CLEAR,\n} from './actions';\n\nconst initialState = new Map({\n  user: null,\n  isLoadingUser: false,\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REDIRECT_SUCCESS:\n    case USER_FOUND:\n      return new Map({\n        user: new Map(action.payload),\n        isLoadingUser: false,\n      });\n    case USER_EXPIRED:\n    case SILENT_RENEW_ERROR:\n    case SESSION_TERMINATED:\n    case USER_SIGNED_OUT:\n    case TRIGGER_USER_CLEAR:\n      return new Map({\n        user: null,\n        isLoadingUser: false,\n      });\n    case LOADING_USER:\n      return state.set('isLoadingUser', true);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]}
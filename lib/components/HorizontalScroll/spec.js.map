{"version":3,"sources":["components/HorizontalScroll/spec.jsx"],"names":["describe","it","child","to","contain","done","onScrollReady","scroll","scrollToElement","be","a","scrollToElementParams","selector","duration","offsetX","oldScrollToElement","offsetY","eql","wrapper","not","have","descendants","__scrolling","setState","isScrolling","spy","prototype","find","HorizontalScroll_iScroll","prop","equal","instance","_onBeforeScrollStart","args","restore"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEAA,SAAS,sBAAT,EAAiC,YAAM;AACrCC,KAAG,sBAAH,EAA2B,YAAM;AAC/B,QAAMC,QAAQ,uCAAK,IAAG,OAAR,GAAd;AACA,sBAAO,qBAAQ;AAAA;AAAA;AAAmBA;AAAnB,KAAR,CAAP,EAA8DC,EAA9D,CAAiEC,OAAjE,CAAyEF,KAAzE;AACD,GAHD;;AAKAD,KAAG,0DAAH,EAA+D,UAACI,IAAD,EAAU;AACvE,QAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,MAAD,EAAY;AAChC,wBAAOA,OAAOC,eAAd,EAA+BL,EAA/B,CAAkCM,EAAlC,CAAqCC,CAArC,CAAuC,UAAvC;AACAL;AACD,KAHD;;AAKA,uBAAM;AAAA;AAAA,QAAkB,eAAeC,aAAjC;AAAgD;AAAhD,KAAN;AACD,GAPD;;AASAL,KAAG,yEAAH,EAA8E,UAACI,IAAD,EAAU;AACtF,QAAMM,wBAAwB;AAC5BC,gBAAU,KADkB;AAE5BC,gBAAU,GAFkB;AAG5BC,eAAS;AAHmB,KAA9B;;AAMA,QAAMR,gBAAgB,SAAhBA,aAAgB,CAACC,MAAD,EAAY;AAChC,UAAMQ,qBAAqBR,OAAOC,eAAlC;AACAD,aAAOC,eAAP,GAAyB,UAACI,QAAD,EAAWC,QAAX,EAAqBC,OAArB,EAA8BE,OAA9B,EAA0C;AAAG;AACpE,0BAAO;AACLJ,4BADK,EACKC,kBADL,EACeC,gBADf,EACwBE;AADxB,SAAP,EAEGb,EAFH,CAEMc,GAFN;AAGED,mBAAS,IAHX,IAIKL,qBAJL;AAMAJ,eAAOC,eAAP,GAAyBO,kBAAzB,CAPiE,CAOnB;AAC9CV;AACD,OATD;AAUD,KAZD;;AAcA,uBAAM;AAAA;AAAA,QAAkB,eAAeC,aAAjC;AACF,yBAAiBK,qBADf;AACsC;AADtC,KAAN;AAED,GAvBD;;AAyBAV,KAAG,4DAAH,EAAiE,YAAM;AACrE,QAAMiB,UAAU,qBAAQ;AAAA;AAAA;AAAkB;AAAlB,KAAR,CAAhB;AACA,sBAAOA,OAAP,EAAgBf,EAAhB,CAAmBgB,GAAnB,CAAuBC,IAAvB,CAA4BC,WAA5B,OAA4C,gBAAOC,WAAnD;AACAJ,YAAQK,QAAR,CAAiB,EAAEC,aAAa,IAAf,EAAjB;AACA,sBAAON,OAAP,EAAgBf,EAAhB,CAAmBiB,IAAnB,CAAwBC,WAAxB,OAAwC,gBAAOC,WAA/C;AACD,GALD;;AAOArB,KAAG,6CAAH,EAAkD,YAAM;AACtD,QAAMwB,MAAM,gBAAMA,GAAN,CAAU,WAAiBC,SAA3B,EAAsC,UAAtC,CAAZ;AACA,QAAMR,UAAU,qBAAQ;AAAA;AAAA;AAAkB;AAAlB,KAAR,CAAhB;;AAEA,sBAAOA,QAAQS,IAAR,OAAiB,gBAAOC,wBAAxB,EAAoDC,IAApD,CAAyD,qBAAzD,CAAP,EACK1B,EADL,CACQ2B,KADR,CACcZ,QAAQa,QAAR,GAAmBC,oBADjC;;AAGAd,YAAQa,QAAR,GAAmBC,oBAAnB;;AAEA,sBAAOP,IAAIQ,IAAJ,CAAS,CAAT,CAAP,EAAoB9B,EAApB,CAAuBc,GAAvB,CAA2B,CAAC,EAAEO,aAAa,IAAf,EAAD,CAA3B;;AAEA,eAAiBE,SAAjB,CAA2BH,QAA3B,CAAoCW,OAApC;AACD,GAZD;AAaD,CA5DD","file":"spec.js","sourcesContent":["import styles from './style.postcss';\nimport React from 'react';\nimport HorizontalScroll from './';\nimport { expect } from 'chai';\nimport { shallow, mount } from 'enzyme';\nimport Sinon from 'sinon';\n\ndescribe('<HorizontalScroll />', () => {\n  it('renders its children', () => {\n    const child = <div id=\"inner\" />;\n    expect(shallow(<HorizontalScroll>{child}</HorizontalScroll>)).to.contain(child);\n  });\n\n  it('calls property onScrollReady with an instance of iScroll', (done) => {\n    const onScrollReady = (scroll) => {\n      expect(scroll.scrollToElement).to.be.a('function');\n      done();\n    };\n\n    mount(<HorizontalScroll onScrollReady={onScrollReady}><div /></HorizontalScroll>);\n  });\n\n  it('calls iScroll.scrollToElement with the given scrollToElement parameters', (done) => {\n    const scrollToElementParams = {\n      selector: 'div',\n      duration: 100,\n      offsetX: 10,\n    };\n\n    const onScrollReady = (scroll) => {\n      const oldScrollToElement = scroll.scrollToElement;\n      scroll.scrollToElement = (selector, duration, offsetX, offsetY) => {  // eslint-disable-line\n        expect({\n          selector, duration, offsetX, offsetY,\n        }).to.eql({\n          offsetY: true,  // `offsetX` and `offsetY` default to true (centre in viewport)\n          ...scrollToElementParams,\n        });\n        scroll.scrollToElement = oldScrollToElement;  // eslint-disable-line\n        done();\n      };\n    };\n\n    mount(<HorizontalScroll onScrollReady={onScrollReady}\n        scrollToElement={scrollToElementParams}><div /></HorizontalScroll>);\n  });\n\n  it('sets the __scrolling styles while in the isScrolling state', () => {\n    const wrapper = shallow(<HorizontalScroll><div /></HorizontalScroll>);\n    expect(wrapper).to.not.have.descendants(`.${styles.__scrolling}`);\n    wrapper.setState({ isScrolling: true });\n    expect(wrapper).to.have.descendants(`.${styles.__scrolling}`);\n  });\n\n  it('goes into isScrolling state while scrolling', () => {\n    const spy = Sinon.spy(HorizontalScroll.prototype, 'setState');\n    const wrapper = shallow(<HorizontalScroll><div /></HorizontalScroll>);\n\n    expect(wrapper.find(`.${styles.HorizontalScroll_iScroll}`).prop('onBeforeScrollStart'))\n        .to.equal(wrapper.instance()._onBeforeScrollStart);\n\n    wrapper.instance()._onBeforeScrollStart();\n\n    expect(spy.args[0]).to.eql([{ isScrolling: true }]);\n\n    HorizontalScroll.prototype.setState.restore();\n  });\n});\n"]}
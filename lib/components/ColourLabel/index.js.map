{"version":3,"sources":["components/ColourLabel/index.jsx"],"names":["ColourLabel","props","text","initial","colour","string","not","empty","renderSmall","renderBig","ColourLabel_inner","__small","backgroundColor","propTypes"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMA,oCAAc,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MAC5BC,IAD4B,GACFD,KADE,CAC5BC,IAD4B;AAAA,MACtBC,OADsB,GACFF,KADE,CACtBE,OADsB;AAAA,MACbC,MADa,GACFH,KADE,CACbG,MADa;;;AAGpC,MAAI,gBAAGC,MAAH,CAAUF,OAAV,KAAsB,gBAAGG,GAAH,CAAOC,KAAP,CAAaJ,OAAb,CAA1B,EAAiD;AAC/C,WAAOK,aAAP;AACD;;AAED,MAAI,gBAAGH,MAAH,CAAUH,IAAV,KAAmB,gBAAGI,GAAH,CAAOC,KAAP,CAAaL,IAAb,CAAvB,EAA2C;AACzC,WAAOO,WAAP;AACD;;AAED,SAAO,IAAP;;AAEA,WAASD,WAAT,GAAuB;AACrB,QAAI,gBAAGH,MAAH,CAAUH,IAAV,KAAmB,gBAAGI,GAAH,CAAOC,KAAP,CAAaL,IAAb,CAAvB,EAA2C;AACzC,aAAO;AAAA;AAAA,UAAS,MAAMA,IAAf,EAAqB,WAAW,gBAAOF,WAAvC;AACL;AAAA;AAAA,YAAK,WAAW,0BAAW,gBAAOU,iBAAlB,EAAqC,gBAAOC,OAA5C,CAAhB;AACI,mBAAO,EAAEC,iBAAiBR,MAAnB,EADX;AAEGD;AAFH;AADK,OAAP;AAMD;;AAED,WAAO;AAAA;AAAA,QAAK,WAAW,gBAAOH,WAAvB;AACL;AAAA;AAAA,UAAK,WAAW,0BAAW,gBAAOU,iBAAlB,EAAqC,gBAAOC,OAA5C,CAAhB;AACI,iBAAO,EAAEC,iBAAiBR,MAAnB,EADX;AAEGD;AAFH;AADK,KAAP;AAMD;;AAED,WAASM,SAAT,GAAqB;AACnB,WAAO;AAAA;AAAA,QAAK,WAAW,gBAAOT,WAAvB;AACL;AAAA;AAAA,UAAK,WAAW,gBAAOU,iBAAvB,EAA0C,OAAO,EAAEE,iBAAiBR,MAAnB,EAAjD;AAA+EF;AAA/E;AADK,KAAP;AAGD;AACF,CApCM;;AAsCPF,YAAYa,SAAZ,GAAwB;AACtBV,WAAS,oBAAUE,MADG;AAEtBH,QAAM,oBAAUG,MAFM;AAGtBD,UAAQ,oBAAUC;AAHI,CAAxB;;kBAMe,oBAAKL,WAAL,C","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React from 'react';\nimport pure from 'recompose/pure';\nimport classnames from 'classnames';\nimport is from 'is_js';\nimport Tooltip from 'components/Tooltip';\nimport PropTypes from 'prop-types';\n\nexport const ColourLabel = (props) => {\n  const { text, initial, colour } = props;\n\n  if (is.string(initial) && is.not.empty(initial)) {\n    return renderSmall();\n  }\n\n  if (is.string(text) && is.not.empty(text)) {\n    return renderBig();\n  }\n\n  return null;\n\n  function renderSmall() {\n    if (is.string(text) && is.not.empty(text)) {\n      return <Tooltip text={text} className={styles.ColourLabel}>\n        <div className={classnames(styles.ColourLabel_inner, styles.__small)}\n            style={{ backgroundColor: colour }}>\n          {initial}\n        </div>\n      </Tooltip>;\n    }\n\n    return <div className={styles.ColourLabel}>\n      <div className={classnames(styles.ColourLabel_inner, styles.__small)}\n          style={{ backgroundColor: colour }}>\n        {initial}\n      </div>\n    </div>;\n  }\n\n  function renderBig() {\n    return <div className={styles.ColourLabel}>\n      <div className={styles.ColourLabel_inner} style={{ backgroundColor: colour }}>{text}</div>\n    </div>;\n  }\n};\n\nColourLabel.propTypes = {\n  initial: PropTypes.string,\n  text: PropTypes.string,\n  colour: PropTypes.string,\n};\n\nexport default pure(ColourLabel);\n"]}
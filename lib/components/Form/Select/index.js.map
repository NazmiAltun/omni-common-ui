{"version":3,"sources":["components/Form/Select/index.jsx"],"names":["Select","props","arrowRenderer","Select_icon","classes","Select_element","__required","showRequired","__error","showError","select","e","handleChange","not","undefined","label","getErrorMessage","setValue","value","propTypes","func","isRequired","string"],"mappings":";;;;;;;;AAAA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,MAAMC,iBAAgB,SAAhBA,cAAgB;AAAA,WACpB;AAAA;AAAA,QAAM,WAAW,gBAAOC,WAAxB;AACE,sDAAM,IAAG,kBAAT;AADF,KADoB;AAAA,GAAtB;;AAKA,MAAMC,UAAU,0BAAW,gBAAOC,cAAlB,sBACT,gBAAOC,UADE,EACWL,MAAMM,YAAN,EADX,uBAET,gBAAOC,OAFE,EAEQP,MAAMQ,SAAN,EAFR,EAAhB;;AAIA,MAAMC,SAAS,gEAAa,WAAWN,OAAxB;AACX,cAAU,kBAACO,CAAD;AAAA,aAAOC,aAAaD,CAAb,CAAP;AAAA,KADC;AAEX,mBAAe;AAAA,aAAMT,gBAAN;AAAA;AAFJ,KAGPD,KAHO,EAAf;;AAKA,MAAI,gBAAGY,GAAH,CAAOC,SAAP,CAAiBb,MAAMc,KAAvB,CAAJ,EAAmC;AACjC,WAAO;AAAA;AAAA,QAAO,OAAOd,MAAMc,KAApB;AACH,yBAAiB;AAAA,iBAAMd,MAAMe,eAAN,EAAN;AAAA,SADd;AAEH,mBAAW;AAAA,iBAAMf,MAAMQ,SAAN,EAAN;AAAA,SAFR;AAGH,sBAAc;AAAA,iBAAMR,MAAMM,YAAN,EAAN;AAAA,SAHX;AAIH,sBAJG;AAKJG;AALI,KAAP;AAOD;AACD,SAAOA,MAAP;;AAEA,WAASE,YAAT,CAAsBD,CAAtB,EAAyB;AACvBV,UAAMgB,QAAN,CAAeN,EAAEO,KAAjB;AACD;AACF,CA7BD;;AA+BAlB,OAAOmB,SAAP,GAAmB;AACjBH,mBAAiB,oBAAUI,IAAV,CAAeC,UADf;AAEjBd,gBAAc,oBAAUa,IAAV,CAAeC,UAFZ;AAGjBJ,YAAU,oBAAUG,IAAV,CAAeC,UAHR;AAIjBZ,aAAW,oBAAUW,IAAV,CAAeC,UAJT;AAKjBN,SAAO,oBAAUO;AALA,CAAnB;;kBAQe,sBAAgBtB,MAAhB,C","file":"index.js","sourcesContent":["import 'react-select/dist/react-select.css';\nimport styles from './style.postcss';\n\nimport React from 'react';\nimport ReactSelect from 'react-select';\nimport is from 'is_js';\nimport { HOC as formsyDecorator } from 'formsy-react';\nimport classnames from 'classnames';\nimport Icon from 'components/Icon';\nimport Field from '../Field';\nimport PropTypes from 'prop-types';\n\nconst Select = (props) => {\n  const arrowRenderer = () =>\n    <span className={styles.Select_icon}>\n      <Icon id=\"chevron-fat-down\" />\n    </span>;\n\n  const classes = classnames(styles.Select_element,\n      { [styles.__required]: props.showRequired() },\n      { [styles.__error]: props.showError() });\n\n  const select = <ReactSelect className={classes}\n      onChange={(e) => handleChange(e)}\n      arrowRenderer={() => arrowRenderer()}\n      {...props} />;\n\n  if (is.not.undefined(props.label)) {\n    return <Field label={props.label}\n        getErrorMessage={() => props.getErrorMessage()}\n        showError={() => props.showError()}\n        showRequired={() => props.showRequired()}\n        useLabel>\n      {select}\n    </Field>;\n  }\n  return select;\n\n  function handleChange(e) {\n    props.setValue(e.value);\n  }\n};\n\nSelect.propTypes = {\n  getErrorMessage: PropTypes.func.isRequired,\n  showRequired: PropTypes.func.isRequired,\n  setValue: PropTypes.func.isRequired,\n  showError: PropTypes.func.isRequired,\n  label: PropTypes.string,\n};\n\nexport default formsyDecorator(Select);\n"]}
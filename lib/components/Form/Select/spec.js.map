{"version":3,"sources":["components/Form/Select/spec.jsx"],"names":["describe","options","value","label","clearableValue","it","wrapper","find","__required","to","have","length","context","descendants","not"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,MAAT,EAAiB,YAAM;AACrBA,WAAS,QAAT,EAAmB,YAAM;AACvB,QAAMC,UAAU,CACd,EAAEC,OAAO,KAAT,EAAgBC,OAAO,KAAvB,EADc,EAEd,EAAED,OAAO,KAAT,EAAgBC,OAAO,KAAvB,EAA8BC,gBAAgB,KAA9C,EAFc,CAAhB;;AAKAC,OAAG,yBAAH,EAA8B,YAAM;AAClC,UAAMC,UAAU,mBAAM;AAAA;AAAA;AACpB,iDAAM,MAAN,IAAa,MAAK,UAAlB;AACI,iBAAM,UADV;AAEI,iBAAM,EAFV;AAGI,mBAASL,OAHb;AAII,wBAJJ;AADoB,OAAN,CAAhB;AAOA,wBAAOK,QAAQC,IAAR,OAAiB,gBAAOC,UAAxB,CAAP,EAA8CC,EAA9C,CAAiDC,IAAjD,CAAsDC,MAAtD,CAA6D,CAA7D;AACD,KATD;;AAWAC,YAAQ,sBAAR,EAAgC,YAAM;AACpCP,SAAG,gDAAH,EAAqD,YAAM;AACzD,YAAMC,UAAU,mBAAM;AAAA;AAAA;AACpB,mDAAM,MAAN,IAAa,MAAK,UAAlB;AACI,mBAAM,UADV;AAEI,mBAAM,EAFV;AAGI,qBAASL,OAHb;AADoB,SAAN,CAAhB;AAMA,0BAAOK,OAAP,EAAgBG,EAAhB,CAAmBC,IAAnB,CAAwBG,WAAxB;AACD,OARD;;AAUAR,SAAG,2DAAH,EAAgE,YAAM;AACpE,YAAMC,UAAU,mBAAM;AAAA;AAAA;AACpB,mDAAM,MAAN,IAAa,MAAK,WAAlB;AACI,mBAAM,EADV;AAEI,qBAASL,OAFb;AADoB,SAAN,CAAhB;AAKA,0BAAOK,OAAP,EAAgBG,EAAhB,CAAmBK,GAAnB,CAAuBJ,IAAvB,CAA4BG,WAA5B;AACD,OAPD;AAQD,KAnBD;AAoBD,GArCD;AAsCD,CAvCD","file":"spec.js","sourcesContent":["import styles from './style.postcss';\n\nimport React from 'react';\nimport { expect } from 'chai';\nimport { mount } from 'enzyme';\nimport Form from '../';\nimport Field from '../Field';\n\ndescribe('Form', () => {\n  describe('Select', () => {\n    const options = [\n      { value: 'one', label: 'One' },\n      { value: 'two', label: 'Two', clearableValue: false },\n    ];\n\n    it('works along with Formsy', () => {\n      const wrapper = mount(<Form>\n        <Form.Select name=\"required\"\n            label=\"required\"\n            value=\"\"\n            options={options}\n            required />\n      </Form>);\n      expect(wrapper.find(`.${styles.__required}`)).to.have.length(1);\n    });\n\n    context('label prop existence', () => {\n      it('has a Field when there is a label prop present', () => {\n        const wrapper = mount(<Form>\n          <Form.Select name=\"labelled\"\n              label=\"labelled\"\n              value=\"\"\n              options={options} />\n        </Form>);\n        expect(wrapper).to.have.descendants(Field);\n      });\n\n      it('does not have a Field when there is no label prop present', () => {\n        const wrapper = mount(<Form>\n          <Form.Select name=\"labelless\"\n              value=\"\"\n              options={options} />\n        </Form>);\n        expect(wrapper).to.not.have.descendants(Field);\n      });\n    });\n  });\n});\n"]}
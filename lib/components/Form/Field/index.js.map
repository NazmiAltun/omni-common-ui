{"version":3,"sources":["components/Form/Field/index.jsx"],"names":["Field","props","classes","className","getValidationClasses","__stackedHorizontally","neighborStackMode","useLabel","renderInner","Field_wrap","__stackedVertically","innerStackMode","Field_wrap_label","labelTextClassName","label","Field_wrap_inputContainer","children","renderError","showError","Field_wrap_inputContainer_validationError","getErrorMessage","__error","showRequired","__required","propTypes","string","func","isRequired","node","bool","oneOf"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEO,IAAMA,wBAAQ,SAARA,KAAQ,CAACC,KAAD,EAAW;AAC9B,MAAMC,UAAU,0BAAW,gBAAOF,KAAlB,EAAyBC,MAAME,SAA/B,EAA0CC,sBAA1C,sBACb,gBAAOC,qBADM,EACkBJ,MAAMK,iBAAN,KAA4B,YAD9C,EAAhB;AAGA,MAAIL,MAAMM,QAAN,KAAmB,IAAvB,EAA6B;AAC3B,WAAO;AAAA;AAAA,QAAO,WAAWL,OAAlB;AAA4BM;AAA5B,KAAP;AACD;;AAED,SAAO;AAAA;AAAA,MAAK,WAAWN,OAAhB;AAA0BM;AAA1B,GAAP;;AAEA,WAASA,WAAT,GAAuB;AACrB,WAAO;AAAA;AAAA,QAAK,WAAW,0BAAW,gBAAOC,UAAlB,sBACpB,gBAAOC,mBADa,EACST,MAAMU,cAAN,KAAyB,UADlC,EAAhB;AAGL;AAAA;AAAA,UAAM,WAAW,0BAAW,gBAAOC,gBAAlB,EAAoCX,MAAMY,kBAA1C,CAAjB;AACGZ,cAAMa;AADT,OAHK;AAML;AAAA;AAAA,UAAK,WAAW,gBAAOC,yBAAvB;AACGd,cAAMe,QADT;AAEGC;AAFH;AANK,KAAP;AAWD;;AAED,WAASA,WAAT,GAAuB;AACrB,QAAI,CAAEhB,MAAMiB,SAAN,EAAN,EAAyB;AACvB;AACD;;AAED,WAAO;AAAA;AAAA,QAAM,WAAW,gBAAOC,yCAAxB;AACJC;AADI,KAAP;AAGD;;AAED,WAAShB,oBAAT,GAAgC;AAC9B,QAAIH,MAAMiB,SAAN,EAAJ,EAAuB;AACrB,aAAO,gBAAOG,OAAd;AACD;;AAED,QAAIpB,MAAMqB,YAAN,EAAJ,EAA0B;AACxB,aAAO,gBAAOC,UAAd;AACD;AACF;;AAED,WAASH,eAAT,GAA2B;AACzB,QAAInB,MAAMqB,YAAN,EAAJ,EAA0B;AACxB,aAAO,wBAAP;AACD;;AAED,WAAOrB,MAAMmB,eAAN,EAAP;AACD;AACF,CAnDM;;AAqDPpB,MAAMwB,SAAN,GAAkB;AAChBrB,aAAW,oBAAUsB,MADL;AAEhBZ,sBAAoB,oBAAUY,MAFd;AAGhBX,SAAO,oBAAUW,MAHD;AAIhBP,aAAW,oBAAUQ,IAAV,CAAeC,UAJV;AAKhBL,gBAAc,oBAAUI,IAAV,CAAeC,UALb;AAMhBP,mBAAiB,oBAAUM,IAAV,CAAeC,UANhB;AAOhBX,YAAU,oBAAUY,IAPJ;AAQhBrB,YAAU,oBAAUsB,IARJ;AAShBvB,qBAAmB,oBAAUwB,KAAV,CAAgB,CAAC,SAAD,EAAY,YAAZ,CAAhB,CATH;AAUhBnB,kBAAgB,oBAAUmB,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,CAVA,CAU8C;AAV9C,CAAlB;;kBAae,oBAAK9B,KAAL,C","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React from 'react';\nimport pure from 'recompose/pure';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const Field = (props) => {\n  const classes = classnames(styles.Field, props.className, getValidationClasses(), {\n    [styles.__stackedHorizontally]: props.neighborStackMode === 'horizontal',\n  });\n  if (props.useLabel === true) {\n    return <label className={classes}>{renderInner()}</label>;\n  }\n\n  return <div className={classes}>{renderInner()}</div>;\n\n  function renderInner() {\n    return <div className={classnames(styles.Field_wrap, {\n      [styles.__stackedVertically]: props.innerStackMode === 'vertical',\n    })}>\n      <span className={classnames(styles.Field_wrap_label, props.labelTextClassName)}>\n        {props.label}\n      </span>\n      <div className={styles.Field_wrap_inputContainer}>\n        {props.children}\n        {renderError()}\n      </div>\n    </div>;\n  }\n\n  function renderError() {\n    if (! props.showError()) {\n      return;\n    }\n\n    return <span className={styles.Field_wrap_inputContainer_validationError}>\n      {getErrorMessage()}\n    </span>;\n  }\n\n  function getValidationClasses() {\n    if (props.showError()) {\n      return styles.__error;\n    }\n\n    if (props.showRequired()) {\n      return styles.__required;\n    }\n  }\n\n  function getErrorMessage() {\n    if (props.showRequired()) {\n      return 'This field is required';\n    }\n\n    return props.getErrorMessage();\n  }\n};\n\nField.propTypes = {\n  className: PropTypes.string,\n  labelTextClassName: PropTypes.string,\n  label: PropTypes.string,\n  showError: PropTypes.func.isRequired,\n  showRequired: PropTypes.func.isRequired,\n  getErrorMessage: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  useLabel: PropTypes.bool,\n  neighborStackMode: PropTypes.oneOf(['default', 'horizontal']),\n  innerStackMode: PropTypes.oneOf(['horizontal', 'vertical']),  // default: horizontal\n};\n\nexport default pure(Field);\n"]}
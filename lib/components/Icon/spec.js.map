{"version":3,"sources":["components/Icon/spec.jsx"],"names":["describe","it","iconId","wrapper","to","contain","get","have","descendants","onClick","spy","simulate","called","be","true","find","length"],"mappings":";;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,SAAS,UAAT,EAAqB,YAAM;AACzBC,KAAG,kDAAH,EAAuD,YAAM;AAC3D,QAAMC,SAAS,kBAAf;AACA,QAAMC,UAAU,qBAAQ,4CAAM,IAAID,MAAV,GAAR,CAAhB;AACA,sBAAOC,OAAP,EAAgBC,EAAhB,CAAmBC,OAAnB,CAA2B,gBAAMC,GAAN,CAAUJ,MAAV,CAA3B;AACD,GAJD;;AAMAD,KAAG,2DAAH,EAAgE,YAAM;AACpE,QAAMC,SAAS,kBAAf;AACA,QAAMC,UAAU,qBAAQ,4CAAM,IAAID,MAAV,EAAkB,WAAU,cAA5B,GAAR,CAAhB;AACA,sBAAOC,OAAP,EAAgBC,EAAhB,CAAmBG,IAAnB,CAAwBC,WAAxB,CAAoC,eAApC;AACD,GAJD;;AAMAP,KAAG,iCAAH,EAAsC,YAAM;AAC1C,QAAMQ,UAAU,gBAAMC,GAAN,EAAhB;AACA,QAAMP,UAAU,qBAAQ,4CAAM,IAAG,QAAT,EAAkB,SAASM,OAA3B,GAAR,CAAhB;AACAN,YAAQQ,QAAR,CAAiB,OAAjB;AACA,sBAAOF,QAAQG,MAAf,EAAuBR,EAAvB,CAA0BS,EAA1B,CAA6BC,IAA7B;AACD,GALD;;AAOAb,KAAG,8CAAH,EAAmD,YAAM;AACvD,QAAME,UAAU,qBAAQ,4CAAM,IAAG,QAAT,EAAkB,OAAM,YAAxB,GAAR,CAAhB;AACA,sBAAOA,QAAQY,IAAR,CAAa,sBAAb,CAAP,EAA6CX,EAA7C,CAAgDG,IAAhD,CAAqDS,MAArD,CAA4D,CAA5D;AACD,GAHD;AAID,CAxBD","file":"spec.js","sourcesContent":["import React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'enzyme';\nimport Icon from './';\nimport icons from './icons';\nimport Sinon from 'sinon';\n\ndescribe('<Icon />', () => {\n  it('renders the content of the SVG file into the DOM', () => {\n    const iconId = 'magnifying-glass';\n    const wrapper = shallow(<Icon id={iconId} />);\n    expect(wrapper).to.contain(icons.get(iconId));\n  });\n\n  it('allows passing className down to the inline SVG component', () => {\n    const iconId = 'magnifying-glass';\n    const wrapper = shallow(<Icon id={iconId} className=\"custom-class\" />);\n    expect(wrapper).to.have.descendants('.custom-class');\n  });\n\n  it('allows setting an onClick event', () => {\n    const onClick = Sinon.spy();\n    const wrapper = shallow(<Icon id=\"burger\" onClick={onClick} />);\n    wrapper.simulate('click');\n    expect(onClick.called).to.be.true;\n  });\n\n  it('allows setting a title attribute to the icon', () => {\n    const wrapper = shallow(<Icon id=\"burger\" title=\"Some title\" />);\n    expect(wrapper.find('[title=\"Some title\"]')).to.have.length(1);\n  });\n});\n"]}
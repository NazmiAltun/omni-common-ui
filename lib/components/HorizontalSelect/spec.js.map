{"version":3,"sources":["components/HorizontalSelect/spec.jsx"],"names":["jest","mock","PropTypes","require","Link","onClick","propTypes","func","test","helloNodeHtml","options","html","value","expect","contains","toBe","testOnSelect","fn","wrapper","find","last","simulate","toHaveBeenCalledWith","HorizontalSelect_option_active","toHaveLength"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,KAAKC,IAAL,iBAA0B,YAAM;AAC9B,MAAMC,YAAYC,OAAZ,cAAN;AACA,MAAMC,OAAO,SAAPA,IAAO;AAAA,QAAGC,OAAH,QAAGA,OAAH;AAAA,WAAiB,uCAAK,SAASA,OAAd,GAAjB;AAAA,GAAb;AACAD,OAAKE,SAAL,GAAiB,EAAED,SAASH,UAAUK,IAArB,EAAjB;AACA,SAAO,EAAEH,UAAF,EAAP;AACD,CALD;;AAOAI,KAAK,+BAAL,EAAsC,YAAM;AAC1C,MAAMC,gBAAgB;AAAA;AAAA;AAAA;AAAA,GAAtB;AACA,MAAMC,UAAU,CAAC,EAAEC,MAAMF,aAAR,EAAuBG,OAAO,OAA9B,EAAD,CAAhB;AACAC,SAAO,qBAAQ,4CAAkB,SAASH,OAA3B,GAAR,EAAgDI,QAAhD,CAAyDL,aAAzD,CAAP,EAAgFM,IAAhF,CAAqF,IAArF;AACD,CAJD;;AAMAP,KAAK,uCAAL,EAA8C,YAAM;AAClD,MAAME,UAAU,CAAC;AACfC,UAAM;AAAA;AAAA;AAAA;AAAA,KADS;AAEfC,WAAO;AAFQ,GAAD,EAGb;AACDD,UAAM;AAAA;AAAA;AAAA;AAAA,KADL;AAEDC,WAAO;AAFN,GAHa,CAAhB;AAOA,MAAMI,eAAehB,KAAKiB,EAAL,EAArB;AACA,MAAMC,UAAU,mBAAM,4CAAkB,SAASR,OAA3B;AAClB,cAAUM,YADQ,GAAN,CAAhB;AAEAE,UAAQC,IAAR,CAAa,sBAAYf,IAAzB,EAA+BgB,IAA/B,GAAsCC,QAAtC,CAA+C,OAA/C;AACAR,SAAOG,YAAP,EAAqBM,oBAArB,CAA0C,CAA1C;AACD,CAbD;;AAeAd,KAAK,0CAAL,EAAiD,YAAM;AACrD,MAAME,UAAU,CAAC;AACfC,UAAM;AAAA;AAAA;AAAA;AAAA,KADS;AAEfC,WAAO;AAFQ,GAAD,CAAhB;AAIAC,SAAO,qBAAQ,4CAAkB,SAASH,OAA3B,EAAoC,OAAO,CAA3C,GAAR,EACJS,IADI,OACK,gBAAOI,8BADZ,CAAP,EACsDC,YADtD,CACmE,CADnE;AAED,CAPD","file":"spec.js","sourcesContent":["import React from 'react';\nimport { mount, shallow } from 'enzyme';\nimport styles from './style.postcss';\nimport ReactRouter from 'react-router';\nimport HorizontalSelect from './';\n\njest.mock('react-router', () => {\n  const PropTypes = require('prop-types');\n  const Link = ({ onClick }) => <div onClick={onClick} />;\n  Link.propTypes = { onClick: PropTypes.func };\n  return { Link };\n});\n\ntest('renders option html as a node', () => {\n  const helloNodeHtml = <div>hello</div>;\n  const options = [{ html: helloNodeHtml, value: 'hello' }];\n  expect(shallow(<HorizontalSelect options={options} />).contains(helloNodeHtml)).toBe(true);\n});\n\ntest('onSelect is called once being clicked', () => {\n  const options = [{\n    html: <div>1</div>,\n    value: 1,\n  }, {\n    html: <div>2</div>,\n    value: 2,\n  }];\n  const testOnSelect = jest.fn();\n  const wrapper = mount(<HorizontalSelect options={options}\n      onSelect={testOnSelect} />);\n  wrapper.find(ReactRouter.Link).last().simulate('click');\n  expect(testOnSelect).toHaveBeenCalledWith(2);\n});\n\ntest('set active styles to the selected option', () => {\n  const options = [{\n    html: <div>hello</div>,\n    value: 1,\n  }];\n  expect(shallow(<HorizontalSelect options={options} value={1} />)\n    .find(`.${styles.HorizontalSelect_option_active}`)).toHaveLength(1);\n});\n"]}
{"version":3,"sources":["components/HorizontalSelect/index.jsx"],"names":["wasLeftMouseButtonPressed","e","window","event","button","which","movementLimit","HorizontalSelect","props","state","value","scrollToElement","selector","HorizontalSelect_option_active","duration","easing","style","_onMouseDown","nativeEvent","_startMouseX","screenX","_onClick","option","movement","Math","abs","preventDefault","_onOptionSelect","onSelect","nextProps","setState","options","getLinkHrefForValue","existy","length","HorizontalSelect_wrap","HorizontalSelect_scroller","HorizontalSelect_options_wrap","HorizontalSelect_options","map","optionClassName","HorizontalSelect_option","className","bind","html","propTypes","arrayOf","shape","node","string","isRequired","func"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,4BAA4B,SAA5BA,yBAA4B,GAAsB;AAAA,MAArBC,CAAqB,uEAAjBC,OAAOC,KAAU;;AACtD,MAAMC,SAASH,EAAEI,KAAF,IAAWJ,EAAEG,MAA5B;AACA,SAAOA,WAAW,CAAlB;AACD,CAHD;;AAKA,IAAME,gBAAgB,EAAtB;;IAEMC,gB;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,UAAKC,KAAL,GAAa,EAAEC,OAAOF,MAAME,KAAf,EAAb;AACA,UAAKC,eAAL,GAAuB;AACrBC,sBAAc,gBAAOC,8BADA;AAErBC,gBAAU,GAFW;AAGrBC,cAAQ,EAAEC,OAAO,aAAT;AAHa,KAAvB;;AAMA;AACA,UAAKC,YAAL,GAAoB,UAAChB,CAAD,EAAO;AACzB,UAAI,CAAED,0BAA0BC,EAAEiB,WAA5B,CAAN,EAAgD;AAChD,YAAKC,YAAL,GAAoBlB,EAAEmB,OAAtB;AACD,KAHD;AAIA,UAAKC,QAAL,GAAgB,UAACC,MAAD,EAASrB,CAAT,EAAe;AAC7B,UAAMsB,WAAWC,KAAKC,GAAL,CAAS,MAAKN,YAAL,GAAoBlB,EAAEmB,OAA/B,CAAjB;AACA,UAAI,MAAKD,YAAL,IAAqBI,WAAWjB,aAApC,EAAmD;AACjD;AACAL,UAAEyB,cAAF;AACA,eAAO,KAAP;AACD;AACD,YAAKC,eAAL,CAAqBL,OAAOZ,KAA5B;AACD,KARD;AASA,UAAKiB,eAAL,GAAuB,UAACjB,KAAD,EAAW;AAChC,YAAKF,KAAL,CAAWoB,QAAX,IAAuB,MAAKpB,KAAL,CAAWoB,QAAX,CAAoBlB,KAApB,CAAvB;AACD,KAFD;AAvBiB;AA0BlB;;;;8CAEyBmB,S,EAAW;AACnC,UAAI,KAAKrB,KAAL,CAAWE,KAAX,KAAqBmB,UAAUnB,KAAnC,EAA0C;AACxC,aAAKoB,QAAL,CAAc,EAAEpB,OAAOmB,UAAUnB,KAAnB,EAAd;AACD;AACF;;;6BAEQ;AAAA;;AAAA,mBACkC,KAAKF,KADvC;AAAA,UACCuB,OADD,UACCA,OADD;AAAA,UACUC,mBADV,UACUA,mBADV;;AAEP,UAAI,CAAE,gBAAGC,MAAH,CAAUF,OAAV,CAAF,IAAwBA,QAAQG,MAAR,KAAmB,CAA/C,EAAkD;AAChD,eAAO,IAAP;AACD;AACD,aAAO;AAAA;AAAA,UAAK,WAAW,gBAAOC,qBAAvB;AACL;AAAA;AAAA,YAAkB,WAAW,gBAAO5B,gBAApC;AACI,4BAAgB,gBAAO6B,yBAD3B;AAEI,6BAAiB,KAAKzB,eAF1B;AAGE;AAAA;AAAA,cAAK,WAAW,gBAAO0B,6BAAvB;AACE;AAAA;AAAA,gBAAI,WAAW,gBAAOC,wBAAtB;AAEIP,sBAAQQ,GAAR,CAAY,UAACjB,MAAD,EAAY;AACtB,oBAAMkB,kBAAkB,0BAAW,gBAAOC,uBAAlB,sBACrB,gBAAO5B,8BADc,EACmBS,OAAOZ,KAAP,KAAiB,OAAKD,KAAL,CAAWC,KAD/C,GAErBY,OAAOoB,SAFc,CAAxB;AAGA,oBAAI,CAAEpB,OAAOD,QAAb,EAAuB;AACrBC,yBAAOD,QAAP,GAAkB,OAAKA,QAAL,CAAcsB,IAAd,CAAmB,IAAnB,EAAyBrB,MAAzB,CAAlB,CADqB,CACgC;AACtD;AACD,uBAAO;AAAA;AAAA,oBAAI,KAAKA,OAAOZ,KAAhB;AACH,+BAAW8B,eADR;AAEL;AAAA;AAAA,sBAAM,IAAIR,uBAAuBA,oBAAoBV,OAAOZ,KAA3B,CAAjC;AACI,iCAAW,KADf;AAEI,mCAAa,OAAKO,YAFtB;AAGI,+BAASK,OAAOD,QAHpB;AAIGC,2BAAOsB;AAJV;AAFK,iBAAP;AASD,eAhBD;AAFJ;AADF;AAHF;AADK,OAAP;AA6BD;;;;;;AAGHrC,iBAAiBsC,SAAjB,GAA6B;AAC3Bd,WAAS,oBAAUe,OAAV,CACP,oBAAUC,KAAV,CAAgB;AACdH,UAAM,oBAAUI,IADF;AAEdtC,WAAO,oBAAUuC,MAFH;AAGdP,eAAW,oBAAUO;AAHP,GAAhB,CADO,EAKHC,UANqB;AAO3BxC,SAAO,oBAAUuC,MAPU;AAQ3BjB,uBAAqB,oBAAUmB,IAAV,CAAeD,UART;AAS3BtB,YAAU,oBAAUuB,IATO;AAU3BX,mBAAiB,oBAAUS;AAVA,CAA7B;;kBAae1C,gB","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router';\nimport classnames from 'classnames';\nimport is from 'is_js';\nimport HorizontalScroll from '../HorizontalScroll';\nimport PropTypes from 'prop-types';\n\nconst wasLeftMouseButtonPressed = (e = window.event) => {\n  const button = e.which || e.button;\n  return button === 1;\n};\n\nconst movementLimit = 20;\n\nclass HorizontalSelect extends PureComponent {\n  constructor(props) {\n    super();\n    this.state = { value: props.value };\n    this.scrollToElement = {\n      selector: `.${styles.HorizontalSelect_option_active}`,\n      duration: 300,\n      easing: { style: 'ease-in-out' },\n    };\n\n    // this collection of goodies will prevent `onclick` firing after an x-axis drag\n    this._onMouseDown = (e) => {\n      if (! wasLeftMouseButtonPressed(e.nativeEvent)) return;\n      this._startMouseX = e.screenX;\n    };\n    this._onClick = (option, e) => {\n      const movement = Math.abs(this._startMouseX - e.screenX);\n      if (this._startMouseX && movement > movementLimit) {\n        // x-axis drag happened; block click\n        e.preventDefault();\n        return false;\n      }\n      this._onOptionSelect(option.value);\n    };\n    this._onOptionSelect = (value) => {\n      this.props.onSelect && this.props.onSelect(value);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      this.setState({ value: nextProps.value });\n    }\n  }\n\n  render() {\n    const { options, getLinkHrefForValue } = this.props;\n    if (! is.existy(options) || options.length === 0) {\n      return null;\n    }\n    return <div className={styles.HorizontalSelect_wrap}>\n      <HorizontalScroll className={styles.HorizontalSelect}\n          innerClassName={styles.HorizontalSelect_scroller}\n          scrollToElement={this.scrollToElement}>\n        <div className={styles.HorizontalSelect_options_wrap}>\n          <ul className={styles.HorizontalSelect_options}>\n            {\n              options.map((option) => {\n                const optionClassName = classnames(styles.HorizontalSelect_option, {\n                  [styles.HorizontalSelect_option_active]: option.value === this.state.value,\n                }, option.className);\n                if (! option._onClick) {\n                  option._onClick = this._onClick.bind(null, option);  // eslint-disable-line\n                }\n                return <li key={option.value}\n                    className={optionClassName}>\n                  <Link to={getLinkHrefForValue && getLinkHrefForValue(option.value)}\n                      draggable={false}\n                      onMouseDown={this._onMouseDown}\n                      onClick={option._onClick}>\n                    {option.html}\n                  </Link>\n                </li>;\n              })\n            }\n          </ul>\n        </div>\n      </HorizontalScroll>\n    </div>;\n  }\n}\n\nHorizontalSelect.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      html: PropTypes.node,\n      value: PropTypes.string,\n      className: PropTypes.string,\n    })).isRequired,\n  value: PropTypes.string,\n  getLinkHrefForValue: PropTypes.func.isRequired,\n  onSelect: PropTypes.func,\n  optionClassName: PropTypes.string,\n};\n\nexport default HorizontalSelect;\n"]}
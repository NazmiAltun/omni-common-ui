{"version":3,"sources":["components/HorizontalSelect/index.jsx"],"names":["wasLeftMouseButtonPressed","e","window","event","button","which","movementLimit","HorizontalSelect","props","state","value","scrollToElement","selector","HorizontalSelect_option_active","duration","easing","style","_onMouseDown","nativeEvent","_startMouseX","screenX","_onClick","option","movement","Math","abs","preventDefault","_onOptionSelect","onSelect","nextProps","setState","getLinkHrefForValue","HorizontalSelect_options","options","map","optionClassName","HorizontalSelect_option","className","bind","html","isHide","HorizontalSelect_scroller","HorizontalSelect_options_wrap","_renderOptions","existy","length","HorizontalSelect_wrap","_renderHorizontalSelect","propTypes","arrayOf","shape","node","string","isRequired","func","bool"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,4BAA4B,SAA5BA,yBAA4B,GAAsB;AAAA,MAArBC,CAAqB,uEAAjBC,OAAOC,KAAU;;AACtD,MAAMC,SAASH,EAAEI,KAAF,IAAWJ,EAAEG,MAA5B;AACA,SAAOA,WAAW,CAAlB;AACD,CAHD;;AAKA,IAAME,gBAAgB,EAAtB;;IAEMC,gB;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,UAAKC,KAAL,GAAa,EAAEC,OAAOF,MAAME,KAAf,EAAb;AACA,UAAKC,eAAL,GAAuB;AACrBC,sBAAc,gBAAOC,8BADA;AAErBC,gBAAU,GAFW;AAGrBC,cAAQ,EAAEC,OAAO,aAAT;AAHa,KAAvB;;AAMA;AACA,UAAKC,YAAL,GAAoB,UAAChB,CAAD,EAAO;AACzB,UAAI,CAAED,0BAA0BC,EAAEiB,WAA5B,CAAN,EAAgD;AAChD,YAAKC,YAAL,GAAoBlB,EAAEmB,OAAtB;AACD,KAHD;AAIA,UAAKC,QAAL,GAAgB,UAACC,MAAD,EAASrB,CAAT,EAAe;AAC7B,UAAMsB,WAAWC,KAAKC,GAAL,CAAS,MAAKN,YAAL,GAAoBlB,EAAEmB,OAA/B,CAAjB;AACA,UAAI,MAAKD,YAAL,IAAqBI,WAAWjB,aAApC,EAAmD;AACjD;AACAL,UAAEyB,cAAF;AACA,eAAO,KAAP;AACD;AACD,YAAKC,eAAL,CAAqBL,OAAOZ,KAA5B;AACD,KARD;AASA,UAAKiB,eAAL,GAAuB,UAACjB,KAAD,EAAW;AAChC,YAAKF,KAAL,CAAWoB,QAAX,IAAuB,MAAKpB,KAAL,CAAWoB,QAAX,CAAoBlB,KAApB,CAAvB;AACD,KAFD;AAvBiB;AA0BlB;;;;8CAEyBmB,S,EAAW;AACnC,UAAI,KAAKrB,KAAL,CAAWE,KAAX,KAAqBmB,UAAUnB,KAAnC,EAA0C;AACxC,aAAKoB,QAAL,CAAc,EAAEpB,OAAOmB,UAAUnB,KAAnB,EAAd;AACD;AACF;;;qCAEgB;AAAA;;AAAA,UACPqB,mBADO,GACiB,KAAKvB,KADtB,CACPuB,mBADO;;AAEf,aAAO;AAAA;AAAA,UAAI,WAAW,gBAAOC,wBAAtB;AAEH,aAAKxB,KAAL,CAAWyB,OAAX,CAAmBC,GAAnB,CAAuB,UAACZ,MAAD,EAAY;AACjC,cAAMa,kBAAkB,0BAAW,gBAAOC,uBAAlB,sBACrB,gBAAOvB,8BADc,EACmBS,OAAOZ,KAAP,KAAiB,OAAKD,KAAL,CAAWC,KAD/C,GAErBY,OAAOe,SAFc,CAAxB;AAGA,cAAI,CAAEf,OAAOD,QAAb,EAAuB;AACrBC,mBAAOD,QAAP,GAAkB,OAAKA,QAAL,CAAciB,IAAd,CAAmB,IAAnB,EAAyBhB,MAAzB,CAAlB,CADqB,CACgC;AACtD;AACD,iBAAO;AAAA;AAAA,cAAI,KAAKA,OAAOZ,KAAhB,EAAuB,WAAWyB,eAAlC;AACL;AAAA;AAAA,gBAAM,IAAIJ,uBAAuBA,oBAAoBT,OAAOZ,KAA3B,CAAjC;AACI,2BAAW,KADf;AAEI,6BAAa,OAAKO,YAFtB;AAGI,yBAASK,OAAOD,QAHpB;AAIGC,qBAAOiB;AAJV;AADK,WAAP;AAQD,SAfD;AAFG,OAAP;AAoBD;;;8CAEyB;AACxB,aAAO;AAAA;AAAA,UAAyB,UAAU,CAAE,KAAK/B,KAAL,CAAWgC,MAAhD,EAAwD,QAAQ,GAAhE;AACL;AAAA;AAAA,YAAkB,WAAW,gBAAOjC,gBAApC;AACI,4BAAgB,gBAAOkC,yBAD3B;AAEI,6BAAiB,KAAK9B,eAF1B;AAGE;AAAA;AAAA,cAAK,WAAW,gBAAO+B,6BAAvB;AACG,iBAAKC,cAAL;AADH;AAHF;AADK,OAAP;AASD;;;6BAEQ;AAAA,UACCV,OADD,GACa,KAAKzB,KADlB,CACCyB,OADD;;AAEP,UAAI,CAAE,gBAAGW,MAAH,CAAUX,OAAV,CAAF,IAAwBA,QAAQY,MAAR,KAAmB,CAA/C,EAAkD;AAChD,eAAO,IAAP;AACD;AACD,aAAO;AAAA;AAAA,UAAK,WAAW,gBAAOC,qBAAvB;AACJ,aAAKC,uBAAL;AADI,OAAP;AAGD;;;;;;AAGHxC,iBAAiByC,SAAjB,GAA6B;AAC3Bf,WAAS,oBAAUgB,OAAV,CACP,oBAAUC,KAAV,CAAgB;AACdX,UAAM,oBAAUY,IADF;AAEdzC,WAAO,oBAAU0C,MAFH;AAGdf,eAAW,oBAAUe;AAHP,GAAhB,CADO,EAKHC,UANqB;AAO3B3C,SAAO,oBAAU0C,MAPU;AAQ3BrB,uBAAqB,oBAAUuB,IAAV,CAAeD,UART;AAS3BzB,YAAU,oBAAU0B,IATO;AAU3BnB,mBAAiB,oBAAUiB,MAVA;AAW3BZ,UAAQ,oBAAUe;AAXS,CAA7B;;kBAcehD,gB","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport is from 'is_js';\nimport HorizontalScroll from '../HorizontalScroll';\nimport ExpandableAnimationItem from '../ExpandableAnimationItem';\n\nconst wasLeftMouseButtonPressed = (e = window.event) => {\n  const button = e.which || e.button;\n  return button === 1;\n};\n\nconst movementLimit = 20;\n\nclass HorizontalSelect extends PureComponent {\n  constructor(props) {\n    super();\n    this.state = { value: props.value };\n    this.scrollToElement = {\n      selector: `.${styles.HorizontalSelect_option_active}`,\n      duration: 300,\n      easing: { style: 'ease-in-out' },\n    };\n\n    // this collection of goodies will prevent `onclick` firing after an x-axis drag\n    this._onMouseDown = (e) => {\n      if (! wasLeftMouseButtonPressed(e.nativeEvent)) return;\n      this._startMouseX = e.screenX;\n    };\n    this._onClick = (option, e) => {\n      const movement = Math.abs(this._startMouseX - e.screenX);\n      if (this._startMouseX && movement > movementLimit) {\n        // x-axis drag happened; block click\n        e.preventDefault();\n        return false;\n      }\n      this._onOptionSelect(option.value);\n    };\n    this._onOptionSelect = (value) => {\n      this.props.onSelect && this.props.onSelect(value);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      this.setState({ value: nextProps.value });\n    }\n  }\n\n  _renderOptions() {\n    const { getLinkHrefForValue } = this.props;\n    return <ul className={styles.HorizontalSelect_options}>\n      {\n        this.props.options.map((option) => {\n          const optionClassName = classnames(styles.HorizontalSelect_option, {\n            [styles.HorizontalSelect_option_active]: option.value === this.state.value,\n          }, option.className);\n          if (! option._onClick) {\n            option._onClick = this._onClick.bind(null, option);  // eslint-disable-line\n          }\n          return <li key={option.value} className={optionClassName}>\n            <Link to={getLinkHrefForValue && getLinkHrefForValue(option.value)}\n                draggable={false}\n                onMouseDown={this._onMouseDown}\n                onClick={option._onClick}>\n              {option.html}\n            </Link>\n          </li>;\n        })\n      }\n    </ul>;\n  }\n\n  _renderHorizontalSelect() {\n    return <ExpandableAnimationItem isExpand={! this.props.isHide} height={150}>\n      <HorizontalScroll className={styles.HorizontalSelect}\n          innerClassName={styles.HorizontalSelect_scroller}\n          scrollToElement={this.scrollToElement}>\n        <div className={styles.HorizontalSelect_options_wrap}>\n          {this._renderOptions()}\n        </div>\n      </HorizontalScroll>\n    </ExpandableAnimationItem>;\n  }\n\n  render() {\n    const { options } = this.props;\n    if (! is.existy(options) || options.length === 0) {\n      return null;\n    }\n    return <div className={styles.HorizontalSelect_wrap}>\n      {this._renderHorizontalSelect()}\n    </div>;\n  }\n}\n\nHorizontalSelect.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      html: PropTypes.node,\n      value: PropTypes.string,\n      className: PropTypes.string,\n    })).isRequired,\n  value: PropTypes.string,\n  getLinkHrefForValue: PropTypes.func.isRequired,\n  onSelect: PropTypes.func,\n  optionClassName: PropTypes.string,\n  isHide: PropTypes.bool,\n};\n\nexport default HorizontalSelect;\n"]}
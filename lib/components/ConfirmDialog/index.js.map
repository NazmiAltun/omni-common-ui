{"version":3,"sources":["components/ConfirmDialog/index.jsx"],"names":["ConfirmDialog","children","title","content","primaryButtonContent","secondaryButtonContent","onPrimaryClick","onSecondaryClick","onRequestClose","isOpen","isLoading","isButtonless","function","source","ConfirmDialog_title","ConfirmDialog_icon","ConfirmDialog_content","ConfirmDialog_buttons","Type","primary","ConfirmDialog_button","default","propTypes","PropTypes","bool","node","string","isRequired","func"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB;AAAA,MACpBC,QADoB,QACpBA,QADoB;AAAA,MAEpBC,KAFoB,QAEpBA,KAFoB;AAAA,MAGpBC,OAHoB,QAGpBA,OAHoB;AAAA,MAIpBC,oBAJoB,QAIpBA,oBAJoB;AAAA,MAKpBC,sBALoB,QAKpBA,sBALoB;AAAA,MAMpBC,cANoB,QAMpBA,cANoB;AAAA,MAOpBC,gBAPoB,QAOpBA,gBAPoB;AAAA,MAQpBC,eARoB,QAQpBA,cARoB;AAAA,MASpBC,MAToB,QASpBA,MAToB;AAAA,MAUpBC,SAVoB,QAUpBA,SAVoB;AAAA,MAWpBC,YAXoB,QAWpBA,YAXoB;AAAA,SAYhB;AAAA;AAAA,MAAQ,QAAQF,MAAhB;AACF,uBAAiB,gBAAGG,QAAH,CAAYJ,eAAZ,CADf;AAEF,iBAAWE,SAFT;AAGF,sBAAgB,wBAACG,MAAD;AAAA,eAAaL,mBAAkBK,WAAW,QAA7B,GAAwCL,gBAAeK,MAAf,CAAxC,GAAiE,IAA9E;AAAA,OAHd;AAIJ;AAAA;AAAA,QAAK,WAAW,gBAAOb,aAAvB;AAEIE,cACE;AAAA;AAAA,UAAK,WAAW,gBAAOY,mBAAvB;AAA6CZ;AAA7C,OADF,GAEE,gDAAM,IAAG,MAAT,EAAgB,WAAW,gBAAOa,kBAAlC,GAJN;AAME;AAAA;AAAA,UAAK,WAAW,gBAAOC,qBAAvB;AACE;AAAA;AAAA;AAAOb;AAAP,SADF;AAEGF;AAFH,OANF;AAWI,OAAEU,YAAF,IACA;AAAA,yBAAQ,SAAR;AAAA,UAAkB,WAAW,gBAAOM,qBAApC;AACI,iBAAM,QADV;AAEE;AAAA;AAAA,YAAQ,MAAM,iBAAOC,IAAP,CAAYC,OAA1B;AACI,uBAAW,gBAAOC,oBADtB;AAEI,qBAAS;AAAA,qBAAMd,gBAAN;AAAA,aAFb;AAGGF;AAHH,SAFF;AAQIC,kCACA;AAAA;AAAA,YAAQ,MAAM,iBAAOa,IAAP,CAAYG,OAA1B;AACI,uBAAW,gBAAOD,oBADtB;AAEI,qBAAS;AAAA,qBAAMb,kBAAN;AAAA,aAFb;AAGGF;AAHH;AATJ;AAZJ;AAJI,GAZgB;AAAA,CAAtB;;AAgDAL,cAAcsB,SAAd,GAA0B;AACxBb,UAAQ,gBAAMc,SAAN,CAAgBC,IADA;AAExBd,aAAW,gBAAMa,SAAN,CAAgBC,IAFH;AAGxBb,gBAAc,gBAAMY,SAAN,CAAgBC,IAHN;AAIxBvB,YAAU,gBAAMsB,SAAN,CAAgBE,IAJF;AAKxBvB,SAAO,gBAAMqB,SAAN,CAAgBG,MALC;AAMxBvB,WAAS,gBAAMoB,SAAN,CAAgBG,MAND;AAOxBtB,wBAAsB,gBAAMmB,SAAN,CAAgBG,MAAhB,CAAuBC,UAPrB;AAQxBtB,0BAAwB,gBAAMkB,SAAN,CAAgBG,MARhB;AASxBpB,kBAAgB,gBAAMiB,SAAN,CAAgBK,IATR;AAUxBrB,oBAAkB,gBAAMgB,SAAN,CAAgBK,IAVV;AAWxBpB,kBAAgB,gBAAMe,SAAN,CAAgBK;AAXR,CAA1B;;kBAce5B,a","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React from 'react';\nimport is from 'is_js';\n\nimport Dialog from 'components/Dialog';\nimport Button from 'components/Button';\nimport Icon from 'components/Icon';\n\nconst ConfirmDialog = ({\n  children,\n  title,\n  content,\n  primaryButtonContent,\n  secondaryButtonContent,\n  onPrimaryClick,\n  onSecondaryClick,\n  onRequestClose,\n  isOpen,\n  isLoading,\n  isButtonless,\n}) => <Dialog isOpen={isOpen}\n    withCloseButton={is.function(onRequestClose)}\n    isLoading={isLoading}\n    onRequestClose={(source) => (onRequestClose && source === 'button' ? onRequestClose(source) : null)}>\n  <div className={styles.ConfirmDialog}>\n    {\n      title ?\n        <div className={styles.ConfirmDialog_title}>{title}</div> :\n        <Icon id=\"info\" className={styles.ConfirmDialog_icon} />\n    }\n    <div className={styles.ConfirmDialog_content}>\n      <span>{content}</span>\n      {children}\n    </div>\n    {\n      ! isButtonless &&\n      <Button.Container className={styles.ConfirmDialog_buttons}\n          align=\"center\">\n        <Button type={Button.Type.primary}\n            className={styles.ConfirmDialog_button}\n            onClick={() => onPrimaryClick()}>\n          {primaryButtonContent}\n        </Button>\n        {\n          secondaryButtonContent &&\n          <Button type={Button.Type.default}\n              className={styles.ConfirmDialog_button}\n              onClick={() => onSecondaryClick()} >\n            {secondaryButtonContent}\n          </Button>\n        }\n      </Button.Container>\n    }\n  </div>\n</Dialog>;\n\nConfirmDialog.propTypes = {\n  isOpen: React.PropTypes.bool,\n  isLoading: React.PropTypes.bool,\n  isButtonless: React.PropTypes.bool,\n  children: React.PropTypes.node,\n  title: React.PropTypes.string,\n  content: React.PropTypes.string,\n  primaryButtonContent: React.PropTypes.string.isRequired,\n  secondaryButtonContent: React.PropTypes.string,\n  onPrimaryClick: React.PropTypes.func,\n  onSecondaryClick: React.PropTypes.func,\n  onRequestClose: React.PropTypes.func,\n};\n\nexport default ConfirmDialog;\n"]}
{"version":3,"sources":["components/Breadcrumbs/spec.jsx"],"names":["groupLink","label","href","clickable","markAttendanceLink","wrapper","beforeEach","test","expect","find","Breadcrumbs_crumb","toHaveLength","Breadcrumbs_crumb_back","last","text","toBe","first"],"mappings":";;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAY;AAChBC,SAAO,QADS;AAEhBC,QAAM,UAFU;AAGhBC,aAAW;AAHK,CAAlB;;AAMA,IAAMC,qBAAqB;AACzBH,SAAO,iBADkB;AAEzBE,aAAW;AAFc,CAA3B;;AAKA,IAAIE,gBAAJ;;AAEAC,WAAW,YAAM;AACfD,YAAU,qBAAQ,4CAAa,OAAO,CAACL,SAAD,EAAYI,kBAAZ,CAApB,GAAR,CAAV;AACD,CAFD;;AAIAG,KAAK,kCAAL,EAAyC,YAAM;AAC7CC,SAAOH,QAAQI,IAAR,OAAiB,gBAAOC,iBAAxB,CAAP,EAAqDC,YAArD,CAAkE,CAAlE;AACD,CAFD;;AAIAJ,KAAK,wCAAL,EAA+C,YAAM;AACnDC,SAAOH,QAAQI,IAAR,OAAiB,gBAAOG,sBAAxB,CAAP,EAA0DD,YAA1D,CAAuE,CAAvE;AACD,CAFD;;AAIAJ,KAAK,sCAAL,EAA6C,YAAM;AACjDC,SAAOH,QAAQI,IAAR,OAAiB,gBAAOC,iBAAxB,EAA6CG,IAA7C,GAAoDJ,IAApD,CAAyD,MAAzD,EAAiEK,IAAjE,EAAP,EAAgFC,IAAhF,CAAqF,iBAArF;AACAP,SAAOH,QAAQI,IAAR,OAAiB,gBAAOC,iBAAxB,EAA6CM,KAA7C,GAAqDP,IAArD,mBAAP,EAAwEE,YAAxE,CAAqF,CAArF;AACD,CAHD","file":"spec.js","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport { Link } from 'react-router';\nimport Breadcrumbs from './';\nimport styles from './style.postcss';\n\nconst groupLink = {\n  label: 'group1',\n  href: '/group/1',\n  clickable: true,\n};\n\nconst markAttendanceLink = {\n  label: 'mark attendance',\n  clickable: false,\n};\n\nlet wrapper;\n\nbeforeEach(() => {\n  wrapper = shallow(<Breadcrumbs items={[groupLink, markAttendanceLink]} />);\n});\n\ntest('links has been rendered properly', () => {\n  expect(wrapper.find(`.${styles.Breadcrumbs_crumb}`)).toHaveLength(2);\n});\n\ntest('back button has been rendered properly', () => {\n  expect(wrapper.find(`.${styles.Breadcrumbs_crumb_back}`)).toHaveLength(1);\n});\n\ntest('only render the first item as a link', () => {\n  expect(wrapper.find(`.${styles.Breadcrumbs_crumb}`).last().find('span').text()).toBe('mark attendance');\n  expect(wrapper.find(`.${styles.Breadcrumbs_crumb}`).first().find(Link)).toHaveLength(1);\n});\n"]}
{"version":3,"sources":["components/ProgressBar/index.jsx"],"names":["ProgressBar","props","value","max","__rounded","rounded","__larger","larger","className","ProgressBar_progress","width","percentage","fraction","number","clamp","fract","Math","min","round","propTypes","PropTypes","string","bool"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA;;AAAA,MACrBC,KADqB,GACND,KADM,CACrBC,KADqB;AAAA,MACdC,GADc,GACNF,KADM,CACdE,GADc;;;AAG7B,SAAO;AAAA;AAAA,MAAK,WAAW,0BAAW,gBAAOH,WAAlB,kDACpB,gBAAOI,SADa,EACD,CAAC,CAAEH,MAAMI,OADR,gCAEpB,gBAAOC,QAFa,EAEF,CAAC,CAAEL,MAAMM,MAFP,iBAGpBN,MAAMO,SAHc,CAAhB;AAIL,2CAAK,WAAW,gBAAOC,oBAAvB;AACI,aAAO,EAAEC,OAAOC,WAAWT,KAAX,EAAkBC,GAAlB,CAAT,EADX;AAJK,GAAP;AAOD,CAVD;;AAYA,SAASS,QAAT,GAAkC;AAAA,MAAhBV,KAAgB,uEAAR,CAAQ;AAAA,MAALC,GAAK;;AAChC,MAAI,gBAAGU,MAAH,CAAUV,GAAV,CAAJ,EAAoB;AAClB,WAAOD,QAAQC,GAAf;AACD;;AAED,MAAID,QAAQ,GAAZ,EAAiB;AACfA,YAAQ,GAAR,CADe,CACD;AACf;;AAED,SAAOA,QAAQ,GAAf;AACD;;AAED,SAASY,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAOC,KAAKC,GAAL,CAAS,CAAT,EACLD,KAAKb,GAAL,CAAS,CAAT,EAAYY,KAAZ,CADK,CAAP;AAGD;;AAED,SAASJ,UAAT,CAAoBT,KAApB,EAA2BC,GAA3B,EAAgC;AAC9B,SAAOa,KAAKE,KAAL,EAAa;AAClBJ,QACEF,SAASV,KAAT,EAAgBC,GAAhB,CADF,IAEI,GAHC,IAIH,GAJJ;AAKD;;AAEDH,YAAYmB,SAAZ,GAAwB;AACtBX,aAAW,gBAAMY,SAAN,CAAgBC,MADL;AAEtBnB,SAAO,gBAAMkB,SAAN,CAAgBP,MAFD;AAGtBV,OAAK,gBAAMiB,SAAN,CAAgBP,MAHC;AAItBR,WAAS,gBAAMe,SAAN,CAAgBE,IAJH;AAKtBf,UAAQ,gBAAMa,SAAN,CAAgBE;AALF,CAAxB;;kBAQetB,W","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React from 'react';\nimport is from 'is_js';\nimport classnames from 'classnames';\n\nconst ProgressBar = (props) => {\n  const { value, max } = props;\n\n  return <div className={classnames(styles.ProgressBar, {\n    [styles.__rounded]: !! props.rounded,\n    [styles.__larger]: !! props.larger,\n  }, props.className)}>\n    <div className={styles.ProgressBar_progress}\n        style={{ width: percentage(value, max) }} />\n  </div>;\n};\n\nfunction fraction(value = 0, max) {\n  if (is.number(max)) {\n    return value / max;\n  }\n\n  if (value > 100) {\n    value = 100;  // eslint-disable-line\n  }\n\n  return value / 100;\n}\n\nfunction clamp(fract) {\n  return Math.min(1,\n    Math.max(0, fract)\n  );\n}\n\nfunction percentage(value, max) {\n  return Math.round(  // eslint-disable-line\n    clamp(\n      fraction(value, max)\n    ) * 100\n  ) + '%';\n}\n\nProgressBar.propTypes = {\n  className: React.PropTypes.string,\n  value: React.PropTypes.number,\n  max: React.PropTypes.number,\n  rounded: React.PropTypes.bool,\n  larger: React.PropTypes.bool,\n};\n\nexport default ProgressBar;\n"]}
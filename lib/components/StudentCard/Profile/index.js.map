{"version":3,"sources":["components/StudentCard/Profile/index.jsx"],"names":["Profile","props","withSeparatorLine","backgroundless","vertical","status","statusHighlighted","renderName","prop","name","nameClasses","nameLink","nameProps","className","existy","getStr","undefined","nameClass","StudentCard_profile_name","__vertical","localNameClass","StudentCard_profile_localName","surname","avatarUrl","gender","localName","withBiggerAvatar","contextTypes","bool","propTypes","string","any","statusInitial"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,UAAU,SAAVA,OAAU,CAACC,KAAD,QAA4D;AAAA,MAAlDC,iBAAkD,QAAlDA,iBAAkD;AAAA,MAA/BC,cAA+B,QAA/BA,cAA+B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAAA,MAClEC,MADkE,GACpCJ,KADoC,CAClEI,MADkE;AAAA,MAC1DC,iBAD0D,GACpCL,KADoC,CAC1DK,iBAD0D;;;AAG1E,MAAMC,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAOC,IAAP,EAAaC,WAAb,EAA0BC,QAA1B,EAAuC;AACxD,QAAI,CAAEF,IAAN,EAAY;AACV;AACD;AACD,QAAMG,YAAY,EAAEC,WAAWH,WAAb,EAA0B,aAAaF,IAAvC,EAAlB;AACA,WAAO,gBAAGM,MAAH,CAAUH,QAAV,IACL;AAAA;AAAA,mBAAUC,SAAV,IAAqB,IAAID,QAAzB;AAAoCF;AAApC,KADK,GAEL;AAAA;AAASG,eAAT;AAAqBH;AAArB,KAFF;AAGD,GARD;;AAUA,MAAMM,SAAS,SAATA,MAAS,CAACN,IAAD,EAAU;AACvB,QAAI,gBAAGO,SAAH,CAAaP,IAAb,CAAJ,EAAwB;AACtB,aAAO,EAAP;AACD;AACD,WAAOA,IAAP;AACD,GALD;;AAOA,MAAMQ,YAAY,0BAAW,gBAAOC,wBAAlB,EAChB,yBAAU,kBAAV,CADgB,sBAEb,gBAAOC,UAFM,EAEOf,QAFP,EAAlB;;AAKA,MAAMgB,iBAAiB,0BAAW,gBAAOC,6BAAlB,EACrB,yBAAU,uBAAV,CADqB,sBAElB,gBAAOF,UAFW,EAEEf,QAFF,EAAvB;;AAKA,MAAMK,OAAUM,OAAOd,MAAMQ,IAAb,CAAV,SAAgCM,OAAOd,MAAMqB,OAAb,CAAtC;;AAEA,SAAO;AAAA,mBAAM,OAAN;AAAA,MAAc,0BAAd;AACL,6CAAa,MAAb,IAAoB,WAAWrB,MAAMY,SAArC;AACI,iBAAWZ,MAAMsB,SADrB;AAEI,cAAQtB,MAAMuB,MAFlB;AAGI,gBAAUjB,WAAW,MAAX,EAAmBE,IAAnB,EAAyBQ,SAAzB,EAAoChB,MAAMU,QAA1C,CAHd;AAII,qBAAeJ,WAAW,WAAX,EAAwBN,MAAMwB,SAA9B,EAAyCL,cAAzC,CAJnB;AAKI,sBAAgBjB,cALpB;AAMI,gBAAUC,QANd;AAOI,wBAAkBH,MAAMyB,gBAP5B;AAQI,yBAAmBxB,iBARvB;AASI,iCAA2B,yBAAU,oBAAV,CAT/B;AAUI,wBAAkBG,MAVtB;AAWI,mCAA6BC,iBAXjC;AADK,GAAP;AAcD,CA9CD;;AAgDAN,QAAQ2B,YAAR,GAAuB;AACrBxB,kBAAgB,oBAAUyB,IADL;AAErB1B,qBAAmB,oBAAU0B,IAFR;AAGrBxB,YAAU,oBAAUwB;AAHC,CAAvB;;AAMA5B,QAAQ6B,SAAR,GAAoB;AAClBhB,aAAW,oBAAUiB,MADH;AAElBrB,QAAM,oBAAUqB,MAFE;AAGlBR,WAAS,oBAAUQ,MAHD;AAIlBL,aAAW,oBAAUK,MAJH;AAKlBN,UAAQ,oBAAUO,GALA;AAMlBR,aAAW,oBAAUO,MANH;AAOlBzB,UAAQ,oBAAUyB,MAPA;AAQlBE,iBAAe,oBAAUF,MARP;AASlBxB,qBAAmB,oBAAUsB,IATX;AAUlBF,oBAAkB,oBAAUE,IAVV;AAWlBjB,YAAU,oBAAUmB;AAXF,CAApB;;kBAce9B,O","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport classnames from 'classnames';\nimport is from 'is_js';\nimport Card from 'components/Card';\nimport testClass from 'domain/testClass';\nimport StudentCard from '../';\n\nconst Profile = (props, { withSeparatorLine, backgroundless, vertical }) => {\n  const { status, statusHighlighted } = props;\n\n  const renderName = (prop, name, nameClasses, nameLink) => {\n    if (! name) {\n      return;\n    }\n    const nameProps = { className: nameClasses, 'data-prop': prop };\n    return is.existy(nameLink) ?\n      <Link {...nameProps} to={nameLink}>{name}</Link> :\n      <div {...nameProps}>{name}</div>;\n  };\n\n  const getStr = (name) => {\n    if (is.undefined(name)) {\n      return '';\n    }\n    return name;\n  };\n\n  const nameClass = classnames(styles.StudentCard_profile_name,\n    testClass('studentCard-name'),\n    { [styles.__vertical]: vertical }\n  );\n\n  const localNameClass = classnames(styles.StudentCard_profile_localName,\n    testClass('studentCard-localName'),\n    { [styles.__vertical]: vertical }\n  );\n\n  const name = `${getStr(props.name)} ${getStr(props.surname)}`;\n\n  return <Card.Content withoutBottomPadding>\n    <StudentCard.Person className={props.className}\n        avatarUrl={props.avatarUrl}\n        gender={props.gender}\n        nameNode={renderName('name', name, nameClass, props.nameLink)}\n        localNameNode={renderName('localName', props.localName, localNameClass)}\n        backgroundless={backgroundless}\n        vertical={vertical}\n        withBiggerAvatar={props.withBiggerAvatar}\n        withSeparatorLine={withSeparatorLine}\n        productionStatusClassName={testClass('studentCard-status')}\n        productionStatus={status}\n        productionStatusHighlighted={statusHighlighted} />\n  </Card.Content>;\n};\n\nProfile.contextTypes = {\n  backgroundless: PropTypes.bool,\n  withSeparatorLine: PropTypes.bool,\n  vertical: PropTypes.bool,\n};\n\nProfile.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string,\n  surname: PropTypes.string,\n  localName: PropTypes.string,\n  gender: PropTypes.any,\n  avatarUrl: PropTypes.string,\n  status: PropTypes.string,\n  statusInitial: PropTypes.string,\n  statusHighlighted: PropTypes.bool,\n  withBiggerAvatar: PropTypes.bool,\n  nameLink: PropTypes.string,\n};\n\nexport default Profile;\n"]}
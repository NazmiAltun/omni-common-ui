{"version":3,"sources":["components/PerformanceProfiler/index.jsx"],"names":["PerformanceProfiler","props","state","started","stop","start","setState","lastMeasurements","getLastMeasurements","printWasted","printOperations","PerformanceProfiler_button","toggle","Type","primary","PerformanceProfiler_button_icon","default","Component"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,mB;;;AACJ,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA,0IACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAAEC,SAAS,KAAX,EAAb;AAFiB;AAGlB;;;;6BAEQ;AAAA,UACCA,OADD,GACa,KAAKD,KADlB,CACCC,OADD;;AAEPA,gBAAU,0BAAUC,IAAV,EAAV,GAA6B,0BAAUC,KAAV,EAA7B;AACA,WAAKC,QAAL,CAAc,EAAEH,SAAS,CAAEA,OAAb,EAAd;AACD;;;kCAEa;AACZ,UAAMI,mBAAmB,0BAAUC,mBAAV,EAAzB;AACA,gCAAUC,WAAV,CAAsBF,gBAAtB;AACD;;;sCAEiB;AAChB,UAAMA,mBAAmB,0BAAUC,mBAAV,EAAzB;AACA,gCAAUE,eAAV,CAA0BH,gBAA1B;AACD;;;6BAEQ;AAAA;;AAAA,UACCJ,OADD,GACa,KAAKD,KADlB,CACCC,OADD;;AAEP,aAAO;AAAA;AAAA,UAAK,WAAW,gBAAOH,mBAAvB;AACL;AAAA;AAAA,YAAQ,WAAW,gBAAOW,0BAA1B;AACI,qBAAS;AAAA,qBAAM,OAAKC,MAAL,EAAN;AAAA,aADb;AAEI,kBAAM,iBAAOC,IAAP,CAAYC,OAFtB;AAGE,0DAAM,WAAW,gBAAOC,+BAAxB;AACI,gBAAIZ,UAAU,OAAV,GAAoB,kBAD5B;AAHF,SADK;AAOL;AAAA;AAAA,YAAQ,WAAW,gBAAOQ,0BAA1B;AACI,qBAAS;AAAA,qBAAM,OAAKF,WAAL,EAAN;AAAA,aADb;AAEI,kBAAM,iBAAOI,IAAP,CAAYG,OAFtB;AAGE,0DAAM,WAAW,gBAAOD,+BAAxB;AACI,gBAAG,OADP;AAHF,SAPK;AAaL;AAAA;AAAA,YAAQ,WAAW,gBAAOJ,0BAA1B;AACI,qBAAS;AAAA,qBAAM,OAAKD,eAAL,EAAN;AAAA,aADb;AAEI,kBAAM,iBAAOG,IAAP,CAAYG,OAFtB;AAGE,0DAAM,WAAW,gBAAOD,+BAAxB;AACI,gBAAG,cADP;AAHF;AAbK,OAAP;AAoBD;;;;EA5C+B,gBAAME,S;;kBA+CzBjB,mB","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React from 'react';\nimport ReactPerf from 'react-addons-perf';\nimport Button from 'components/Button';\nimport Icon from 'components/Icon';\n\nclass PerformanceProfiler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { started: false };\n  }\n\n  toggle() {\n    const { started } = this.state;\n    started ? ReactPerf.stop() : ReactPerf.start();\n    this.setState({ started: ! started });\n  }\n\n  printWasted() {\n    const lastMeasurements = ReactPerf.getLastMeasurements();\n    ReactPerf.printWasted(lastMeasurements);\n  }\n\n  printOperations() {\n    const lastMeasurements = ReactPerf.getLastMeasurements();\n    ReactPerf.printOperations(lastMeasurements);\n  }\n\n  render() {\n    const { started } = this.state;\n    return <div className={styles.PerformanceProfiler}>\n      <Button className={styles.PerformanceProfiler_button}\n          onClick={() => this.toggle()}\n          type={Button.Type.primary}>\n        <Icon className={styles.PerformanceProfiler_button_icon}\n            id={started ? 'cross' : 'magnifying-glass'} />\n      </Button>\n      <Button className={styles.PerformanceProfiler_button}\n          onClick={() => this.printWasted()}\n          type={Button.Type.default}>\n        <Icon className={styles.PerformanceProfiler_button_icon}\n            id=\"clock\" />\n      </Button>\n      <Button className={styles.PerformanceProfiler_button}\n          onClick={() => this.printOperations()}\n          type={Button.Type.default}>\n        <Icon className={styles.PerformanceProfiler_button_icon}\n            id=\"organisation\" />\n      </Button>\n    </div>;\n  }\n}\n\nexport default PerformanceProfiler;\n"]}
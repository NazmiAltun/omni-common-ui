{"version":3,"sources":["components/Sticky/index.jsx"],"names":["CHECK_SAME_HEIGHT_MAX","Sticky","props","state","sticky","_onWheel","bind","_checkHeight","window","addEventListener","_startPeriodicCheck","_stopPeriodicCheck","removeEventListener","shouldBeSticky","_container","getBoundingClientRect","top","setState","_sameHeightCount","_periodicCheckId","setInterval","clearInterval","debug","height","_bar","offsetHeight","classes","className","__sticky","n","Sticky_wrapper","children","Sticky_placeholder","propTypes","string","node"],"mappings":"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","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React, { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport log from 'domain/log';\nimport PropTypes from 'prop-types';\n\nconst CHECK_SAME_HEIGHT_MAX = 5;\n\nexport class Sticky extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { sticky: false };\n    this._onWheel = this._onWheel.bind(this);\n    this._checkHeight = this._checkHeight.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('wheel', this._onWheel);\n    window.addEventListener('touchmove', this._onWheel);\n    window.addEventListener('scroll', this._onWheel);\n  }\n\n  componentDidUpdate() {\n    this._startPeriodicCheck();\n  }\n\n  componentWillUnmount() {\n    this._stopPeriodicCheck();\n    window.removeEventListener('wheel', this._onWheel);\n    window.removeEventListener('touchmove', this._onWheel);\n    window.removeEventListener('scroll', this._onWheel);\n  }\n\n  _onWheel() {\n    const shouldBeSticky = this._container.getBoundingClientRect().top < 0;\n    if (! this.state.sticky && shouldBeSticky) {\n      this.setState({ sticky: true });\n    } else if (this.state.sticky && ! shouldBeSticky) {\n      this.setState({ sticky: false });\n    }\n  }\n\n  _startPeriodicCheck() {\n    this._stopPeriodicCheck();\n    this._sameHeightCount = 0;\n    this._periodicCheckId = setInterval(this._checkHeight, 25);\n  }\n\n  _stopPeriodicCheck() {\n    clearInterval(this._periodicCheckId);\n  }\n\n  _checkHeight() {\n    log.debug('Sticky - _checkHeight()');\n    if (this._sameHeightCount > CHECK_SAME_HEIGHT_MAX) {\n      return this._stopPeriodicCheck();\n    }\n\n    if (this.state.height === this._bar.offsetHeight) {\n      this._sameHeightCount += 1;\n      return;\n    }\n\n    this.setState({ height: this._bar.offsetHeight }, this._onWheel);\n  }\n\n  render() {\n    const classes = classnames(styles.Sticky, this.props.className, {\n      [styles.__sticky]: this.state.sticky,\n    });\n    return <div className={classes} ref={(n) => { this._container = n; }}>\n      <div className={styles.Sticky_wrapper} ref={(n) => { this._bar = n; }}>\n        {this.props.children}\n      </div>\n      <div className={styles.Sticky_placeholder} style={{ height: this.state.height }} />\n    </div>;\n  }\n}\n\nSticky.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Sticky;\n"]}
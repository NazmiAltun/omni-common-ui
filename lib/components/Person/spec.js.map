{"version":3,"sources":["components/Person/spec.jsx"],"names":["describe","it","wrapper","find","to","have","length","lines","Person_lines","descendants"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,SAAS,YAAT,EAAuB,YAAM;AAC3BC,KAAG,oCAAH,EAAyC,YAAM;AAC7C,QAAMC,UAAU,qBAAQ;AAAA;AAAA;AAAQ;AAAR,KAAR,CAAhB;AACA,sBAAOA,QAAQC,IAAR,0BAAP,EAAqCC,EAArC,CAAwCC,IAAxC,CAA6CC,MAA7C,CAAoD,CAApD;AACD,GAHD;;AAKAL,KAAG,kCAAH,EAAuC,YAAM;AAC3C,QAAMC,UAAU,qBAAQ;AAAA;AAAA;AAAQ;AAAR,KAAR,CAAhB;AACA,sBAAOA,QAAQC,IAAR,wBAAP,EAAmCC,EAAnC,CAAsCC,IAAtC,CAA2CC,MAA3C,CAAkD,CAAlD;AACD,GAHD;;AAKAL,KAAG,yCAAH,EAA8C,YAAM;AAClD,QAAMC,UAAU,qBAAQ;AAAA;AAAA;AACtB,iEADsB;AAEtB,iEAFsB;AAGtB;AAHsB,KAAR,CAAhB;AAKA,sBAAOA,QAAQC,IAAR,wBAAP,EAAmCC,EAAnC,CAAsCC,IAAtC,CAA2CC,MAA3C,CAAkD,CAAlD;AACA,sBAAOJ,QAAQC,IAAR,0BAAP,EAAqCC,EAArC,CAAwCC,IAAxC,CAA6CC,MAA7C,CAAoD,CAApD;AACD,GARD;;AAUAL,KAAG,2CAAH,EAAgD,YAAM;AACpD,QAAMC,UAAU,qBAAQ;AAAA;AAAA;AACtB,iEADsB;AAEtB,6CAAK,IAAG,QAAR,GAFsB;AAGtB;AAAA;AAAA,UAAI,IAAG,QAAP;AAAA;AAAA,OAHsB;AAItB,6CAAK,IAAG,QAAR;AAJsB,KAAR,CAAhB;AAMA,QAAMK,QAAQL,QAAQC,IAAR,OAAiB,gBAAOK,YAAxB,CAAd;AACA,sBAAOD,KAAP,EAAcH,EAAd,CAAiBC,IAAjB,CAAsBI,WAAtB,CAAkC,SAAlC;AACA,sBAAOF,KAAP,EAAcH,EAAd,CAAiBC,IAAjB,CAAsBI,WAAtB,CAAkC,SAAlC;AACA,sBAAOF,KAAP,EAAcH,EAAd,CAAiBC,IAAjB,CAAsBI,WAAtB,CAAkC,SAAlC;AACD,GAXD;AAYD,CAjCD","file":"spec.js","sourcesContent":["import styles from './style.postcss';\n\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport { expect } from 'chai';\nimport StudentPicture from 'components/StudentPicture';\nimport AdultPicture from 'components/AdultPicture';\nimport Person from './';\n\ndescribe('<Person />', () => {\n  it('renders StudentPicture if provided', () => {\n    const wrapper = shallow(<Person><StudentPicture /></Person>);\n    expect(wrapper.find(StudentPicture)).to.have.length(1);\n  });\n\n  it('renders AdultPicture if provided', () => {\n    const wrapper = shallow(<Person><AdultPicture /></Person>);\n    expect(wrapper.find(AdultPicture)).to.have.length(1);\n  });\n\n  it('renders only the first picture provided', () => {\n    const wrapper = shallow(<Person>\n      <AdultPicture />\n      <AdultPicture />\n      <StudentPicture />\n    </Person>);\n    expect(wrapper.find(AdultPicture)).to.have.length(1);\n    expect(wrapper.find(StudentPicture)).to.have.length(0);\n  });\n\n  it('renders all the other children as \"lines\"', () => {\n    const wrapper = shallow(<Person>\n      <AdultPicture />\n      <div id=\"line-1\" />\n      <h1 id=\"line-2\">Line 2</h1>\n      <div id=\"line-3\" />\n    </Person>);\n    const lines = wrapper.find(`.${styles.Person_lines}`);\n    expect(lines).to.have.descendants('#line-1');\n    expect(lines).to.have.descendants('#line-2');\n    expect(lines).to.have.descendants('#line-3');\n  });\n});\n"]}
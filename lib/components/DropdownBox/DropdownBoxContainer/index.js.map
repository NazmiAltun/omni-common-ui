{"version":3,"sources":["components/DropdownBox/DropdownBoxContainer/index.jsx"],"names":["DropdownBoxContainer","props","_onClickedOutside","bind","_onRef","function","onClickOutside","document","body","addEventListener","removeEventListener","evt","_node","contains","target","ref","className","children","propTypes","node","string","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,oB;;;AACJ,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA,4IACXA,KADW;;AAEjB,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,OAAd;AAHiB;AAIlB;;;;wCAEmB;AAClB,UAAI,gBAAGE,QAAH,CAAY,KAAKJ,KAAL,CAAWK,cAAvB,CAAJ,EAA4C;AAC1CC,iBAASC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwC,KAAKP,iBAA7C;AACAK,iBAASC,IAAT,CAAcC,gBAAd,CAA+B,YAA/B,EAA6C,KAAKP,iBAAlD;AACD;AACF;;;2CAEsB;AACrBK,eAASC,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,EAA2C,KAAKR,iBAAhD;AACAK,eAASC,IAAT,CAAcE,mBAAd,CAAkC,YAAlC,EAAgD,KAAKR,iBAArD;AACD;;;sCAEiBS,G,EAAK;AACrB,UAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,IAAIG,MAAxB,CAAJ,EAAqC;AACnC;AACD;;AAED,WAAKb,KAAL,CAAWK,cAAX;AACD;;;2BAEMS,G,EAAK;AACV,WAAKH,KAAL,GAAaG,GAAb;AACD;;;6BAEQ;AAAA,mBACyB,KAAKd,KAD9B;AAAA,UACCe,SADD,UACCA,SADD;AAAA,UACYC,QADZ,UACYA,QADZ;;AAEP,aAAO;AAAA;AAAA,UAAK,WAAW,0BAAWD,SAAX,CAAhB;AACH,eAAK,KAAKZ,MADP;AAEJa;AAFI,OAAP;AAID;;;;;;AAGHjB,qBAAqBkB,SAArB,GAAiC;AAC/BD,YAAU,oBAAUE,IADW;AAE/BH,aAAW,oBAAUI,MAFU;AAG/Bd,kBAAgB,oBAAUe;AAHK,CAAjC;;kBAMerB,oB","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport is from 'is_js';\nimport PropTypes from 'prop-types';\n\nclass DropdownBoxContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this._onClickedOutside = this._onClickedOutside.bind(this);\n    this._onRef = this._onRef.bind(this);\n  }\n\n  componentDidMount() {\n    if (is.function(this.props.onClickOutside)) {\n      document.body.addEventListener('click', this._onClickedOutside);\n      document.body.addEventListener('touchstart', this._onClickedOutside);\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener('click', this._onClickedOutside);\n    document.body.removeEventListener('touchstart', this._onClickedOutside);\n  }\n\n  _onClickedOutside(evt) {\n    if (this._node.contains(evt.target)) {\n      return;\n    }\n\n    this.props.onClickOutside();\n  }\n\n  _onRef(ref) {\n    this._node = ref;\n  }\n\n  render() {\n    const { className, children } = this.props;\n    return <div className={classnames(className)}\n        ref={this._onRef}>\n      {children}\n    </div>;\n  }\n}\n\nDropdownBoxContainer.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClickOutside: PropTypes.func,\n};\n\nexport default DropdownBoxContainer;\n"]}
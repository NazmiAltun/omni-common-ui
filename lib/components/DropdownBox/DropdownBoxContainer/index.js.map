{"version":3,"sources":["components/DropdownBox/DropdownBoxContainer/index.jsx"],"names":["DropdownBoxContainer","props","_onClickedOutside","bind","function","onClickOutside","document","body","addEventListener","removeEventListener","evt","_node","contains","target","className","children","c","propTypes","PropTypes","node","string","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,oB;;;AACJ,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA,4IACXA,KADW;;AAEjB,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AAFiB;AAGlB;;;;wCAEmB;AAClB,UAAI,gBAAGC,QAAH,CAAY,KAAKH,KAAL,CAAWI,cAAvB,CAAJ,EAA4C;AAC1CC,iBAASC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwC,KAAKN,iBAA7C;AACAI,iBAASC,IAAT,CAAcC,gBAAd,CAA+B,YAA/B,EAA6C,KAAKN,iBAAlD;AACD;AACF;;;2CAEsB;AACrBI,eAASC,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,EAA2C,KAAKP,iBAAhD;AACAI,eAASC,IAAT,CAAcE,mBAAd,CAAkC,YAAlC,EAAgD,KAAKP,iBAArD;AACD;;;sCAEiBQ,G,EAAK;AACrB,UAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,IAAIG,MAAxB,CAAJ,EAAqC;AACnC;AACD;;AAED,WAAKZ,KAAL,CAAWI,cAAX;AACD;;;6BAEQ;AAAA;;AAAA,mBACyB,KAAKJ,KAD9B;AAAA,UACCa,SADD,UACCA,SADD;AAAA,UACYC,QADZ,UACYA,QADZ;;AAEP,aAAO;AAAA;AAAA,UAAK,WAAW,0BAAWD,SAAX,CAAhB;AACH,eAAK,aAACE,CAAD,EAAO;AAAE,mBAAKL,KAAL,GAAaK,CAAb;AAAiB,WAD5B;AAEJD;AAFI,OAAP;AAID;;;;;;AAGHf,qBAAqBiB,SAArB,GAAiC;AAC/BF,YAAU,gBAAMG,SAAN,CAAgBC,IADK;AAE/BL,aAAW,gBAAMI,SAAN,CAAgBE,MAFI;AAG/Bf,kBAAgB,gBAAMa,SAAN,CAAgBG;AAHD,CAAjC;;kBAMerB,oB","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport is from 'is_js';\n\nclass DropdownBoxContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this._onClickedOutside = this._onClickedOutside.bind(this);\n  }\n\n  componentDidMount() {\n    if (is.function(this.props.onClickOutside)) {\n      document.body.addEventListener('click', this._onClickedOutside);\n      document.body.addEventListener('touchstart', this._onClickedOutside);\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener('click', this._onClickedOutside);\n    document.body.removeEventListener('touchstart', this._onClickedOutside);\n  }\n\n  _onClickedOutside(evt) {\n    if (this._node.contains(evt.target)) {\n      return;\n    }\n\n    this.props.onClickOutside();\n  }\n\n  render() {\n    const { className, children } = this.props;\n    return <div className={classnames(className)}\n        ref={(c) => { this._node = c; }}>\n      {children}\n    </div>;\n  }\n}\n\nDropdownBoxContainer.propTypes = {\n  children: React.PropTypes.node,\n  className: React.PropTypes.string,\n  onClickOutside: React.PropTypes.func,\n};\n\nexport default DropdownBoxContainer;\n"]}
{"version":3,"sources":["components/Grid/Grid/index.jsx"],"names":["Grid","props","_queryListener","bind","_query","state","grid","_getGrid","addListener","removeListener","mql","newGrid","setState","query","matches","classes","className","__outerMargin","outerMargin","children","propTypes","node","bool","string","childContextTypes","object"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMA,I;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4GACXA,KADW;;AAEjB,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AACA,UAAKC,MAAL,GAAc,0BAAW,oBAAX,CAAd;AACA,UAAKC,KAAL,GAAa,EAAEC,MAAM,MAAKC,QAAL,CAAc,MAAKH,MAAnB,CAAR,EAAb;AAJiB;AAKlB;;;;sCAEiB;AAChB,aAAO,EAAEE,MAAM,KAAKD,KAAL,CAAWC,IAAnB,EAAP;AACD;;;wCAEmB;AAClB,WAAKF,MAAL,CAAYI,WAAZ,CAAwB,KAAKN,cAA7B;AACD;;;2CAEsB;AACrB,WAAKE,MAAL,CAAYK,cAAZ,CAA2B,KAAKP,cAAhC;AACD;;;mCAEcQ,G,EAAK;AAClB,UAAMC,UAAU,KAAKJ,QAAL,CAAcG,GAAd,CAAhB;AACA,UAAIC,YAAY,KAAKN,KAAL,CAAWC,IAA3B,EAAiC;AAC/B,aAAKM,QAAL,CAAc,EAAEN,MAAMK,OAAR,EAAd;AACD;AACF;;;6BAEQE,K,EAAO;AACd,aAAOA,MAAMC,OAAN,4CAAP;AACD;;;6BAEQ;AACP,UAAMC,UAAU,0BAAW,KAAKV,KAAL,CAAWC,IAAX,CAAgB,iBAAhB,CAAX,EACZ,gBAAON,IADK,EAEZ,KAAKC,KAAL,CAAWe,SAFC,sBAGT,gBAAOC,aAHE,EAGc,KAAKhB,KAAL,CAAWiB,WAHzB,EAAhB;AAIA,aAAO;AAAA;AAAA,UAAK,WAAWH,OAAhB;AACJ,aAAKd,KAAL,CAAWkB;AADP,OAAP;AAGD;;;;;;AAGHnB,KAAKoB,SAAL,GAAiB;AACfD,YAAU,oBAAUE,IADL;AAEfH,eAAa,oBAAUI,IAFR;AAGfN,aAAW,oBAAUO;AAHN,CAAjB;;AAMAvB,KAAKwB,iBAAL,GAAyB;AACvBlB,QAAM,oBAAUmB;AADO,CAAzB;;kBAIezB,I","file":"index.js","sourcesContent":["import gridBig from './grid-big.postcss';\nimport gridCompact from './grid-compact.postcss';\nimport styles from './style.postcss';\n\nimport React, { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport mediaQuery from 'domain/MediaQuery';\nimport PropTypes from 'prop-types';\n\nclass Grid extends PureComponent {\n  constructor(props) {\n    super(props);\n    this._queryListener = this._queryListener.bind(this);\n    this._query = mediaQuery('(min-width: 640px)');\n    this.state = { grid: this._getGrid(this._query) };\n  }\n\n  getChildContext() {\n    return { grid: this.state.grid };\n  }\n\n  componentDidMount() {\n    this._query.addListener(this._queryListener);\n  }\n\n  componentWillUnmount() {\n    this._query.removeListener(this._queryListener);\n  }\n\n  _queryListener(mql) {\n    const newGrid = this._getGrid(mql);\n    if (newGrid !== this.state.grid) {\n      this.setState({ grid: newGrid });\n    }\n  }\n\n  _getGrid(query) {\n    return query.matches ? gridBig : gridCompact;\n  }\n\n  render() {\n    const classes = classnames(this.state.grid['container-fluid'],\n        styles.Grid,\n        this.props.className,\n        { [styles.__outerMargin]: this.props.outerMargin });\n    return <div className={classes}>\n      {this.props.children}\n    </div>;\n  }\n}\n\nGrid.propTypes = {\n  children: PropTypes.node,\n  outerMargin: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nGrid.childContextTypes = {\n  grid: PropTypes.object,\n};\n\nexport default Grid;\n"]}
{"version":3,"sources":["components/Dialog/spec.jsx"],"names":["test","wrapper","expect","document","getElementById","toBeDefined","unmount","toBeFalsy","describe","find","LoadingOverlay","toHaveLength","__visible","Dialog_closeIcon","onRequestClose","jest","fn","button","simulate","toHaveBeenCalledWith","undefined"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;AAEA;;;;AAEAA,KAAK,8BAAL,EAAqC,YAAM;AACzC,MAAMC,UAAU,mBAAM;AAAA;AAAA,MAAQ,YAAR;AAAe,2CAAK,IAAG,cAAR;AAAf,GAAN,CAAhB;AACAC,SAAOC,SAASC,cAAT,CAAwB,cAAxB,CAAP,EAAgDC,WAAhD;AACAJ,UAAQK,OAAR;AACD,CAJD;;AAMAN,KAAK,0CAAL,EAAiD,YAAM;AACrD,MAAMC,UAAU,mBAAM;AAAA;AAAA,MAAQ,QAAQ,KAAhB;AAAuB,2CAAK,IAAG,cAAR;AAAvB,GAAN,CAAhB;AACAC,SAAOC,SAASC,cAAT,CAAwB,cAAxB,CAAP,EAAgDG,SAAhD;AACAN,UAAQK,OAAR;AACD,CAJD;;AAMAE,SAAS,iBAAT,EAA4B,YAAM;AAChCR,OAAK,wCAAL,EAA+C,YAAM;AACnD,QAAMC,UAAU,qBAAQ;AAAA;AAAA,QAAQ,YAAR,EAAe,eAAf;AAAyB;AAAzB,KAAR,CAAhB;AACAC,WAAOD,QAAQQ,IAAR,OAAiB,gBAAOC,cAAxB,CAAP,EAAkDC,YAAlD,CAA+D,CAA/D;AACAT,WAAOD,QAAQQ,IAAR,OAAiB,gBAAOC,cAAxB,SAA0C,gBAAOE,SAAjD,CAAP,EAAsED,YAAtE,CAAmF,CAAnF;AACD,GAJD;;AAMAX,OAAK,4CAAL,EAAmD,YAAM;AACvD,QAAMC,UAAU,qBAAQ;AAAA;AAAA,QAAQ,YAAR;AAAe;AAAf,KAAR,CAAhB;AACAC,WAAOD,QAAQQ,IAAR,OAAiB,gBAAOC,cAAxB,CAAP,EAAkDC,YAAlD,CAA+D,CAA/D;AACAT,WAAOD,QAAQQ,IAAR,OAAiB,gBAAOC,cAAxB,SAA0C,gBAAOE,SAAjD,CAAP,EAAsED,YAAtE,CAAmF,CAAnF;AACD,GAJD;AAKD,CAZD;;AAcAH,SAAS,cAAT,EAAyB,YAAM;AAC7BR,OAAK,2CAAL,EAAkD,YAAM;AACtD,QAAMC,UAAU,qBAAQ,0CAAQ,YAAR,EAAe,qBAAf,GAAR,CAAhB;AACAC,WAAOD,QAAQQ,IAAR,OAAiB,gBAAOI,gBAAxB,CAAP,EAAoDF,YAApD,CAAiE,CAAjE;AACD,GAHD;;AAKAX,OAAK,uDAAL,EAA8D,YAAM;AAClE,QAAMC,UAAU,qBAAQ,0CAAQ,YAAR,GAAR,CAAhB;AACAC,WAAOD,QAAQQ,IAAR,OAAiB,gBAAOI,gBAAxB,CAAP,EAAoDF,YAApD,CAAiE,CAAjE;AACD,GAHD;;AAKAX,OAAK,yDAAL,EAAgE,YAAM;AACpE,QAAMc,iBAAiBC,KAAKC,EAAL,EAAvB;AACA,QAAMf,UAAU,qBAAQ,0CAAQ,YAAR,EAAe,qBAAf,EAA+B,gBAAgBa,cAA/C,GAAR,CAAhB;AACA,QAAMG,SAAShB,QAAQQ,IAAR,OAAiB,gBAAOI,gBAAxB,CAAf;AACAI,WAAOC,QAAP,CAAgB,OAAhB;AACAhB,WAAOY,cAAP,EAAuBK,oBAAvB,CAA4C,QAA5C,EAAsDC,SAAtD;AACD,GAND;AAOD,CAlBD","file":"spec.js","sourcesContent":["import styles from './style.postcss';\n\nimport React from 'react';\nimport { shallow, mount } from 'enzyme';\n\nimport { Dialog } from './';\n\ntest('renders its children if open', () => {\n  const wrapper = mount(<Dialog isOpen><div id=\"innerContent\" /></Dialog>);\n  expect(document.getElementById('innerContent')).toBeDefined();\n  wrapper.unmount();\n});\n\ntest('does not render its children if not open', () => {\n  const wrapper = mount(<Dialog isOpen={false}><div id=\"innerContent\" /></Dialog>);\n  expect(document.getElementById('innerContent')).toBeFalsy();\n  wrapper.unmount();\n});\n\ndescribe('loading overlay', () => {\n  test('shows the loading overlay when loading', () => {\n    const wrapper = shallow(<Dialog isOpen isLoading><div /></Dialog>);\n    expect(wrapper.find(`.${styles.LoadingOverlay}`)).toHaveLength(1);\n    expect(wrapper.find(`.${styles.LoadingOverlay}.${styles.__visible}`)).toHaveLength(1);\n  });\n\n  test('hides the loading overlay when not loading', () => {\n    const wrapper = shallow(<Dialog isOpen><div /></Dialog>);\n    expect(wrapper.find(`.${styles.LoadingOverlay}`)).toHaveLength(1);\n    expect(wrapper.find(`.${styles.LoadingOverlay}.${styles.__visible}`)).toHaveLength(0);\n  });\n});\n\ndescribe('close button', () => {\n  test('contains a close button icon when enabled', () => {\n    const wrapper = shallow(<Dialog isOpen withCloseButton />);\n    expect(wrapper.find(`.${styles.Dialog_closeIcon}`)).toHaveLength(1);\n  });\n\n  test('does not contain a close button icon when not enabled', () => {\n    const wrapper = shallow(<Dialog isOpen />);\n    expect(wrapper.find(`.${styles.Dialog_closeIcon}`)).toHaveLength(0);\n  });\n\n  test('calls `onRequestClose` when the close button is clicked', () => {\n    const onRequestClose = jest.fn();\n    const wrapper = shallow(<Dialog isOpen withCloseButton onRequestClose={onRequestClose} />);\n    const button = wrapper.find(`.${styles.Dialog_closeIcon}`);\n    button.simulate('click');\n    expect(onRequestClose).toHaveBeenCalledWith('button', undefined);\n  });\n});\n"]}
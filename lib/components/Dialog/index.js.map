{"version":3,"sources":["components/Dialog/index.jsx"],"names":["Dialog","props","Overlay","ev","onRequestClose","Portal","isOpen","Dialog_card","className","children","withCloseButton","Dialog_closeIcon","LoadingOverlay","__visible","isLoading","LoadingOverlay_inner","propTypes","PropTypes","bool","isRequired","func","node","string"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS,CAACC,KAAD;AAAA,SAAW;AAAA;AAAA,MAAO,WAAW,gBAAOD,MAAzB;AACtB,wBAAkB,gBAAOE,OADH;AAEtB,sBAAgB,wBAACC,EAAD;AAAA,eAAQF,MAAMG,cAAN,IAAwBH,MAAMG,cAAN,CAAqB,QAArB,EAA+BD,EAA/B,CAAhC;AAAA,OAFM;AAGtB,uBAAiB,gBAAOE,MAHF;AAItB,cAAQJ,MAAMK,MAJQ;AAKxB;AAAA;AAAA,QAAM,WAAW,0BAAW,gBAAOC,WAAlB,EAA+BN,MAAMO,SAArC,CAAjB;AACE;AAAA,uBAAM,OAAN;AAAA;AACGP,cAAMQ;AADT,OADF;AAKIR,YAAMS,eAAN,IACA;AAAA;AAAA,UAAK,WAAW,gBAAOC,gBAAvB;AACI,mBAAS,iBAACR,EAAD;AAAA,mBAAQF,MAAMG,cAAN,IAAwBH,MAAMG,cAAN,CAAqB,QAArB,EAA+BD,EAA/B,CAAhC;AAAA,WADb;AAEE,wDAAM,IAAG,OAAT;AAFF,OANJ;AAWE;AAAA;AAAA,UAAK,WAAW,0BAAW,gBAAOS,cAAlB,sBACb,gBAAOC,SADM,EACM,CAAC,CAAEZ,MAAMa,SADf,EAAhB;AAGE,+CAAK,WAAW,gBAAOC,oBAAvB;AAHF;AAXF;AALwB,GAAX;AAAA,CAAf;;AAwBAf,OAAOgB,SAAP,GAAmB;AACjBV,UAAQ,gBAAMW,SAAN,CAAgBC,IAAhB,CAAqBC,UADZ;AAEjBL,aAAW,gBAAMG,SAAN,CAAgBC,IAFV;AAGjBR,mBAAiB,gBAAMO,SAAN,CAAgBC,IAHhB;AAIjBd,kBAAgB,gBAAMa,SAAN,CAAgBG,IAJf,EAIsB;AACvCX,YAAU,gBAAMQ,SAAN,CAAgBI,IALT;AAMjBb,aAAW,gBAAMS,SAAN,CAAgBK;AANV,CAAnB;;kBASetB,M","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport classnames from 'classnames';\n\nimport Card from 'components/Card';\nimport Icon from 'components/Icon';\n\nconst Dialog = (props) => <Modal className={styles.Dialog}\n    overlayClassName={styles.Overlay}\n    onRequestClose={(ev) => props.onRequestClose && props.onRequestClose('escape', ev)}\n    portalClassName={styles.Portal}\n    isOpen={props.isOpen}>\n  <Card className={classnames(styles.Dialog_card, props.className)}>\n    <Card.Content>\n      {props.children}\n    </Card.Content>\n    {\n      props.withCloseButton &&\n      <div className={styles.Dialog_closeIcon}\n          onClick={(ev) => props.onRequestClose && props.onRequestClose('button', ev)}>\n        <Icon id=\"close\" />\n      </div>\n    }\n    <div className={classnames(styles.LoadingOverlay, {\n      [styles.__visible]: !! props.isLoading,\n    })}>\n      <div className={styles.LoadingOverlay_inner} />\n    </div>\n  </Card>\n</Modal>;\n\nDialog.propTypes = {\n  isOpen: React.PropTypes.bool.isRequired,\n  isLoading: React.PropTypes.bool,\n  withCloseButton: React.PropTypes.bool,\n  onRequestClose: React.PropTypes.func,  /* called with 'escape' or 'button' arg */\n  children: React.PropTypes.node,\n  className: React.PropTypes.string,\n};\n\nexport default Dialog;\n"]}
{"version":3,"sources":["components/InputSelect/index.jsx"],"names":["InputSelect","props","initOption","not","undefined","optionList","value","defaultOption","state","selectedOption","selectedText","name","handleChange","bind","updateState","option","array","setState","e","target","onChange","optionKeys","className","selectClassName","labelClassName","disabledDefaultOption","nameIdentified","classes","selectClasses","InputSelect_select","labelClasses","InputSelect_name","renderOptions","object","map","key","item","id","myStyle","labelName","disabled","selectStyle","required","display","propTypes","oneOfType","isRequired","string","bool","func","shape","number","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React, { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport is from 'is_js';\nimport loFind from 'lodash.find';\nimport PropTypes from 'prop-types';\n\nexport default class InputSelect extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const initOption = is.not.undefined(props.optionList[props.value]) ?\n      props.optionList[props.value] :\n      props.defaultOption;\n    this.state = {\n      value: props.value,\n      selectedOption: initOption,\n      selectedText: is.not.undefined(initOption) ? initOption.name : '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    this.updateState(props.value);\n  }\n\n  updateState(value) {\n    const props = this.props;\n    let option;\n    if (is.array(props.optionList)) {\n      option = loFind(props.optionList, ['id', value]);\n    } else {\n      option = is.not.undefined(props.optionList[value]) ?\n       props.optionList[value] :\n       props.defaultOption;\n    }\n\n    this.setState({\n      value,\n      selectedOption: option,\n      selectedText: is.not.undefined(option) ? option.name : '',\n    });\n  }\n\n  handleChange(e) {\n    this.updateState(e.target.value);\n    this.props.onChange(e);\n  }\n\n  render() {\n    const {\n      optionKeys,\n      optionList,\n      className,\n      selectClassName,\n      labelClassName,\n      defaultOption,\n      disabledDefaultOption,\n      nameIdentified,\n    } = this.props;\n    const classes = classnames(styles.InputSelect, className);\n    const selectClasses = classnames(selectClassName, styles.InputSelect_select);\n    const labelClasses = classnames(labelClassName, styles.InputSelect_name);\n\n    function renderOptions() {\n      if (optionKeys && is.object(optionList)) {\n        return optionKeys.map((key) =>\n          <option value={key}>{optionList[key] ? optionList[key].name : ''}</option>);\n      }\n\n      if (! optionKeys && is.array(optionList)) {\n        if (! nameIdentified) {\n          return optionList.map((item) => <option value={item.id}>{item.name}</option>);\n        }\n        return optionList.map((item) => <option value={item.name}>{item.name}</option>);\n      }\n    }\n    return (\n      <div className={classes} style={this.props.myStyle}>\n        {\n          this.props.labelName ?\n            <span className={labelClasses}>\n              {this.props.labelName}\n            </span> :\n            ''\n        }\n\n        <select className={selectClasses}\n            disabled={this.props.disabled}\n            style={this.props.selectStyle}\n            onChange={this.handleChange}\n            value={this.props.value}\n            required={this.props.required}>\n          {\n            <option value={is.object(defaultOption) ? defaultOption.key : ''}\n                disabled={disabledDefaultOption}\n                style={{ display: disabledDefaultOption ? 'none' : 'block' }}>\n              {is.object(defaultOption) ? defaultOption.name : defaultOption}\n            </option>\n          }\n          {renderOptions()}\n        </select>\n      </div>\n    );\n  }\n}\n\nInputSelect.propTypes = {\n  optionList: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  optionKeys: PropTypes.array.isRequired,\n  myStyle: PropTypes.object,\n  selectStyle: PropTypes.object,\n  className: PropTypes.string,\n  selectClassName: PropTypes.string,\n  labelClassName: PropTypes.string,\n  value: PropTypes.string,\n  labelName: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  onChange: PropTypes.func,\n  defaultOption: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      key: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      name: PropTypes.string,\n    }),\n  ]),\n  disabledDefaultOption: PropTypes.bool,\n  nameIdentified: PropTypes.bool,\n};\n\nInputSelect.defaultProps = {\n  nameIdentified: false,\n  disabledDefaultOption: false,\n  optionList: {},\n};\n"]}
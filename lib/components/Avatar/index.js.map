{"version":3,"sources":["components/Avatar/index.jsx"],"names":["Avatar","props","_setUp","_default","_getDefaultAvatar","images","push","_getCssValueForUrl","src","_style","backgroundImage","filter","e","string","join","displayUserInitialsAsDefaultAvatar","userFirstName","userLastName","isMale","gender","defaultMale","default","isFemale","defaultFemale","url","not","secureUrl","replace","empty","className","propTypes","PropTypes","bool"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;IAEMA,M;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gHACXA,KADW;;AAEjB,UAAKC,MAAL,CAAYD,KAAZ;AAFiB;AAGlB;;;;wCAEmBA,K,EAAO;AACzB,WAAKC,MAAL,CAAYD,KAAZ;AACD;;;2BAEMA,K,EAAO;AACZ,WAAKE,QAAL,GAAgB,KAAKC,iBAAL,CAAuBH,KAAvB,CAAhB;;AAEA,UAAMI,SAAS,EAAf;AACAA,aAAOC,IAAP,CAAY,KAAKC,kBAAL,CAAwBN,MAAMO,GAA9B,CAAZ;AACAH,aAAOC,IAAP,CAAY,KAAKC,kBAAL,CAAwB,KAAKJ,QAA7B,CAAZ;AACA,WAAKM,MAAL,GAAc,EAAEC,iBAAiBL,OAAOM,MAAP,CAAc,UAACC,CAAD;AAAA,iBAAO,gBAAGC,MAAH,CAAUD,CAAV,CAAP;AAAA,SAAd,EAAmCE,IAAnC,CAAwC,IAAxC,CAAnB,EAAd;AACD;;;sCAEiBb,K,EAAO;AACvB,UAAIA,MAAMc,kCAAV,EAA8C;AAC5C,eAAO,6CAAiCd,MAAMe,aAAvC,EAAsDf,MAAMgB,YAA5D,CAAP;AACD;;AAED,UAAI,iBAAOC,MAAP,CAAcjB,MAAMkB,MAApB,CAAJ,EAAiC;AAC/B,eAAOlB,MAAMmB,WAAN,IAAqBnB,MAAMoB,OAAlC;AACD;;AAED,UAAI,iBAAOC,QAAP,CAAgBrB,MAAMkB,MAAtB,CAAJ,EAAmC;AACjC,eAAOlB,MAAMsB,aAAN,IAAuBtB,MAAMoB,OAApC;AACD;;AAED,aAAOpB,MAAMoB,OAAb;AACD;;;uCAEkBG,G,EAAK;AACtB,UAAI,gBAAGC,GAAH,CAAOZ,MAAP,CAAcW,GAAd,CAAJ,EAAwB;AACtB,eAAO,IAAP;AACD;;AAED;AACA,UAAME,YAAYF,IAAIG,OAAJ,CAAY,QAAZ,EAAsB,EAAtB,CAAlB,CANsB,CAMwB;AAC9C,aAAO,gBAAGF,GAAH,CAAOG,KAAP,CAAaJ,GAAb,eAA6BE,SAA7B,OAAP;AACD;;;6BAEQ;AACP,aAAO,uCAAK,OAAO,KAAKjB,MAAjB,EAAyB,WAAW,0BAAW,gBAAOT,MAAlB,EAA0B,KAAKC,KAAL,CAAW4B,SAArC,CAApC,GAAP;AACD;;;;;;AAGH7B,OAAO8B,SAAP,GAAmB;AACjBD,aAAW,gBAAME,SAAN,CAAgBlB,MADV;AAEjBL,OAAK,gBAAMuB,SAAN,CAAgBlB,MAFJ;AAGjBQ,WAAS,gBAAMU,SAAN,CAAgBlB,MAHR;AAIjBO,eAAa,gBAAMW,SAAN,CAAgBlB,MAJZ;AAKjBU,iBAAe,gBAAMQ,SAAN,CAAgBlB,MALd;AAMjBM,UAAQ,gBAAMY,SAAN,CAAgBlB,MANP;AAOjBG,iBAAe,gBAAMe,SAAN,CAAgBlB,MAPd;AAQjBI,gBAAc,gBAAMc,SAAN,CAAgBlB,MARb;AASjBE,sCAAoC,gBAAMgB,SAAN,CAAgBC;AATnC,CAAnB;;kBAYehC,M","file":"index.js","sourcesContent":["import styles from './style.postcss';\n\nimport React, { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport is from 'is_js';\nimport Gender from 'domain/Gender';\n\nimport generateUserInitialsAvatarSvgUri from './generateUserInitialsAvatarSvg';\n\nclass Avatar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this._setUp(props);\n  }\n\n  componentWillUpdate(props) {\n    this._setUp(props);\n  }\n\n  _setUp(props) {\n    this._default = this._getDefaultAvatar(props);\n\n    const images = [];\n    images.push(this._getCssValueForUrl(props.src));\n    images.push(this._getCssValueForUrl(this._default));\n    this._style = { backgroundImage: images.filter((e) => is.string(e)).join(', ') };\n  }\n\n  _getDefaultAvatar(props) {\n    if (props.displayUserInitialsAsDefaultAvatar) {\n      return generateUserInitialsAvatarSvgUri(props.userFirstName, props.userLastName);\n    }\n\n    if (Gender.isMale(props.gender)) {\n      return props.defaultMale || props.default;\n    }\n\n    if (Gender.isFemale(props.gender)) {\n      return props.defaultFemale || props.default;\n    }\n\n    return props.default;\n  }\n\n  _getCssValueForUrl(url) {\n    if (is.not.string(url)) {\n      return null;\n    }\n\n    // don't let http images crash the party\n    const secureUrl = url.replace(/^http:/, '');  // //host/path uses current protocol\n    return is.not.empty(url) && `url(\"${secureUrl}\")`;\n  }\n\n  render() {\n    return <div style={this._style} className={classnames(styles.Avatar, this.props.className)} />;\n  }\n}\n\nAvatar.propTypes = {\n  className: React.PropTypes.string,\n  src: React.PropTypes.string,\n  default: React.PropTypes.string,\n  defaultMale: React.PropTypes.string,\n  defaultFemale: React.PropTypes.string,\n  gender: React.PropTypes.string,\n  userFirstName: React.PropTypes.string,\n  userLastName: React.PropTypes.string,\n  displayUserInitialsAsDefaultAvatar: React.PropTypes.bool,\n};\n\nexport default Avatar;\n"]}
{"version":3,"sources":["components/Avatar/spec.jsx"],"names":["bloggsInitialsAvatarUri","unknownInitialsAvatarUri","redInitialsAvatarUri","props","beforeEach","src","default","defaultMale","defaultFemale","test","wrapper","expect","find","toHaveLength","prop","backgroundImage","toBe","describe","undefined"],"mappings":"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","file":"spec.js","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport Avatar from './';\nimport generateUserInitialsAvatarSvgUri from './generateUserInitialsAvatarSvg';\n\nconst bloggsInitialsAvatarUri = generateUserInitialsAvatarSvgUri('Joe', 'Bloggs');\nconst unknownInitialsAvatarUri = generateUserInitialsAvatarSvgUri('?', '?');\nconst redInitialsAvatarUri = generateUserInitialsAvatarSvgUri('Kelly', '?', '#D8213A', 'white');\n\nlet props;\n\nbeforeEach(() => {\n  props = {\n    src: 'fake-src',\n    default: 'fake-default',\n    defaultMale: 'fake-default-male',\n    defaultFemale: 'fake-default-female',\n  };\n});\n\ntest('allows to add custom classes', () => {\n  const wrapper = shallow(<Avatar className=\"aClass\" />);\n  expect(wrapper.find('.aClass')).toHaveLength(1);\n});\n\ntest('shows provided src', () => {\n  const wrapper = shallow(<Avatar src=\"fake-src\" />);\n  expect(wrapper.prop('style').backgroundImage).toBe('url(\"fake-src\")');\n});\n\ntest('assigns two background images, in case the src is broken', () => {\n  const wrapper = shallow(<Avatar {...props} />);\n  expect(wrapper.prop('style').backgroundImage).toBe('url(\"fake-src\"), url(\"fake-default\")');\n});\n\ndescribe('when src is not provided', () => {\n  beforeEach(() => {\n    props.src = undefined;\n  });\n\n  test('shows the default image for males', () => {\n    const wrapper = shallow(<Avatar {...props} gender=\"male\" />);\n    expect(wrapper.prop('style').backgroundImage).toBe('url(\"fake-default-male\")');\n  });\n\n  test('shows the default image for females', () => {\n    const wrapper = shallow(<Avatar {...props} gender=\"female\" />);\n    expect(wrapper.prop('style').backgroundImage).toBe('url(\"fake-default-female\")');\n  });\n\n  test('shows the default image if no gender is provided', () => {\n    const wrapper = shallow(<Avatar {...props} />);\n    expect(wrapper.prop('style').backgroundImage).toBe('url(\"fake-default\")');\n  });\n\n  describe('shows an SVG-based avatar containing the users initials (when enabled via prop)', () => {\n    test('happy path', () => {\n      const wrapper = shallow(<Avatar {...props}\n          userFirstName=\"Joe\"\n          userLastName=\"Bloggs\"\n          displayUserInitialsAsDefaultAvatar />);\n      expect(wrapper.prop('style').backgroundImage).toBe(`url(\"${bloggsInitialsAvatarUri}\")`);\n    });\n\n    test('happy path - colour spec correctness check', () => {\n      const wrapper = shallow(<Avatar {...props}\n          userFirstName=\"Kelly\"\n          displayUserInitialsAsDefaultAvatar />);\n      expect(wrapper.prop('style').backgroundImage).toBe(`url(\"${redInitialsAvatarUri}\")`);\n    });\n\n    test('containing \"??\" when user name is blank', () => {\n      const wrapper = shallow(<Avatar {...props}\n          userFirstName=\"\"\n          userLastName=\"\"\n          displayUserInitialsAsDefaultAvatar />);\n      expect(wrapper.prop('style').backgroundImage).toBe(`url(\"${unknownInitialsAvatarUri}\")`);\n    });\n\n    test('containing \"??\" when user name is absent', () => {\n      const wrapper = shallow(<Avatar {...props}\n          displayUserInitialsAsDefaultAvatar />);\n      expect(wrapper.prop('style').backgroundImage).toBe(`url(\"${unknownInitialsAvatarUri}\")`);\n    });\n\n    test('containing \"??\" when user name is a non-string value', () => {\n      const wrapper = shallow(<Avatar {...props}\n          userFirstName={null}\n          userLastName={0}\n          displayUserInitialsAsDefaultAvatar />);\n      expect(wrapper.prop('style').backgroundImage).toBe(`url(\"${unknownInitialsAvatarUri}\")`);\n    });\n  });\n});\n"]}
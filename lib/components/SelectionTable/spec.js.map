{"version":3,"sources":["components/SelectionTable/spec.jsx"],"names":["test","selectionTableTitle","selectionTable","wrapper","expect","find","Level","toHaveLength","Heading","prop","toBe","first","simulate"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;AAEAA,KAAK,kCAAL,EAAyC,YAAM;AAC7C,MAAMC,sBAAsB,WAA5B;AACA,MAAMC,iBAAiB;AAAA;AAAA,MAAgB,OAAOD,mBAAvB;AACrB,6CAAgB,KAAhB,IAAsB,OAAM,IAA5B,GADqB;AAErB,6CAAgB,KAAhB,IAAsB,OAAM,IAA5B;AAFqB,GAAvB;AAIA,MAAME,UAAU,mBAAMD,cAAN,CAAhB;AACAE,SAAOD,QAAQE,IAAR,CAAa,WAAeC,KAA5B,CAAP,EAA2CC,YAA3C,CAAwD,CAAxD;AACAH,SAAOD,QAAQE,IAAR,CAAa,mBAASG,OAAtB,EAA+BC,IAA/B,CAAoC,MAApC,CAAP,EAAoDC,IAApD,CAAyDT,mBAAzD;AACD,CATD;;AAWAD,KAAK,0CAAL,EAAiD,YAAM;AACrD,MAAME,iBAAiB;AAAA;AAAA;AACrB;AAAA,iBAAgB,KAAhB;AAAA,QAAsB,OAAM,IAA5B;AACE,+CAAgB,KAAhB,IAAsB,OAAM,MAA5B,GADF;AAEE,+CAAgB,KAAhB,IAAsB,OAAM,MAA5B,GAFF;AAGE,+CAAgB,KAAhB,IAAsB,OAAM,MAA5B;AAHF,KADqB;AAMrB;AAAA,iBAAgB,KAAhB;AAAA,QAAsB,OAAM,IAA5B;AACE,+CAAgB,KAAhB,IAAsB,OAAM,MAA5B;AADF;AANqB,GAAvB;;AAWA,MAAMC,UAAU,mBAAMD,cAAN,CAAhB;AACAE,SAAOD,QAAQE,IAAR,CAAa,WAAeC,KAA5B,CAAP,EAA2CC,YAA3C,CAAwD,CAAxD;AACAJ,UAAQE,IAAR,CAAa,WAAeC,KAA5B,EAAmCK,KAAnC,GAA2CC,QAA3C,CAAoD,OAApD;AACAR,SAAOD,QAAQE,IAAR,CAAa,WAAeC,KAA5B,CAAP,EAA2CC,YAA3C,CAAwD,CAAxD;AACAH,SAAOD,QAAQE,IAAR,CAAa,WAAeC,KAA5B,EAAmCK,KAAnC,GAA2CF,IAA3C,CAAgD,OAAhD,CAAP,EAAiEC,IAAjE,CAAsE,MAAtE;AACD,CAjBD","file":"spec.js","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport PageCard from 'components/PageCard';\nimport SelectionTable from './';\n\ntest('renders the root Level and title', () => {\n  const selectionTableTitle = 'Classroom';\n  const selectionTable = <SelectionTable title={selectionTableTitle}>\n    <SelectionTable.Level label=\"CN\" />\n    <SelectionTable.Level label=\"RU\" />\n  </SelectionTable>;\n  const wrapper = mount(selectionTable);\n  expect(wrapper.find(SelectionTable.Level)).toHaveLength(2);\n  expect(wrapper.find(PageCard.Heading).prop('text')).toBe(selectionTableTitle);\n});\n\ntest('render sub-Level once a level is clicked', () => {\n  const selectionTable = <SelectionTable>\n    <SelectionTable.Level label=\"CN\">\n      <SelectionTable.Level label=\"CN-1\" />\n      <SelectionTable.Level label=\"CN-2\" />\n      <SelectionTable.Level label=\"CN-3\" />\n    </SelectionTable.Level>\n    <SelectionTable.Level label=\"RU\">\n      <SelectionTable.Level label=\"CN-1\" />\n    </SelectionTable.Level>\n  </SelectionTable>;\n\n  const wrapper = mount(selectionTable);\n  expect(wrapper.find(SelectionTable.Level)).toHaveLength(2);\n  wrapper.find(SelectionTable.Level).first().simulate('click');\n  expect(wrapper.find(SelectionTable.Level)).toHaveLength(3);\n  expect(wrapper.find(SelectionTable.Level).first().prop('label')).toBe('CN-1');\n});\n"]}
{"version":3,"sources":["components/SelectionTable/spec.jsx"],"names":["describe","it","selectionTableTitle","selectionTable","wrapper","find","Level","to","have","length","Heading","prop","first","simulate"],"mappings":";;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,oBAAT,EAA+B,YAAM;AACnCC,KAAG,kCAAH,EAAuC,YAAM;AAC3C,QAAMC,sBAAsB,WAA5B;AACA,QAAMC,iBAAiB;AAAA;AAAA,QAAgB,OAAOD,mBAAvB;AACrB,+CAAgB,KAAhB,IAAsB,OAAM,IAA5B,GADqB;AAErB,+CAAgB,KAAhB,IAAsB,OAAM,IAA5B;AAFqB,KAAvB;AAIA,QAAME,UAAU,mBAAMD,cAAN,CAAhB;AACA,sBAAOC,QAAQC,IAAR,CAAa,WAAeC,KAA5B,CAAP,EAA2CC,EAA3C,CAA8CC,IAA9C,CAAmDC,MAAnD,CAA0D,CAA1D;AACA,sBAAOL,QAAQC,IAAR,CAAa,mBAASK,OAAtB,CAAP,EAAuCH,EAAvC,CAA0CC,IAA1C,CAA+CG,IAA/C,CAAoD,MAApD,EAA4DT,mBAA5D;AACD,GATD;;AAWAD,KAAG,0CAAH,EAA+C,YAAM;AACnD,QAAME,iBAAiB;AAAA;AAAA;AACrB;AAAA,mBAAgB,KAAhB;AAAA,UAAsB,OAAM,IAA5B;AACE,iDAAgB,KAAhB,IAAsB,OAAM,MAA5B,GADF;AAEE,iDAAgB,KAAhB,IAAsB,OAAM,MAA5B,GAFF;AAGE,iDAAgB,KAAhB,IAAsB,OAAM,MAA5B;AAHF,OADqB;AAMrB;AAAA,mBAAgB,KAAhB;AAAA,UAAsB,OAAM,IAA5B;AACE,iDAAgB,KAAhB,IAAsB,OAAM,MAA5B;AADF;AANqB,KAAvB;;AAWA,QAAMC,UAAU,mBAAMD,cAAN,CAAhB;AACA,sBAAOC,QAAQC,IAAR,CAAa,WAAeC,KAA5B,CAAP,EAA2CC,EAA3C,CAA8CC,IAA9C,CAAmDC,MAAnD,CAA0D,CAA1D;AACAL,YAAQC,IAAR,CAAa,WAAeC,KAA5B,EAAmCM,KAAnC,GAA2CC,QAA3C,CAAoD,OAApD;AACA,sBAAOT,QAAQC,IAAR,CAAa,WAAeC,KAA5B,CAAP,EAA2CC,EAA3C,CAA8CC,IAA9C,CAAmDC,MAAnD,CAA0D,CAA1D;AACA,sBAAOL,QAAQC,IAAR,CAAa,WAAeC,KAA5B,EAAmCM,KAAnC,EAAP,EAAmDL,EAAnD,CAAsDC,IAAtD,CAA2DG,IAA3D,CAAgE,OAAhE,EAAyE,MAAzE;AACD,GAjBD;AAkBD,CA9BD","file":"spec.js","sourcesContent":["import React from 'react';\nimport { expect } from 'chai';\nimport { mount } from 'enzyme';\nimport PageCard from 'components/PageCard';\nimport SelectionTable from './';\n\ndescribe('<SelectionTable />', () => {\n  it('renders the root Level and title', () => {\n    const selectionTableTitle = 'Classroom';\n    const selectionTable = <SelectionTable title={selectionTableTitle}>\n      <SelectionTable.Level label=\"CN\" />\n      <SelectionTable.Level label=\"RU\" />\n    </SelectionTable>;\n    const wrapper = mount(selectionTable);\n    expect(wrapper.find(SelectionTable.Level)).to.have.length(2);\n    expect(wrapper.find(PageCard.Heading)).to.have.prop('text', selectionTableTitle);\n  });\n\n  it('render sub-Level once a level is clicked', () => {\n    const selectionTable = <SelectionTable>\n      <SelectionTable.Level label=\"CN\">\n        <SelectionTable.Level label=\"CN-1\" />\n        <SelectionTable.Level label=\"CN-2\" />\n        <SelectionTable.Level label=\"CN-3\" />\n      </SelectionTable.Level>\n      <SelectionTable.Level label=\"RU\">\n        <SelectionTable.Level label=\"CN-1\" />\n      </SelectionTable.Level>\n    </SelectionTable>;\n\n    const wrapper = mount(selectionTable);\n    expect(wrapper.find(SelectionTable.Level)).to.have.length(2);\n    wrapper.find(SelectionTable.Level).first().simulate('click');\n    expect(wrapper.find(SelectionTable.Level)).to.have.length(3);\n    expect(wrapper.find(SelectionTable.Level).first()).to.have.prop('label', 'CN-1');\n  });\n});\n"]}
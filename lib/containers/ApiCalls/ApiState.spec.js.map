{"version":3,"sources":["containers/ApiCalls/ApiState.spec.js"],"names":["describe","it","apiState","createSucceeded","isValue","to","equal","status","createLoading","disableDefault","be","true","false","createFailed","error","isLoading","hasSucceeded","hasFailed","shouldPerform","clear"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,SAAT,EAAoB,YAAM;AACxBA,WAAS,UAAT,EAAqB,YAAM;AACzBA,aAAS,oBAAT,EAA+B,YAAM;AACnCC,SAAG,2CAAH,EAAgD,YAAM;AACpD,YAAMC,WAAW,mBAASC,eAAT,EAAjB;AACA,0BAAO,mBAASC,OAAT,CAAiBF,QAAjB,CAAP,EAAmCG,EAAnC,CAAsCC,KAAtC,CAA4C,IAA5C,EAAkD,eAAlD;AACA,0BAAOJ,SAASK,MAAhB,EAAwBF,EAAxB,CAA2BC,KAA3B,CAAiC,WAAjC;AACD,OAJD;AAKD,KAND;;AAQAN,aAAS,kBAAT,EAA6B,YAAM;AACjCC,SAAG,yCAAH,EAA8C,YAAM;AAClD,YAAMC,WAAW,mBAASM,aAAT,EAAjB;AACA,0BAAO,mBAASJ,OAAT,CAAiBF,QAAjB,CAAP,EAAmCG,EAAnC,CAAsCC,KAAtC,CAA4C,IAA5C,EAAkD,eAAlD;AACA,0BAAOJ,SAASK,MAAhB,EAAwBF,EAAxB,CAA2BC,KAA3B,CAAiC,SAAjC;AACD,OAJD;;AAMAL,SAAG,6CACC,iDADJ,EACuD,YAAM;AAC3D,YAAMC,WAAW,mBAASM,aAAT,CAAuB,IAAvB,EAA6B,EAAEC,gBAAgB,IAAlB,EAA7B,CAAjB;AACA,0BAAOP,SAASO,cAAhB,EAAgCJ,EAAhC,CAAmCK,EAAnC,CAAsCC,IAAtC;AACD,OAJD;;AAMAV,SAAG,6CACC,iDADJ,EACuD,YAAM;AAC3D,YAAMC,WAAW,mBAASM,aAAT,CAAuB,IAAvB,CAAjB;AACA,0BAAON,SAASO,cAAhB,EAAgCJ,EAAhC,CAAmCK,EAAnC,CAAsCE,KAAtC;AACD,OAJD;AAKD,KAlBD;;AAoBAZ,aAAS,iBAAT,EAA4B,YAAM;AAChCC,SAAG,wCAAH,EAA6C,YAAM;AACjD,YAAMC,WAAW,mBAASW,YAAT,EAAjB;AACA,0BAAO,mBAAST,OAAT,CAAiBF,QAAjB,CAAP,EAAmCG,EAAnC,CAAsCC,KAAtC,CAA4C,IAA5C,EAAkD,eAAlD;AACA,0BAAOJ,SAASK,MAAhB,EAAwBF,EAAxB,CAA2BC,KAA3B,CAAiC,QAAjC;AACD,OAJD;;AAMAL,SAAG,uCAAH,EAA4C,YAAM;AAChD,YAAMa,QAAQ,YAAd;AACA,YAAMZ,WAAW,mBAASW,YAAT,CAAsB,KAAtB,EAA6BC,KAA7B,CAAjB;AACA,0BAAO,mBAASV,OAAT,CAAiBF,QAAjB,CAAP,EAAmCG,EAAnC,CAAsCC,KAAtC,CAA4C,IAA5C,EAAkD,eAAlD;AACA,0BAAOJ,SAASK,MAAhB,EAAwBF,EAAxB,CAA2BC,KAA3B,CAAiC,QAAjC;AACA,0BAAOJ,SAASY,KAAhB,EAAuBT,EAAvB,CAA0BC,KAA1B,CAAgCQ,KAAhC;AACD,OAND;;AAQAb,SAAG,4CACC,iDADJ,EACuD,YAAM;AAC3D,YAAMC,WAAW,mBAASW,YAAT,CAAsB,KAAtB,EAA6B,YAA7B,EAA2C,EAAEJ,gBAAgB,IAAlB,EAA3C,CAAjB;AACA,0BAAOP,SAASO,cAAhB,EAAgCJ,EAAhC,CAAmCK,EAAnC,CAAsCC,IAAtC;AACD,OAJD;;AAMAV,SAAG,4CACC,iDADJ,EACuD,YAAM;AAC3D,YAAMC,WAAW,mBAASW,YAAT,CAAsB,KAAtB,EAA6B,YAA7B,CAAjB;AACA,0BAAOX,SAASO,cAAhB,EAAgCJ,EAAhC,CAAmCK,EAAnC,CAAsCE,KAAtC;AACD,OAJD;AAKD,KA1BD;;AA4BAZ,aAAS,YAAT,EAAuB,YAAM;AAC3BC,SAAG,qEAAH,EAA0E,YAAM;AAC9E,0BAAO,mBAASG,OAAT,CAAiB,mBAASI,aAAT,EAAjB,CAAP,EAAmDH,EAAnD,CAAsDC,KAAtD,CAA4D,IAA5D,EAAkE,SAAlE;AACA,0BAAO,mBAASF,OAAT,CAAiB,mBAASD,eAAT,EAAjB,CAAP,EAAqDE,EAArD,CAAwDC,KAAxD,CAA8D,IAA9D,EAAoE,WAApE;AACA,0BAAO,mBAASF,OAAT,CAAiB,mBAASS,YAAT,EAAjB,CAAP,EAAkDR,EAAlD,CAAqDC,KAArD,CAA2D,IAA3D,EAAiE,QAAjE;AACD,OAJD;;AAMAL,SAAG,0EAAH,EAA+E,YAAM;AACnF,0BAAO,mBAASG,OAAT,CAAiB,EAAEG,QAAQ,SAAV,EAAjB,CAAP,EAAgDF,EAAhD,CAAmDC,KAAnD,CAAyD,KAAzD,EAAgE,SAAhE;AACA,0BAAO,mBAASF,OAAT,CAAiB,EAAEG,QAAQ,WAAV,EAAjB,CAAP,EAAkDF,EAAlD,CAAqDC,KAArD,CAA2D,KAA3D,EAAkE,WAAlE;AACA,0BAAO,mBAASF,OAAT,CAAiB,EAAEG,QAAQ,QAAV,EAAjB,CAAP,EAA+CF,EAA/C,CAAkDC,KAAlD,CAAwD,KAAxD,EAA+D,QAA/D;AACA,0BAAO,mBAASF,OAAT,CAAiB,EAAjB,CAAP,EAA6BC,EAA7B,CAAgCC,KAAhC,CAAsC,KAAtC,EAA6C,cAA7C;AACA,0BAAO,mBAASF,OAAT,EAAP,EAA2BC,EAA3B,CAA8BC,KAA9B,CAAoC,KAApC,EAA2C,SAA3C;AACA,0BAAO,mBAASF,OAAT,CAAiB,EAAjB,CAAP,EAA6BC,EAA7B,CAAgCC,KAAhC,CAAsC,KAAtC,EAA6C,QAA7C;AACD,OAPD;AAQD,KAfD;;AAiBAN,aAAS,cAAT,EAAyB,YAAM;AAC7BC,SAAG,uDAAH,EAA4D,YAAM;AAChE,0BAAO,mBAASc,SAAT,CAAmB,mBAASP,aAAT,EAAnB,CAAP,EAAqDH,EAArD,CAAwDK,EAAxD,CAA2DC,IAA3D;AACD,OAFD;;AAIAV,SAAG,2EAAH,EAAgF,YAAM;AACpF,0BAAO,mBAASc,SAAT,CAAmB,mBAASZ,eAAT,EAAnB,CAAP,EAAuDE,EAAvD,CAA0DC,KAA1D,CAAgE,KAAhE,EAAuE,WAAvE;AACA,0BAAO,mBAASS,SAAT,CAAmB,mBAASF,YAAT,EAAnB,CAAP,EAAoDR,EAApD,CAAuDC,KAAvD,CAA6D,KAA7D,EAAoE,QAApE;AACD,OAHD;AAID,KATD;;AAWAN,aAAS,iBAAT,EAA4B,YAAM;AAChCC,SAAG,yDAAH,EAA8D,YAAM;AAClE,0BAAO,mBAASe,YAAT,CAAsB,mBAASb,eAAT,EAAtB,CAAP,EAA0DE,EAA1D,CAA6DK,EAA7D,CAAgEC,IAAhE;AACD,OAFD;;AAIAV,SAAG,6EAAH,EAAkF,YAAM;AACtF,0BAAO,mBAASe,YAAT,CAAsB,mBAASR,aAAT,EAAtB,CAAP,EAAwDH,EAAxD,CAA2DC,KAA3D,CAAiE,KAAjE,EAAwE,SAAxE;AACA,0BAAO,mBAASU,YAAT,CAAsB,mBAASH,YAAT,EAAtB,CAAP,EAAuDR,EAAvD,CAA0DC,KAA1D,CAAgE,KAAhE,EAAuE,QAAvE;AACD,OAHD;AAID,KATD;;AAWAN,aAAS,cAAT,EAAyB,YAAM;AAC7BC,SAAG,sDAAH,EAA2D,YAAM;AAC/D,0BAAO,mBAASgB,SAAT,CAAmB,mBAASJ,YAAT,EAAnB,CAAP,EAAoDR,EAApD,CAAuDK,EAAvD,CAA0DC,IAA1D;AACD,OAFD;;AAIAV,SAAG,0EAAH,EAA+E,YAAM;AACnF,0BAAO,mBAASgB,SAAT,CAAmB,mBAAST,aAAT,EAAnB,CAAP,EAAqDH,EAArD,CAAwDC,KAAxD,CAA8D,KAA9D,EAAqE,SAArE;AACA,0BAAO,mBAASW,SAAT,CAAmB,mBAASd,eAAT,EAAnB,CAAP,EAAuDE,EAAvD,CAA0DC,KAA1D,CAAgE,KAAhE,EAAuE,WAAvE;AACD,OAHD;AAID,KATD;;AAWAN,aAAS,kBAAT,EAA6B,YAAM;AACjCC,SAAG,yDAAH,EAA8D,YAAM;AAClE,0BAAO,mBAASiB,aAAT,EAAP,EAAiCb,EAAjC,CAAoCC,KAApC,CAA0C,IAA1C,EAAgD,WAAhD;AACA,0BAAO,mBAASY,aAAT,CAAuB,IAAvB,CAAP,EAAqCb,EAArC,CAAwCC,KAAxC,CAA8C,IAA9C,EAAoD,MAApD;AACA,0BAAO,mBAASY,aAAT,CAAuB,EAAvB,CAAP,EAAmCb,EAAnC,CAAsCC,KAAtC,CAA4C,IAA5C,EAAkD,QAAlD;AACA,0BAAO,mBAASY,aAAT,CAAuB,EAAvB,CAAP,EAAmCb,EAAnC,CAAsCC,KAAtC,CAA4C,IAA5C,EAAkD,QAAlD;AACD,OALD;;AAOAL,SAAG,wCACC,2DADJ,EACiE,YAAM;AACrE,0BAAO,mBAASiB,aAAT,CAAuB,mBAASV,aAAT,GAAyBW,KAAzB,EAAvB,CAAP,EAAiEd,EAAjE,CAAoEK,EAApE,CAAuEC,IAAvE;AACD,OAHD;;AAKAV,SAAG,qDAAH,EAA0D,YAAM;AAC9D,0BAAO,mBAASiB,aAAT,CAAuB,mBAASV,aAAT,EAAvB,CAAP,EAAyDH,EAAzD,CAA4DK,EAA5D,CAA+DE,KAA/D;AACD,OAFD;;AAIAX,SAAG,wDAAH,EAA6D,YAAM;AACjE,0BAAO,mBAASiB,aAAT,CAAuB,mBAASf,eAAT,EAAvB,CAAP,EAA2DE,EAA3D,CAA8DK,EAA9D,CAAiEE,KAAjE;AACD,OAFD;;AAIAX,SAAG,qDAAH,EAA0D,YAAM;AAC9D,0BAAO,mBAASiB,aAAT,CAAuB,mBAASL,YAAT,CAAsB,OAAtB,CAAvB,CAAP,EAA+DR,EAA/D,CAAkEK,EAAlE,CAAqEE,KAArE;AACD,OAFD;AAGD,KAxBD;AAyBD,GApID;AAqID,CAtID","file":"ApiState.spec.js","sourcesContent":["import { expect } from 'chai';\nimport ApiState from './ApiState';\n\ndescribe('ApiCall', () => {\n  describe('ApiState', () => {\n    describe('#createSucceeded()', () => {\n      it('creates a succeeded API call state object', () => {\n        const apiState = ApiState.createSucceeded();\n        expect(ApiState.isValue(apiState)).to.equal(true, 'is a ApiState');\n        expect(apiState.status).to.equal('succeeded');\n      });\n    });\n\n    describe('#createLoading()', () => {\n      it('creates a loading API call state object', () => {\n        const apiState = ApiState.createLoading();\n        expect(ApiState.isValue(apiState)).to.equal(true, 'is a ApiState');\n        expect(apiState.status).to.equal('loading');\n      });\n\n      it('creates a loading API call state object ' +\n          'with disableDefault=true if truthy value passed', () => {\n        const apiState = ApiState.createLoading('id', { disableDefault: true });\n        expect(apiState.disableDefault).to.be.true;\n      });\n\n      it('creates a loading API call state object ' +\n          'with disableDefault=false if falsy value passed', () => {\n        const apiState = ApiState.createLoading('id');\n        expect(apiState.disableDefault).to.be.false;\n      });\n    });\n\n    describe('#createFailed()', () => {\n      it('creates a failed API call state object', () => {\n        const apiState = ApiState.createFailed();\n        expect(ApiState.isValue(apiState)).to.equal(true, 'is a ApiState');\n        expect(apiState.status).to.equal('failed');\n      });\n\n      it('saves the error received as parameter', () => {\n        const error = 'some error';\n        const apiState = ApiState.createFailed('key', error);\n        expect(ApiState.isValue(apiState)).to.equal(true, 'is a ApiState');\n        expect(apiState.status).to.equal('failed');\n        expect(apiState.error).to.equal(error);\n      });\n\n      it('creates a failed API call state object ' +\n          'with disableDefault=true if truthy value passed', () => {\n        const apiState = ApiState.createFailed('key', 'some error', { disableDefault: true });\n        expect(apiState.disableDefault).to.be.true;\n      });\n\n      it('creates a failed API call state object ' +\n          'with disableDefault=false if falsy value passed', () => {\n        const apiState = ApiState.createFailed('key', 'some error');\n        expect(apiState.disableDefault).to.be.false;\n      });\n    });\n\n    describe('#isValue()', () => {\n      it('returns true if passed an object created with the creators of Value', () => {\n        expect(ApiState.isValue(ApiState.createLoading())).to.equal(true, 'loading');\n        expect(ApiState.isValue(ApiState.createSucceeded())).to.equal(true, 'succeeded');\n        expect(ApiState.isValue(ApiState.createFailed())).to.equal(true, 'failed');\n      });\n\n      it('returns false if passed an object not created with the creators of Value', () => {\n        expect(ApiState.isValue({ status: 'loading' })).to.equal(false, 'loading');\n        expect(ApiState.isValue({ status: 'succeeded' })).to.equal(false, 'succeeded');\n        expect(ApiState.isValue({ status: 'failed' })).to.equal(false, 'failed');\n        expect(ApiState.isValue({})).to.equal(false, 'empty object');\n        expect(ApiState.isValue()).to.equal(false, 'nothing');\n        expect(ApiState.isValue('')).to.equal(false, 'string');\n      });\n    });\n\n    describe('#isLoading()', () => {\n      it('returns true if passed a Value#createLoading() object', () => {\n        expect(ApiState.isLoading(ApiState.createLoading())).to.be.true;\n      });\n\n      it('returns false if passed any object not created with Value#createLoading()', () => {\n        expect(ApiState.isLoading(ApiState.createSucceeded())).to.equal(false, 'succeeded');\n        expect(ApiState.isLoading(ApiState.createFailed())).to.equal(false, 'failed');\n      });\n    });\n\n    describe('#hasSucceeded()', () => {\n      it('returns true if passed a Value#createSucceeded() object', () => {\n        expect(ApiState.hasSucceeded(ApiState.createSucceeded())).to.be.true;\n      });\n\n      it('returns false if passed any object not created with Value#createSucceeded()', () => {\n        expect(ApiState.hasSucceeded(ApiState.createLoading())).to.equal(false, 'loading');\n        expect(ApiState.hasSucceeded(ApiState.createFailed())).to.equal(false, 'failed');\n      });\n    });\n\n    describe('#hasFailed()', () => {\n      it('returns true if passed a Value#createFailed() object', () => {\n        expect(ApiState.hasFailed(ApiState.createFailed())).to.be.true;\n      });\n\n      it('returns false if passed any object not created with Value#createFailed()', () => {\n        expect(ApiState.hasFailed(ApiState.createLoading())).to.equal(false, 'loading');\n        expect(ApiState.hasFailed(ApiState.createSucceeded())).to.equal(false, 'succeeded');\n      });\n    });\n\n    describe('#shouldPerform()', () => {\n      it('returns true if passed anything that is not an ApiState', () => {\n        expect(ApiState.shouldPerform()).to.equal(true, 'undefined');\n        expect(ApiState.shouldPerform(null)).to.equal(true, 'null');\n        expect(ApiState.shouldPerform('')).to.equal(true, 'string');\n        expect(ApiState.shouldPerform({})).to.equal(true, 'object');\n      });\n\n      it('returns true if passed an ApiState ' +\n          'that is not loading, has not succeeded and has not failed', () => {\n        expect(ApiState.shouldPerform(ApiState.createLoading().clear())).to.be.true;\n      });\n\n      it('returns false if passed an ApiState that is loading', () => {\n        expect(ApiState.shouldPerform(ApiState.createLoading())).to.be.false;\n      });\n\n      it('returns false if passed an ApiState that has succeeded', () => {\n        expect(ApiState.shouldPerform(ApiState.createSucceeded())).to.be.false;\n      });\n\n      it('returns false if passed an ApiState that has failed', () => {\n        expect(ApiState.shouldPerform(ApiState.createFailed('error'))).to.be.false;\n      });\n    });\n  });\n});\n"]}
{"version":3,"sources":["containers/ApiCalls/ApiState.spec.js"],"names":["describe","test","apiState","createSucceeded","expect","isValue","toBe","status","createLoading","disableDefault","createFailed","error","isLoading","hasSucceeded","hasFailed","shouldPerform","clear"],"mappings":"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","file":"ApiState.spec.js","sourcesContent":["import ApiState from './ApiState';\n\ndescribe('#createSucceeded()', () => {\n  test('creates a succeeded API call state object', () => {\n    const apiState = ApiState.createSucceeded();\n    expect(ApiState.isValue(apiState)).toBe(true);\n    expect(apiState.status).toBe('succeeded');\n  });\n});\n\ndescribe('#createLoading()', () => {\n  test('creates a loading API call state object', () => {\n    const apiState = ApiState.createLoading();\n    expect(ApiState.isValue(apiState)).toBe(true);\n    expect(apiState.status).toBe('loading');\n  });\n\n  test('creates a loading API call state object ' +\n      'with disableDefault=true if truthy value passed', () => {\n    const apiState = ApiState.createLoading('id', { disableDefault: true });\n    expect(apiState.disableDefault).toBe(true);\n  });\n\n  test('creates a loading API call state object ' +\n      'with disableDefault=false if falsy value passed', () => {\n    const apiState = ApiState.createLoading('id');\n    expect(apiState.disableDefault).toBe(false);\n  });\n});\n\ndescribe('#createFailed()', () => {\n  test('creates a failed API call state object', () => {\n    const apiState = ApiState.createFailed();\n    expect(ApiState.isValue(apiState)).toBe(true);\n    expect(apiState.status).toBe('failed');\n  });\n\n  test('saves the error received as parameter', () => {\n    const error = 'some error';\n    const apiState = ApiState.createFailed('key', error);\n    expect(ApiState.isValue(apiState)).toBe(true);\n    expect(apiState.status).toBe('failed');\n    expect(apiState.error).toBe(error);\n  });\n\n  test('creates a failed API call state object ' +\n      'with disableDefault=true if truthy value passed', () => {\n    const apiState = ApiState.createFailed('key', 'some error', { disableDefault: true });\n    expect(apiState.disableDefault).toBe(true);\n  });\n\n  test('creates a failed API call state object ' +\n      'with disableDefault=false if falsy value passed', () => {\n    const apiState = ApiState.createFailed('key', 'some error');\n    expect(apiState.disableDefault).toBe(false);\n  });\n});\n\ndescribe('#isValue()', () => {\n  test('returns true if passed an object created with the creators of Value', () => {\n    expect(ApiState.isValue(ApiState.createLoading())).toBe(true);\n    expect(ApiState.isValue(ApiState.createSucceeded())).toBe(true);\n    expect(ApiState.isValue(ApiState.createFailed())).toBe(true);\n  });\n\n  test('returns false if passed an object not created with the creators of Value', () => {\n    expect(ApiState.isValue({ status: 'loading' })).toBe(false);\n    expect(ApiState.isValue({ status: 'succeeded' })).toBe(false);\n    expect(ApiState.isValue({ status: 'failed' })).toBe(false);\n    expect(ApiState.isValue({})).toBe(false);\n    expect(ApiState.isValue()).toBe(false);\n    expect(ApiState.isValue('')).toBe(false);\n  });\n});\n\ndescribe('#isLoading()', () => {\n  test('returns true if passed a Value#createLoading() object', () => {\n    expect(ApiState.isLoading(ApiState.createLoading())).toBe(true);\n  });\n\n  test('returns false if passed any object not created with Value#createLoading()', () => {\n    expect(ApiState.isLoading(ApiState.createSucceeded())).toBe(false);\n    expect(ApiState.isLoading(ApiState.createFailed())).toBe(false);\n  });\n});\n\ndescribe('#hasSucceeded()', () => {\n  test('returns true if passed a Value#createSucceeded() object', () => {\n    expect(ApiState.hasSucceeded(ApiState.createSucceeded())).toBe(true);\n  });\n\n  test('returns false if passed any object not created with Value#createSucceeded()', () => {\n    expect(ApiState.hasSucceeded(ApiState.createLoading())).toBe(false);\n    expect(ApiState.hasSucceeded(ApiState.createFailed())).toBe(false);\n  });\n});\n\ndescribe('#hasFailed()', () => {\n  test('returns true if passed a Value#createFailed() object', () => {\n    expect(ApiState.hasFailed(ApiState.createFailed())).toBe(true);\n  });\n\n  test('returns false if passed any object not created with Value#createFailed()', () => {\n    expect(ApiState.hasFailed(ApiState.createLoading())).toBe(false);\n    expect(ApiState.hasFailed(ApiState.createSucceeded())).toBe(false);\n  });\n});\n\ndescribe('#shouldPerform()', () => {\n  test('returns true if passed anything that is not an ApiState', () => {\n    expect(ApiState.shouldPerform()).toBe(true);\n    expect(ApiState.shouldPerform(null)).toBe(true);\n    expect(ApiState.shouldPerform('')).toBe(true);\n    expect(ApiState.shouldPerform({})).toBe(true);\n  });\n\n  test('returns true if passed an ApiState ' +\n      'that is not loading, has not succeeded and has not failed', () => {\n    expect(ApiState.shouldPerform(ApiState.createLoading().clear())).toBe(true);\n  });\n\n  test('returns false if passed an ApiState that is loading', () => {\n    expect(ApiState.shouldPerform(ApiState.createLoading())).toBe(false);\n  });\n\n  test('returns false if passed an ApiState that has succeeded', () => {\n    expect(ApiState.shouldPerform(ApiState.createSucceeded())).toBe(false);\n  });\n\n  test('returns false if passed an ApiState that has failed', () => {\n    expect(ApiState.shouldPerform(ApiState.createFailed('error'))).toBe(false);\n  });\n});\n"]}
{"version":3,"sources":["containers/ApiCalls/ApiAction.spec.js"],"names":["describe","log","ApiAction","buildAction","configParam","Object","assign","type","error","Error","url","method","beforeEach","spy","require","default","it","create","to","throw","undefined","not","action","equal","originalAction","callAction","otherProp","be","an","instanceof","args","eql","context","isApiAction","isStarted","true","isSuccess","false","isFailure"],"mappings":"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","file":"ApiAction.spec.js","sourcesContent":["import { expect } from 'chai';\nimport Sinon from 'sinon';\n\ndescribe('ApiCall', () => {\n  describe('ApiAction', () => {\n    let log;\n    let ApiAction;\n\n    const buildAction = (configParam = {}) => Object.assign({},\n      {\n        type: 'CALL_FAILURE',\n        error: new Error(),\n        url: '/some/path',\n        method: 'GET',\n      },\n      configParam);\n\n    beforeEach(() => {\n      log = { error: Sinon.spy() };\n      // eslint-disable-next-line global-require, import/no-webpack-loader-syntax\n      ApiAction = require('inject-loader?domain/log!./ApiAction')({\n        'domain/log': log,\n      }).default;\n    });\n\n    it('throws an error if nothing is passed', () => {\n      expect(() => ApiAction.create()).to.throw();\n    });\n\n    it('throws an error if a parameter that is not an object is passed', () => {\n      expect(() => ApiAction.create('some string')).to.throw();\n    });\n\n    it('throws an error if the action does not have a url property', () => {\n      expect(() => ApiAction.create(buildAction({ url: undefined }))).to.throw();\n    });\n\n    it('throws an error if the url property is not a string', () => {\n      expect(() => ApiAction.create(buildAction({ url: {} }))).to.throw();\n    });\n\n    it('throws an error if the action does not have a method proptery', () => {\n      expect(() => ApiAction.create(buildAction({ method: undefined }))).to.throw();\n    });\n\n    it('throws an error if the method property is not GET, PUT, POST or DELETE', () => {\n      expect(() => ApiAction.create(buildAction({ method: 'some string' }))).to.throw();\n      expect(() => ApiAction.create(buildAction({ method: 'GET' }))).to.not.throw();\n      expect(() => ApiAction.create(buildAction({ method: 'PUT' }))).to.not.throw();\n      expect(() => ApiAction.create(buildAction({ method: 'POST' }))).to.not.throw();\n      expect(() => ApiAction.create(buildAction({ method: 'DELETE' }))).to.not.throw();\n    });\n\n    it('throws an error if the action does not have a type proptery', () => {\n      expect(() => ApiAction.create(buildAction({ type: undefined }))).to.throw();\n    });\n\n    it('throws an error if the type proptery has lower case letters', () => {\n      expect(() => ApiAction.create(buildAction({ type: 'Call_REQUEST' }))).to.throw();\n    });\n\n    it('throws an error ' +\n        'if the type property does not end with _REQUEST, _SUCCESS or _FAILURE', () => {\n      expect(() => ApiAction.create(buildAction({ type: 'some string' }))).to.throw();\n      expect(() => ApiAction.create(buildAction({ type: 'CALL_REQUEST' }))).to.not.throw();\n      expect(() => ApiAction.create(buildAction({ type: 'CALL_SUCCESS' }))).to.not.throw();\n      expect(() => ApiAction.create(buildAction({ type: 'CALL_FAILURE' }))).to.not.throw();\n    });\n\n    it('returns the wrapped action if the provided one is valid', () => {\n      const action = ApiAction.create(buildAction());\n      expect(action.url).to.equal('/some/path');\n      expect(action.method).to.equal('GET');\n    });\n\n    it('does not return the same object instance it receives', () => {\n      const originalAction = buildAction();\n      const action = ApiAction.create(originalAction);\n      expect(originalAction).to.not.equal(action);\n    });\n\n    it('converts the provided URL to lower case', () => {\n      const action = ApiAction.create(buildAction({ url: '/some/Path' }));\n      expect(action.url).to.equal('/some/path');\n    });\n\n    it('converts the provided method to upper case', () => {\n      const action = ApiAction.create(buildAction({ method: 'get' }));\n      expect(action.method).to.equal('GET');\n    });\n\n    it('allows to access all the properties of the original action', () => {\n      const callAction = ApiAction.create(buildAction({ otherProp: 1 }));\n      expect(callAction.otherProp).to.equal(1);\n    });\n\n    it('throws an error if a _FAILURE action does not have an error property', () => {\n      expect(() => ApiAction.create(buildAction({ error: undefined }))).to.throw();\n      expect(() => ApiAction.create(buildAction({ error: null }))).to.throw();\n      expect(() => ApiAction.create(buildAction({ error: '' }))).to.not.throw();\n    });\n\n    it('converts action.error into an instance of Error if it\\'s not already the case', () => {\n      expect(ApiAction.create(buildAction({ error: '' })).error).to.be.an.instanceof(Error);\n    });\n\n    it('logs the error of a failure action', () => {\n      const error = new Error('an error');\n      ApiAction.create(buildAction({ error }));\n      expect(log.error.args).to.eql([[error]]);\n    });\n\n    context('#isApiAction()', () => {\n      it('returns true an action was created with ApiAction.create()', () => {\n        const originalAction = buildAction({ type: 'CALL_REQUEST' });\n        const callAction = ApiAction.create(originalAction);\n        expect(ApiAction.isApiAction(callAction)).to.equal(true, 'api action');\n        expect(ApiAction.isApiAction(originalAction)).to.equal(false, 'original action');\n      });\n    });\n\n    context('#isStarted()', () => {\n      it('returns true if action.type ends with _REQUEST', () => {\n        const callAction = ApiAction.create(buildAction({ type: 'CALL_REQUEST' }));\n        expect(ApiAction.isStarted(callAction)).to.be.true;\n        expect(ApiAction.isSuccess(callAction)).to.be.false;\n        expect(ApiAction.isFailure(callAction)).to.be.false;\n      });\n    });\n\n    context('#isSuccess()', () => {\n      it('returns true if action.type ends with _SUCCESS', () => {\n        const callAction = ApiAction.create(buildAction({ type: 'CALL_SUCCESS' }));\n        expect(ApiAction.isStarted(callAction)).to.be.false;\n        expect(ApiAction.isSuccess(callAction)).to.be.true;\n        expect(ApiAction.isFailure(callAction)).to.be.false;\n      });\n    });\n\n    context('#isFailure()', () => {\n      it('returns true if action.type ends with _FAILURE', () => {\n        const callAction = ApiAction.create(buildAction());\n        expect(ApiAction.isStarted(callAction)).to.be.false;\n        expect(ApiAction.isSuccess(callAction)).to.be.false;\n        expect(ApiAction.isFailure(callAction)).to.be.true;\n      });\n    });\n  });\n});\n"]}
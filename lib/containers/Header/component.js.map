{"version":3,"sources":["containers/Header/component.jsx"],"names":["Header","props","debug","impersonate","classes","__impersonating","Header_burger","e","function","onHamburgerClick","Header_logo","Header_wrap","router","routes","propTypes","PropTypes","any","isRequired","array","object","func","mapStateToProps","state","userProfile","get","user","profile","impersonated_user_email","email","sub","impersonated_user_id","avatarUrl","impersonated_user_avatar_url","gender","impersonated_user_gender","name","impersonated_user_name","familyName","impersonated_user_family_name","middleName","impersonated_user_middle_name","givenName","impersonated_user_given_name"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,gBAAIC,KAAJ,CAAU,0BAAV,EAAsCD,MAAME,WAA5C;AACA,MAAMC,UAAU,0BAAW,gBAAOJ,MAAlB,EACZ,yBAAU,QAAV,CADY,sBAET,gBAAOK,eAFE,EAEgBJ,MAAME,WAFtB,EAAhB;AAGA,SAAO;AAAA;AAAA,MAAK,WAAWC,OAAhB;AACL;AAAA;AAAA,QAAK,WAAW,0BAAW,gBAAOE,aAAlB,EAAiC,yBAAU,WAAV,CAAjC,CAAhB;AACI,iBAAS,iBAACC,CAAD;AAAA,iBAAO,gBAAGC,QAAH,CAAYP,MAAMQ,gBAAlB,KAAuCR,MAAMQ,gBAAN,CAAuBF,CAAvB,CAA9C;AAAA,SADb;AAEE,sDAAM,IAAG,QAAT;AAFF,KADK;AAKL,2CAAK,WAAW,gBAAOG,WAAvB,GALK;AAML;AAAA;AAAA,QAAK,WAAW,gBAAOC,WAAvB;AACE,0DAAU,aAAaV,MAAME,WAA7B;AACI,gBAAQF,MAAMW,MADlB;AAEI,gBAAQX,MAAMY,MAFlB;AADF;AANK,GAAP;AAYD,CAjBD;;AAmBAb,OAAOc,SAAP,GAAmB;AACjBF,UAAQ,gBAAMG,SAAN,CAAgBC,GAAhB,CAAoBC,UADX;AAEjBJ,UAAQ,gBAAME,SAAN,CAAgBG,KAAhB,CAAsBD,UAFb;AAGjBd,eAAa,gBAAMY,SAAN,CAAgBI,MAHZ;AAIjBV,oBAAkB,gBAAMM,SAAN,CAAgBK;AAJjB,CAAnB;;AAOA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAMC,cAAcD,MAAME,GAAN,CAAU,cAAV,EAA0BC,IAA1B,CAA+BC,OAAnD;AACA,MAAIvB,oBAAJ;AACA,MAAI,CAAEoB,YAAYI,uBAAlB,EAA2C,OAAO,EAAExB,wBAAF,EAAP;;AAE3CA,gBAAc;AACZyB,WAAOL,YAAYI,uBADP;AAEZE,SAAKN,YAAYO,oBAFL;AAGZC,eAAWR,YAAYS,4BAHX;AAIZC,YAAQV,YAAYW,wBAJR;AAKZC,UAAMZ,YAAYa,sBALN;AAMZC,gBAAYd,YAAYe,6BANZ;AAOZC,gBAAYhB,YAAYiB,6BAPZ;AAQZC,eAAWlB,YAAYmB;AARX,GAAd;AAUA,SAAO,EAAEvC,wBAAF,EAAP;AACD;;kBAEc,sBAAQkB,eAAR,EAAyB,IAAzB,EAA+BrB,MAA/B,C","file":"component.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport styles from './style.postcss';\nimport UserInfo from './UserInfo';\nimport log from 'domain/log';\nimport { connect } from 'domain/connect';\nimport Icon from 'components/Icon';\nimport is from 'is_js';\nimport testClass from 'domain/testClass';\n\nconst Header = (props) => {\n  log.debug('Header - impersonateData', props.impersonate);\n  const classes = classnames(styles.Header,\n      testClass('header'),\n      { [styles.__impersonating]: props.impersonate });\n  return <div className={classes}>\n    <div className={classnames(styles.Header_burger, testClass('hamburger'))}\n        onClick={(e) => is.function(props.onHamburgerClick) && props.onHamburgerClick(e)}>\n      <Icon id=\"burger\" />\n    </div>\n    <div className={styles.Header_logo} />\n    <div className={styles.Header_wrap}>\n      <UserInfo impersonate={props.impersonate}\n          router={props.router}\n          routes={props.routes} />\n    </div>\n  </div>;\n};\n\nHeader.propTypes = {\n  router: React.PropTypes.any.isRequired,\n  routes: React.PropTypes.array.isRequired,\n  impersonate: React.PropTypes.object,\n  onHamburgerClick: React.PropTypes.func,\n};\n\nfunction mapStateToProps(state) {\n  const userProfile = state.get('singleSignOn').user.profile;\n  let impersonate;\n  if (! userProfile.impersonated_user_email) return { impersonate };\n\n  impersonate = {\n    email: userProfile.impersonated_user_email,\n    sub: userProfile.impersonated_user_id,\n    avatarUrl: userProfile.impersonated_user_avatar_url,\n    gender: userProfile.impersonated_user_gender,\n    name: userProfile.impersonated_user_name,\n    familyName: userProfile.impersonated_user_family_name,\n    middleName: userProfile.impersonated_user_middle_name,\n    givenName: userProfile.impersonated_user_given_name,\n  };\n  return { impersonate };\n}\n\nexport default connect(mapStateToProps, null)(Header);\n"]}
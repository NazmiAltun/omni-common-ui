{"version":3,"sources":["containers/AuthorizationHandler/spec.jsx"],"names":["baseProps","getComponent","kids","extraProps","state","singleSignOn","user","beforeEach","fetchPrivilegesIfNeeded","jest","fn","expired","profile","sub","describe","merge","featureLogin","test","wrapper","expect","find","toHaveLength","not","toHaveBeenCalled","havePrivilegesLoaded","contains","toBe","permissionChecks","toThrowError","canAccess","props","toHaveBeenCalledWith","Object","assign","children","mockReturnValue","permissionChecks1","permissionChecks2","routes","result","toEqual"],"mappings":"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","file":"spec.js","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport { Map } from 'immutable';\nimport Config from 'domain/Config';\nimport { AuthorizationHandler, mapStateToProps } from './';\n\nlet baseProps;\n\nconst getComponent = (kids = null, extraProps = {}) =>\n  shallow(<AuthorizationHandler {...baseProps}\n      {...extraProps}>\n    {kids}\n  </AuthorizationHandler>);\n\nconst state = new Map({\n  singleSignOn: new Map({\n    user: new Map(),\n  }),\n});\n\nbeforeEach(() => {\n  baseProps = {\n    fetchPrivilegesIfNeeded: jest.fn(),\n    user: new Map({\n      expired: false,\n      profile: {\n        sub: '123',\n      },\n    }),\n  };\n});\n\ndescribe('component', () => {\n  describe('when featureLogin is not true', () => {\n    beforeEach(() => {\n      Config.merge({ featureLogin: false });\n    });\n\n    test('renders its children', () => {\n      const wrapper = getComponent(<div id=\"inner\" />);\n      expect(wrapper.find('#inner')).toHaveLength(1);\n    });\n\n    test('does not call fetchPrivilegesIfNeeded even if the user is fine', () => {\n      getComponent();\n      expect(baseProps.fetchPrivilegesIfNeeded).not.toHaveBeenCalled();\n    });\n\n    test('renders its children if the user is fine', () => {\n      const wrapper = getComponent(<div id=\"inner\" />);\n      expect(wrapper.find('#inner')).toHaveLength(1);\n    });\n\n    test('renders its children even if the user is not valid', () => {\n      baseProps.user = null;\n      const wrapper = getComponent(<div id=\"inner\" />);\n      expect(wrapper.find('#inner')).toHaveLength(1);\n    });\n  });\n\n  describe('when featureLogin is true', () => {\n    beforeEach(() => {\n      Config.merge({ featureLogin: true });\n    });\n\n    test('does nothing if no route is provided', () => {\n      const wrapper = getComponent(<div id=\"inner\" />, { havePrivilegesLoaded: () => true });\n      expect(wrapper.contains(<div id=\"inner\" />)).toBe(true);\n    });\n\n    test('renders a loading spinner if privileges have not been loaded', () => {\n      const wrapper = getComponent(<div id=\"inner\" />, { havePrivilegesLoaded: () => false });\n      expect(wrapper.contains(\n        <div className=\"pace\"><div className=\"pace-activity\" /></div>\n      )).toBe(true);\n    });\n\n    test('throws if permissionChecks.canAccess is not a function', () => {\n      expect(() =>\n        getComponent(null, { havePrivilegesLoaded: () => true, permissionChecks: [{}] })\n      ).toThrowError();\n    });\n\n    test('calls permissionChecks.canAccess passing all props if it is a function', () => {\n      const canAccess = jest.fn();\n      const props = { permissionChecks: [{ canAccess }], havePrivilegesLoaded: () => true };\n      getComponent(null, props);\n      expect(canAccess).toHaveBeenCalledWith(\n          Object.assign({ children: null }, baseProps, props));\n    });\n\n    test('calls canAccess() for all routes until one returns false', () => {\n      const props = {\n        permissionChecks: [\n          { canAccess: jest.fn().mockReturnValue(true) },\n          { canAccess: jest.fn().mockReturnValue(false) },\n          { canAccess: jest.fn().mockReturnValue(false) },\n        ],\n        havePrivilegesLoaded: () => true,\n      };\n      getComponent(null, props);\n      expect(props.permissionChecks[0].canAccess).toHaveBeenCalled();\n      expect(props.permissionChecks[1].canAccess).toHaveBeenCalled();\n      expect(props.permissionChecks[2].canAccess).not.toHaveBeenCalled();\n    });\n\n    test('calls fetchPrivilegesIfNeeded if the user is fine but permissions have not loaded', () => {\n      baseProps.havePrivilegesLoaded = () => false;\n      getComponent();\n      expect(baseProps.fetchPrivilegesIfNeeded).toHaveBeenCalled();\n    });\n\n    test('renders its children if the user is fine and permissions have loaded', () => {\n      baseProps.havePrivilegesLoaded = () => true;\n      const wrapper = getComponent(<div id=\"inner\" />);\n      expect(wrapper.find('#inner')).toHaveLength(1);\n    });\n  });\n});\n\ndescribe('mapStateToProps()', () => {\n  beforeEach(() => {\n    Config.merge({ featureLogin: true });\n  });\n\n  test('returns permissionChecks as an array with all routes that have a canAccess()', () => {\n    const permissionChecks1 = { canAccess: () => {} };\n    const permissionChecks2 = { canAccess: () => {} };\n    const routes = [{}, permissionChecks1, {}, permissionChecks2];\n    const result = mapStateToProps(state, { routes });\n    expect(result.permissionChecks).toEqual([permissionChecks1, permissionChecks2]);\n  });\n\n  test('returns permissionChecks as an array with one route ' +\n      'if there is only one that has a canAccess()', () => {\n    const permissionChecks1 = { canAccess: () => {} };\n    const routes = [{}, permissionChecks1, {}];\n    const result = mapStateToProps(state, { routes });\n    expect(result.permissionChecks).toEqual([permissionChecks1]);\n  });\n\n  test('returns permissionChecks as an empty array if no route has canAccess()', () => {\n    expect(mapStateToProps(state, { routes: [{}, {}, {}] }).permissionChecks).toEqual([]);\n  });\n});\n"]}
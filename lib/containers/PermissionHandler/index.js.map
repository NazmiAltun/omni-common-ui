{"version":3,"sources":["containers/PermissionHandler/index.jsx"],"names":["mapStateToProps","PermissionHandler","props","permissionChecks","children","havePrivilegesLoaded","get","undefined","forbiddenRoute","find","canAccess","propTypes","PropTypes","arrayOf","shape","func","isRequired","node","state","routes","filter","route","not","existy","PRODUCTION","function","Error","config","mapDispatchToProps","dispatch"],"mappings":";;;;;;QAuCgBA,e,GAAAA,e;;AAvChB;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMC,gDAAoB,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAAA,MAClCC,gBADkC,GACmBD,KADnB,CAClCC,gBADkC;AAAA,MAChBC,QADgB,GACmBF,KADnB,CAChBE,QADgB;AAAA,MACNC,oBADM,GACmBH,KADnB,CACNG,oBADM;;AAE1C,MAAI,iBAAOC,GAAP,CAAW,cAAX,MAA+B,IAAnC,EAAyC;AACvC,WAAOF,QAAP;AACD;;AAED,MAAI,CAAEC,sBAAN,EAA8B;AAC5B,WAAO,IAAP;AACD;;AAED,MAAI,gBAAGE,SAAH,CAAaJ,gBAAb,CAAJ,EAAoC;AAClC,WAAOC,QAAP;AACD;;AAED,MAAMI,iBAAiBL,iBAAiBM,IAAjB,CAAsB;AAAA,QAAGC,SAAH,QAAGA,SAAH;AAAA,WAAmB,CAAEA,UAAUR,KAAV,CAArB;AAAA,GAAtB,CAAvB;AACA,MAAI,gBAAGK,SAAH,CAAaC,cAAb,CAAJ,EAAkC;AAChC,WAAOJ,QAAP;AACD;;AAED,SAAO,gEAA4BF,KAA5B,CAAP;AACD,CApBM;;AAsBPD,kBAAkBU,SAAlB,GAA8B;AAC5BR,oBAAkB,gBAAMS,SAAN,CAAgBC,OAAhB,CAAwB,gBAAMD,SAAN,CAAgBE,KAAhB,CAAsB;AAC9DJ,eAAW,gBAAME,SAAN,CAAgBG,IAAhB,CAAqBC;AAD8B,GAAtB,CAAxB,CADU;AAI5BZ,YAAU,gBAAMQ,SAAN,CAAgBK,IAJE;AAK5BZ,wBAAsB,gBAAMO,SAAN,CAAgBG,IAAhB,CAAqBC;AALf,CAA9B;;AAQO,SAAShB,eAAT,CAAyBkB,KAAzB,SAA4C;AAAA,MAAVC,MAAU,SAAVA,MAAU;;AACjD,MAAMhB,mBAAmBgB,OAAOC,MAAP,CAAc,UAACC,KAAD,EAAW;AAChD,QAAI,gBAAGC,GAAH,CAAOC,MAAP,CAAcF,MAAMX,SAApB,CAAJ,EAAoC;AAClC,aAAO,KAAP;AACD;;AAED,QAAI,CAAEc,UAAN,EAAkB;AAChB,UAAI,gBAAGF,GAAH,CAAOG,QAAP,CAAgBJ,MAAMX,SAAtB,CAAJ,EAAsC;AACpC,cAAM,IAAIgB,KAAJ,CAAU,2DAAV,CAAN;AACD;AACF;;AAED,WAAO,IAAP;AACD,GAZwB,CAAzB;;AAcA,SAAO,EAAEvB,kCAAF,EAAoBwB,QAAQ,0BAAgBrB,GAAhB,CAAoBa,MAApB,CAA5B,EAAP;AACD;;AAED,SAASS,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO,oDAAsCA,QAAtC,CAAP;AACD;;kBAEc,uBAAQ7B,eAAR,EAAyB4B,kBAAzB,EAA6C3B,iBAA7C,C","file":"index.js","sourcesContent":["import React from 'react';\nimport connect from 'domain/connect';\nimport is from 'is_js';\nimport { actions as privilegesActions } from 'containers/Privileges';\nimport { bindActionCreators } from 'redux';\nimport AuthorisationErrorPage from 'components/AuthorisationErrorPage';\nimport ErrorPageConfig from 'domain/ErrorPageConfig';\nimport Config from 'domain/Config';\n\nexport const PermissionHandler = (props) => {\n  const { permissionChecks, children, havePrivilegesLoaded } = props;\n  if (Config.get('featureLogin') !== true) {\n    return children;\n  }\n\n  if (! havePrivilegesLoaded()) {\n    return null;\n  }\n\n  if (is.undefined(permissionChecks)) {\n    return children;\n  }\n\n  const forbiddenRoute = permissionChecks.find(({ canAccess }) => ! canAccess(props));\n  if (is.undefined(forbiddenRoute)) {\n    return children;\n  }\n\n  return <AuthorisationErrorPage {...props} />;\n};\n\nPermissionHandler.propTypes = {\n  permissionChecks: React.PropTypes.arrayOf(React.PropTypes.shape({\n    canAccess: React.PropTypes.func.isRequired,\n  })),\n  children: React.PropTypes.node,\n  havePrivilegesLoaded: React.PropTypes.func.isRequired,\n};\n\nexport function mapStateToProps(state, { routes }) {\n  const permissionChecks = routes.filter((route) => {\n    if (is.not.existy(route.canAccess)) {\n      return false;\n    }\n\n    if (! PRODUCTION) {\n      if (is.not.function(route.canAccess)) {\n        throw new Error('canAccess in the route configuration should be a function');\n      }\n    }\n\n    return true;\n  });\n\n  return { permissionChecks, config: ErrorPageConfig.get(routes) };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(privilegesActions, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionHandler);\n"]}
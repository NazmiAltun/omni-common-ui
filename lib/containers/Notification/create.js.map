{"version":3,"sources":["containers/Notification/create.js"],"names":["reviver","key","val","create","data","mapEntries"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,UAAU,SAAVA,OAAU,OAAgB;AAAA;AAAA,MAAdC,GAAc;AAAA,MAATC,GAAS;;AAC9B,MAAI,CAAEA,GAAN,EAAW,OAAO,CAACD,GAAD,EAAMC,GAAN,CAAP;AACX,UAAQD,GAAR;AACE,SAAK,WAAL;AACA,SAAK,kBAAL;AACE,aAAO,CAAC,QAAD,EAAW,sBAAOC,GAAP,CAAX,CAAP;AACF;AACE,aAAO,CAACD,GAAD,EAAMC,GAAN,CAAP;AALJ;AAOD,CATD;;AAWA,IAAMC,SAAS,SAATA,MAAS,CAACC,IAAD;AAAA,SAAU,oBAAiBA,IAAjB,EAAuBC,UAAvB,CAAkCL,OAAlC,CAAV;AAAA,CAAf;;kBAEeG,M","file":"create.js","sourcesContent":["import moment from 'domain/moment';\nimport Notification from './model';\n\nconst reviver = ([key, val]) => {\n  if (! val) return [key, val];\n  switch (key) {\n    case 'timestamp':\n    case 'notedDateTimeUtc':\n      return ['moment', moment(val)];\n    default:\n      return [key, val];\n  }\n};\n\nconst create = (data) => new Notification(data).mapEntries(reviver);\n\nexport default create;\n"]}
{"version":3,"sources":["containers/Impersonate/reducer.js"],"names":["postedImpersonate","state","action","type","set","create","loading","payload"],"mappings":";;;;;;AACA;;AAKA;;AACA;;;;AACA;;;;AARA;kBAUe,qCAAgB;AAC7BA;AAD6B,CAAhB,C;;;AAIf,SAASA,iBAAT,GAAoD;AAAA,MAAzBC,KAAyB,uEAAjB,oBAAI,EAAJ,CAAiB;AAAA,MAARC,MAAQ;;AAClD,UAAQA,OAAOC,IAAf;AACE;AACE,aAAOF,MAAMG,GAAN,CAAU,aAAV,EAAyB,4BAAkBC,MAAlB,CAAyB,EAAEC,SAAS,IAAX,EAAzB,CAAzB,CAAP;AACF;AACE,aAAOL,MAAMG,GAAN,CAAU,aAAV,EAAyB,4BAAkBC,MAAlB,CAAyBH,OAAOK,OAAhC,CAAzB,CAAP;AACF;AACE,aAAO,oBAAI,EAAJ,CAAP;AACF;AACE,aAAON,KAAP;AARJ;AAUD","file":"reducer.js","sourcesContent":["/* eslint import/prefer-default-export: \"off\" */\nimport {\n  POST_IMPERSONATE_REQUEST,\n  POST_IMPERSONATE_SUCCESS,\n  CLEAR_IMPERSONATE_DATA,\n} from './actions';\nimport { Map } from 'immutable';\nimport ApiResponseHelper from 'domain/ApiResponseHelper';\nimport { combineReducers } from 'redux-immutable';\n\nexport default combineReducers({\n  postedImpersonate,\n});\n\nfunction postedImpersonate(state = Map({}), action) {\n  switch (action.type) {\n    case POST_IMPERSONATE_REQUEST:\n      return state.set('impersonate', ApiResponseHelper.create({ loading: true }));\n    case POST_IMPERSONATE_SUCCESS:\n      return state.set('impersonate', ApiResponseHelper.create(action.payload));\n    case CLEAR_IMPERSONATE_DATA:\n      return Map({});\n    default:\n      return state;\n  }\n}\n"]}
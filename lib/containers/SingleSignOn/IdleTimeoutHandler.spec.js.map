{"version":3,"sources":["containers/SingleSignOn/IdleTimeoutHandler.spec.jsx"],"names":["jest","mock","mountComponent","beforeEach","resetAllMocks","useFakeTimers","afterEach","clearAllTimers","describe","merge","autoSignOutTimeout","test","runAllTimers","expect","forceSignoutRedirect","not","toHaveBeenCalled","wrapper","find","toHaveLength","halfTimeoutTime","runTimersToTime","window","document","dispatchEvent","Event"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,KAAKC,IAAL,CAAU,eAAV;;AAEA,IAAMC,iBAAiB,SAAjBA,cAAiB;AAAA,SAAM,mBAAM;AAAA;AAAA;AAAoB,2CAAK,IAAG,OAAR;AAApB,GAAN,CAAN;AAAA,CAAvB;;AAEAC,WAAW,YAAM;AACfH,OAAKI,aAAL;AACAJ,OAAKK,aAAL;AACD,CAHD;;AAKAC,UAAU,YAAM;AACdN,OAAKO,cAAL;AACD,CAFD;;AAIAC,SAAS,kCAAT,EAA6C,YAAM;AACjDL,aAAW,YAAM;AACf,qBAAOM,KAAP,CAAa,EAAEC,oBAAoB,KAAtB,EAAb;AACD,GAFD;;AAIAC,OAAK,kDAAL,EAAyD,YAAM;AAC7DT;AACAF,SAAKY,YAAL;AACAC,WAAO,sBAAYC,oBAAnB,EAAyCC,GAAzC,CAA6CC,gBAA7C;AACD,GAJD;;AAMAL,OAAK,sBAAL,EAA6B,YAAM;AACjC,QAAMM,UAAUf,gBAAhB;AACAW,WAAOI,QAAQC,IAAR,CAAa,QAAb,CAAP,EAA+BC,YAA/B,CAA4C,CAA5C;AACD,GAHD;AAID,CAfD;;AAiBAX,SAAS,qCAAT,EAAgD,YAAM;AACpD,MAAME,qBAAqB,CAA3B;AACAP,aAAW,YAAM;AACf,qBAAOM,KAAP,CAAa,EAAEC,sCAAF,EAAb;AACD,GAFD;;AAIAC,OAAK,sFAAL,EAA6F,YAAM;AACjGT;AACAF,SAAKY,YAAL;AACAC,WAAO,sBAAYC,oBAAnB,EAAyCE,gBAAzC;AACD,GAJD;;AAMAL,OAAK,kGACD,+CADJ,EACqD,YAAM;AACzD,QAAMS,kBAAmBV,qBAAqB,IAAtB,GAA8B,CAAtD;AACAR;AACAF,SAAKqB,eAAL,CAAqBD,eAArB;AACAE,WAAOC,QAAP,CAAgBC,aAAhB,CAA8B,IAAIC,KAAJ,CAAU,OAAV,CAA9B;AACAzB,SAAKqB,eAAL,CAAqBD,eAArB;AACAP,WAAO,sBAAYC,oBAAnB,EAAyCC,GAAzC,CAA6CC,gBAA7C;AACD,GARD;;AAUAL,OAAK,sBAAL,EAA6B,YAAM;AACjC,QAAMM,UAAUf,gBAAhB;AACAW,WAAOI,QAAQC,IAAR,CAAa,QAAb,CAAP,EAA+BC,YAA/B,CAA4C,CAA5C;AACD,GAHD;AAID,CA1BD","file":"IdleTimeoutHandler.spec.js","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport userManager from './userManager';\nimport Config from 'domain/Config';\nimport IdleTimeoutHandler from './IdleTimeoutHandler';\n\njest.mock('./userManager');\n\nconst mountComponent = () => mount(<IdleTimeoutHandler><div id=\"inner\" /></IdleTimeoutHandler>);\n\nbeforeEach(() => {\n  jest.resetAllMocks();\n  jest.useFakeTimers();\n});\n\nafterEach(() => {\n  jest.clearAllTimers();\n});\n\ndescribe('when autoSignOutTimeout is false', () => {\n  beforeEach(() => {\n    Config.merge({ autoSignOutTimeout: false });\n  });\n\n  test('does not call userManager.forceSignoutRedirect()', () => {\n    mountComponent();\n    jest.runAllTimers();\n    expect(userManager.forceSignoutRedirect).not.toHaveBeenCalled();\n  });\n\n  test('renders its children', () => {\n    const wrapper = mountComponent();\n    expect(wrapper.find('#inner')).toHaveLength(1);\n  });\n});\n\ndescribe('when autoSignOutTimeout is a number', () => {\n  const autoSignOutTimeout = 1;\n  beforeEach(() => {\n    Config.merge({ autoSignOutTimeout });\n  });\n\n  test('calls userManager.forceSignoutRedirect() after the seconds set in autoSignOutTimeout', () => {\n    mountComponent();\n    jest.runAllTimers();\n    expect(userManager.forceSignoutRedirect).toHaveBeenCalled();\n  });\n\n  test('does not call userManager.forceSignoutRedirect() after the seconds set in autoSignOutTimeout ' +\n      'if there are some user interactions happening', () => {\n    const halfTimeoutTime = (autoSignOutTimeout * 1000) / 2;\n    mountComponent();\n    jest.runTimersToTime(halfTimeoutTime);\n    window.document.dispatchEvent(new Event('click'));\n    jest.runTimersToTime(halfTimeoutTime);\n    expect(userManager.forceSignoutRedirect).not.toHaveBeenCalled();\n  });\n\n  test('renders its children', () => {\n    const wrapper = mountComponent();\n    expect(wrapper.find('#inner')).toHaveLength(1);\n  });\n});\n"]}
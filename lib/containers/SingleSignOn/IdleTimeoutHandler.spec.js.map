{"version":3,"sources":["containers/SingleSignOn/IdleTimeoutHandler.spec.jsx"],"names":["jest","mock","userManager","signInRedirectWithValidation","fn","signInRedirect","signOutRedirect","forceSignOutRedirect","createUserManager","mountComponent","beforeEach","resetAllMocks","useFakeTimers","afterEach","clearAllTimers","describe","merge","autoSignOutTimeout","test","require","runAllTimers","expect","not","toHaveBeenCalled","wrapper","find","toHaveLength","halfTimeoutTime","runTimersToTime","window","document","dispatchEvent","Event"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;AAEAA,KAAKC,IAAL,4BAA+B,YAAM;AAAG;AACtC,MAAMC,cAAc;AAClBC,kCAA8BH,KAAKI,EAAL,EADZ;AAElBC,oBAAgBL,KAAKI,EAAL,EAFE;AAGlBE,qBAAiBN,KAAKI,EAAL,EAHC;AAIlBG,0BAAsBP,KAAKI,EAAL;AAJJ,GAApB;AAMA,SAAO;AACLI,uBAAmB;AAAA,aAAMN,WAAN;AAAA;AADd,GAAP;AAGD,CAVD;;AAYA,IAAMO,iBAAiB,SAAjBA,cAAiB;AAAA,SAAM,mBAAM;AAAA;AAAA;AAAoB,2CAAK,IAAG,OAAR;AAApB,GAAN,CAAN;AAAA,CAAvB;;AAEAC,WAAW,YAAM;AACfV,OAAKW,aAAL;AACAX,OAAKY,aAAL;AACD,CAHD;;AAKAC,UAAU,YAAM;AACdb,OAAKc,cAAL;AACD,CAFD;;AAIAC,SAAS,kCAAT,EAA6C,YAAM;AACjDL,aAAW,YAAM;AACf,qBAAOM,KAAP,CAAa,EAAEC,oBAAoB,KAAtB,EAAb;AACD,GAFD;;AAIAC,OAAK,kDAAL,EAAyD,YAAM;AAC7D,QAAMV,oBAAoBW,mCAA6BX,iBAAvD;AACAC;AACAT,SAAKoB,YAAL;AACAC,WAAOb,oBAAoBD,oBAA3B,EAAiDe,GAAjD,CAAqDC,gBAArD;AACD,GALD;;AAOAL,OAAK,sBAAL,EAA6B,YAAM;AACjC,QAAMM,UAAUf,gBAAhB;AACAY,WAAOG,QAAQC,IAAR,CAAa,QAAb,CAAP,EAA+BC,YAA/B,CAA4C,CAA5C;AACD,GAHD;AAID,CAhBD;;AAkBAX,SAAS,qCAAT,EAAgD,YAAM;AACpD,MAAME,qBAAqB,CAA3B;AACAP,aAAW,YAAM;AACf,qBAAOM,KAAP,CAAa,EAAEC,sCAAF,EAAb;AACD,GAFD;;AAIAC,OAAK,sFAAL,EAA6F,YAAM;AACjG,QAAMV,oBAAoBW,mCAA6BX,iBAAvD;AACAC;AACAT,SAAKoB,YAAL;AACAC,WAAOb,oBAAoBD,oBAA3B,EAAiDgB,gBAAjD;AACD,GALD;;AAOAL,OAAK,kGACD,+CADJ,EACqD,YAAM;AACzD,QAAMV,oBAAoBW,mCAA6BX,iBAAvD;AACA,QAAMmB,kBAAmBV,qBAAqB,IAAtB,GAA8B,CAAtD;AACAR;AACAT,SAAK4B,eAAL,CAAqBD,eAArB;AACAE,WAAOC,QAAP,CAAgBC,aAAhB,CAA8B,IAAIC,KAAJ,CAAU,OAAV,CAA9B;AACAhC,SAAK4B,eAAL,CAAqBD,eAArB;AACAN,WAAOb,oBAAoBD,oBAA3B,EAAiDe,GAAjD,CAAqDC,gBAArD;AACD,GATD;;AAWAL,OAAK,sBAAL,EAA6B,YAAM;AACjC,QAAMM,UAAUf,gBAAhB;AACAY,WAAOG,QAAQC,IAAR,CAAa,QAAb,CAAP,EAA+BC,YAA/B,CAA4C,CAA5C;AACD,GAHD;AAID,CA5BD","file":"IdleTimeoutHandler.spec.js","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Config from 'domain/Config';\nimport IdleTimeoutHandler from './IdleTimeoutHandler';\n\njest.mock('data/SingleSignOn', () => {  // eslint-disable-line\n  const userManager = {\n    signInRedirectWithValidation: jest.fn(),\n    signInRedirect: jest.fn(),\n    signOutRedirect: jest.fn(),\n    forceSignOutRedirect: jest.fn(),\n  };\n  return {\n    createUserManager: () => userManager,\n  };\n});\n\nconst mountComponent = () => mount(<IdleTimeoutHandler><div id=\"inner\" /></IdleTimeoutHandler>);\n\nbeforeEach(() => {\n  jest.resetAllMocks();\n  jest.useFakeTimers();\n});\n\nafterEach(() => {\n  jest.clearAllTimers();\n});\n\ndescribe('when autoSignOutTimeout is false', () => {\n  beforeEach(() => {\n    Config.merge({ autoSignOutTimeout: false });\n  });\n\n  test('does not call userManager.forceSignOutRedirect()', () => {\n    const createUserManager = require('data/SingleSignOn').createUserManager;\n    mountComponent();\n    jest.runAllTimers();\n    expect(createUserManager().forceSignOutRedirect).not.toHaveBeenCalled();\n  });\n\n  test('renders its children', () => {\n    const wrapper = mountComponent();\n    expect(wrapper.find('#inner')).toHaveLength(1);\n  });\n});\n\ndescribe('when autoSignOutTimeout is a number', () => {\n  const autoSignOutTimeout = 1;\n  beforeEach(() => {\n    Config.merge({ autoSignOutTimeout });\n  });\n\n  test('calls userManager.forceSignOutRedirect() after the seconds set in autoSignOutTimeout', () => {\n    const createUserManager = require('data/SingleSignOn').createUserManager;\n    mountComponent();\n    jest.runAllTimers();\n    expect(createUserManager().forceSignOutRedirect).toHaveBeenCalled();\n  });\n\n  test('does not call userManager.forceSignOutRedirect() after the seconds set in autoSignOutTimeout ' +\n      'if there are some user interactions happening', () => {\n    const createUserManager = require('data/SingleSignOn').createUserManager;\n    const halfTimeoutTime = (autoSignOutTimeout * 1000) / 2;\n    mountComponent();\n    jest.runTimersToTime(halfTimeoutTime);\n    window.document.dispatchEvent(new Event('click'));\n    jest.runTimersToTime(halfTimeoutTime);\n    expect(createUserManager().forceSignOutRedirect).not.toHaveBeenCalled();\n  });\n\n  test('renders its children', () => {\n    const wrapper = mountComponent();\n    expect(wrapper.find('#inner')).toHaveLength(1);\n  });\n});\n"]}
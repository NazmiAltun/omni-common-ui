{"version":3,"sources":["containers/SingleSignOn/createSignInRedirectMiddleware.js"],"names":["createSignInRedirectMiddleware","store","next","action","type","location","pathname","info","sessionStorage","lastUrlPath","returnUrl","search","signInRedirectWithValidation","dispatch","forceSignOutRedirect"],"mappings":";;;;;QAYgBA,8B,GAAAA,8B;;AAZhB;;;;AACA;;AASA;;;;AAEO,SAASA,8BAAT,GAA0C;AAC/C,SAAO,UAACC,KAAD;AAAA,WAAW,UAACC,IAAD;AAAA,aAAU,UAACC,MAAD,EAAY;AACtC,gBAAQA,OAAOC,IAAf;AACE;AACA;AACA;AACA;AACE,gBAAIC,SAASC,QAAT,KAAsB,WAA1B,EAAuC,MADzC,CACiD;AAC/C,0BAAIC,IAAJ,CAAS,qFAAT;AACA;AACF;AAA+B;AAC7BC,2BAAeC,WAAf,GACIN,OAAOO,SAAP,IAAoBL,SAASC,QAAT,GAAoBD,SAASM,MADrD;AAEA,mDAAoBC,4BAApB;AACA,gBAAIT,OAAOC,IAAP,qCAAJ,EAA6C;AAC3CH,oBAAMY,QAAN,CAAe,EAAET,8BAAF,EAAf;AACD;AACD;AACF;AACEI,2BAAeC,WAAf,GACIN,OAAOO,SAAP,IAAoBL,SAASC,QAAT,GAAoBD,SAASM,MADrD;AAEA,mDAAoBG,oBAApB;AACA;AACF;AAAS;AArBX;AAuBA,eAAOZ,KAAKC,MAAL,CAAP;AACD,OAzBiB;AAAA,KAAX;AAAA,GAAP;AA0BD;;kBAEcH,8B","file":"createSignInRedirectMiddleware.js","sourcesContent":["import log from 'domain/log';\nimport {\n  USER_EXPIRED,\n  USER_NOT_FOUND,\n  LOAD_USER_ERROR,\n  USER_SIGNED_OUT,\n  SESSION_TERMINATED,\n  TRIGGER_SIGNIN_REDIRECT,\n  TRIGGER_SIGNOUT_REDIRECT,\n} from 'data/SingleSignOn/actions';\nimport { createUserManager } from 'data/SingleSignOn';\n\nexport function createSignInRedirectMiddleware() {\n  return (store) => (next) => (action) => {\n    switch (action.type) {\n      case USER_EXPIRED:\n      case USER_NOT_FOUND:\n      case LOAD_USER_ERROR:\n      case SESSION_TERMINATED:\n        if (location.pathname === '/callback') break;  // still processing the callback\n        log.info('createSignInRedirectMiddleware: Caught an invalid user/session action. Redirecting.');\n        // intentionally fall through to the next case!\n      case TRIGGER_SIGNIN_REDIRECT:  // eslint-disable-line\n        sessionStorage.lastUrlPath =\n            action.returnUrl || location.pathname + location.search;\n        createUserManager().signInRedirectWithValidation();\n        if (action.type === TRIGGER_SIGNIN_REDIRECT) {\n          store.dispatch({ type: USER_SIGNED_OUT });\n        }\n        break;\n      case TRIGGER_SIGNOUT_REDIRECT:\n        sessionStorage.lastUrlPath =\n            action.returnUrl || location.pathname + location.search;\n        createUserManager().forceSignOutRedirect();\n        break;\n      default: break;\n    }\n    return next(action);\n  };\n}\n\nexport default createSignInRedirectMiddleware;\n"]}
{"version":3,"sources":["domain/ApiResponse/spec.js"],"names":["describe","it","fetchWasCalled","to","be","false","loading","true","data","error","Error","shouldFetch","isLoading","hasFailed","hasSucceeded"],"mappings":"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","file":"spec.js","sourcesContent":["import { ApiResponse } from './';\nimport { expect } from 'chai';\n\ndescribe('ApiResponse', () => {\n  describe('#fetchWasCalled()', () => {\n    it('returns false for a default ApiResponse', () => {\n      expect(new ApiResponse().fetchWasCalled()).to.be.false;\n    });\n\n    it('returns true for an ApiResponse with loading=true', () => {\n      expect(new ApiResponse({ loading: true }).fetchWasCalled()).to.be.true;\n    });\n\n    it('returns true for an ApiResponse with a data property different from undefined', () => {\n      expect(new ApiResponse({ data: null }).fetchWasCalled()).to.be.true;\n    });\n\n    it('returns true for an ApiResponse with a error being an instance of Error', () => {\n      expect(new ApiResponse({ error: new Error() }).fetchWasCalled()).to.be.true;\n    });\n  });\n\n  describe('#shouldFetch()', () => {\n    it('returns true for a default ApiResponse', () => {\n      expect(new ApiResponse().shouldFetch()).to.be.true;\n    });\n\n    it('returns false for an ApiResponse with loading=true', () => {\n      expect(new ApiResponse({ loading: true }).shouldFetch()).to.be.false;\n    });\n\n    it('returns false for an ApiResponse with a data property different from undefined', () => {\n      expect(new ApiResponse({ data: null }).shouldFetch()).to.be.false;\n    });\n\n    it('returns false for an ApiResponse with a error being an instance of Error', () => {\n      expect(new ApiResponse({ error: new Error() }).shouldFetch()).to.be.false;\n    });\n  });\n\n  describe('#isLoading()', () => {\n    it('returns false if the ApiResponse\\'s loading property is not true', () => {\n      expect(new ApiResponse({ loading: 20 }).isLoading()).to.be.false;\n    });\n\n    it('returns true if the ApiResponse\\'s loading=true', () => {\n      expect(new ApiResponse({ loading: true }).isLoading()).to.be.true;\n    });\n  });\n\n  describe('#hasFailed()', () => {\n    it('returns false if the ApiResponse\\'s error property is not an Error', () => {\n      expect(new ApiResponse({ error: 20 }).hasFailed()).to.be.false;\n    });\n\n    it('returns true if the ApiResponse\\'s error=true', () => {\n      expect(new ApiResponse({ error: new Error() }).hasFailed()).to.be.true;\n    });\n  });\n\n  describe('#hasSucceeded()', () => {\n    it('returns true if the ApiResponse\\'s data property is not undefined', () => {\n      expect(new ApiResponse({ data: null }).hasSucceeded()).to.be.true;\n    });\n  });\n});\n"]}
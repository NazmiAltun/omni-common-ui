{"version":3,"sources":["domain/createBuildRoute/index.js"],"names":["createBuildRoute","ownProps","args","route","getRoute","params","getParams","not","object","empty","resolve","location","pathname","newRoute","routes","forEach","routePiece","string","path","join","finalParams","Object","assign","replace","length","undefined"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAEO,IAAMA,8CAAmB,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAc,YAAa;AAAA,sCAATC,IAAS;AAATA,UAAS;AAAA;;AACzD,QAAMC,QAAQC,SAASF,IAAT,CAAd;AACA,QAAMG,SAASC,UAAUJ,IAAV,CAAf;AACA,QAAI,gBAAGK,GAAH,CAAOC,MAAP,CAAcH,MAAd,KAAyB,gBAAGI,KAAH,CAASJ,MAAT,CAA7B,EAA+C;AAC7C,aAAO,eAAKK,OAAL,CAAaT,SAASU,QAAT,CAAkBC,QAA/B,EAAyCT,KAAzC,CAAP;AACD;;AAED,QAAIU,WAAW,EAAf;AACAZ,aAASa,MAAT,CAAgBC,OAAhB,CAAwB,UAACC,UAAD,EAAgB;AACtC,UAAI,gBAAGT,GAAH,CAAOU,MAAP,CAAcD,WAAWE,IAAzB,CAAJ,EAAoC;AAClC;AACD;;AAEDL,iBAAW,eAAKM,IAAL,CAAUN,QAAV,EAAoBG,WAAWE,IAA/B,CAAX;AACD,KAND;;AAQAL,eAAW,eAAKH,OAAL,CAAaG,QAAb,EAAuBV,KAAvB,CAAX;;AAEA,QAAMiB,cAAcC,OAAOC,MAAP,CAAc,EAAd,EAAkBrB,SAASI,MAA3B,EAAmCA,MAAnC,CAApB;AACAQ,eAAW,gCAAcA,QAAd,EAAwBO,WAAxB,CAAX;;AAEA,WAAOP,SAASU,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAP;AACD,GAtB+B;AAAA,CAAzB;;AAwBP,SAASnB,QAAT,CAAkBF,IAAlB,EAAwB;AACtB,SAAO,gBAAGe,MAAH,CAAUf,KAAK,CAAL,CAAV,IAAqBA,KAAK,CAAL,CAArB,GAA+B,EAAtC;AACD;;AAED,SAASI,SAAT,CAAmBJ,IAAnB,EAAyB;AACvB,MAAIA,KAAKsB,MAAL,KAAgB,CAAhB,IAAqB,gBAAGhB,MAAH,CAAUN,KAAK,CAAL,CAAV,CAAzB,EAA6C;AAC3C,WAAOA,KAAK,CAAL,CAAP;AACD;;AAED,MAAIA,KAAKsB,MAAL,GAAc,CAAlB,EAAqB;AACnB,WAAOtB,KAAK,CAAL,CAAP;AACD;;AAED,SAAOuB,SAAP;AACD;;kBAEczB,gB","file":"index.js","sourcesContent":["import path from 'path';\nimport is from 'is_js';\n\nimport { formatPattern } from 'react-router';\n\nexport const createBuildRoute = (ownProps) => (...args) => {\n  const route = getRoute(args);\n  const params = getParams(args);\n  if (is.not.object(params) || is.empty(params)) {\n    return path.resolve(ownProps.location.pathname, route);\n  }\n\n  let newRoute = '';\n  ownProps.routes.forEach((routePiece) => {\n    if (is.not.string(routePiece.path)) {\n      return;\n    }\n\n    newRoute = path.join(newRoute, routePiece.path);\n  });\n\n  newRoute = path.resolve(newRoute, route);\n\n  const finalParams = Object.assign({}, ownProps.params, params);\n  newRoute = formatPattern(newRoute, finalParams);\n\n  return newRoute.replace(/\\/$/, '');\n};\n\nfunction getRoute(args) {\n  return is.string(args[0]) ? args[0] : '';\n}\n\nfunction getParams(args) {\n  if (args.length === 1 && is.object(args[0])) {\n    return args[0];\n  }\n\n  if (args.length > 1) {\n    return args[1];\n  }\n\n  return undefined;\n}\n\nexport default createBuildRoute;\n"]}
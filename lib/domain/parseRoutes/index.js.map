{"version":3,"sources":["domain/parseRoutes/index.js"],"names":["parseRoutes","routes","store","array","map","route","object","childRoutes","function"],"mappings":";;;;;kBAEwBA,W;;AAFxB;;;;;;AAEe,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;AACjD,MAAI,gBAAGC,KAAH,CAASF,MAAT,CAAJ,EAAsB;AACpB,WAAOA,OAAOG,GAAP,CAAW,UAACC,KAAD;AAAA,aAAWL,YAAYK,KAAZ,EAAmBH,KAAnB,CAAX;AAAA,KAAX,CAAP;AACD;;AAED,MAAI,gBAAGI,MAAH,CAAUL,MAAV,KAAqB,gBAAGE,KAAH,CAASF,OAAOM,WAAhB,CAAzB,EAAuD;AACrD;AACAN,WAAOM,WAAP,GAAqBN,OAAOM,WAAP,CAAmBH,GAAnB,CAAuB,UAACC,KAAD;AAAA,aAAWL,YAAYK,KAAZ,EAAmBH,KAAnB,CAAX;AAAA,KAAvB,CAArB;AACA,WAAOD,MAAP;AACD;;AAED,MAAI,gBAAGO,QAAH,CAAYP,MAAZ,CAAJ,EAAyB;AACvB,WAAOD,YAAYC,OAAOC,KAAP,CAAZ,EAA2BA,KAA3B,CAAP;AACD;;AAED,SAAOD,MAAP;AACD","file":"index.js","sourcesContent":["import is from 'is_js';\n\nexport default function parseRoutes(routes, store) {\n  if (is.array(routes)) {\n    return routes.map((route) => parseRoutes(route, store));\n  }\n\n  if (is.object(routes) && is.array(routes.childRoutes)) {\n    /* eslint no-param-reassign: \"off\" */\n    routes.childRoutes = routes.childRoutes.map((route) => parseRoutes(route, store));\n    return routes;\n  }\n\n  if (is.function(routes)) {\n    return parseRoutes(routes(store), store);\n  }\n\n  return routes;\n}\n"]}
{"version":3,"sources":["domain/createLoggerMiddleware/index.js"],"names":["createLoggerMiddleware","PRODUCTION","next","action","debug","JSON","stringify","e","warn"],"mappings":";;;;;QAGgBA,sB,GAAAA,sB;;AAHhB;;AACA;;;;;;AAEO,SAASA,sBAAT,GAAkC;AACvC,MAAIC,UAAJ,EAAgB;AACd,WAAO;AAAA,aAAM,UAACC,IAAD;AAAA,eAAU,UAACC,MAAD,EAAY;AACjC,cAAI;AACF,0BAAIC,KAAJ,CAAU,oBAAV,EAAgCC,KAAKC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAhC;AACD,WAFD,CAEE,OAAOI,CAAP,EAAU;AACV,0BAAIC,IAAJ,CAAS,uBAAT,EAAkCD,CAAlC;AACD;;AAED,iBAAOL,KAAKC,MAAL,CAAP;AACD,SARY;AAAA,OAAN;AAAA,KAAP;AASD;;AAED,SAAO,gCAAP;AACD;;kBAEcH,sB","file":"index.js","sourcesContent":["import { createLogger } from 'redux-logger';\nimport log from 'domain/log';\n\nexport function createLoggerMiddleware() {\n  if (PRODUCTION) {\n    return () => (next) => (action) => {\n      try {\n        log.debug('Dispatched action:', JSON.stringify(action, null, 2));\n      } catch (e) {\n        log.warn('Could not log action:', e);\n      }\n\n      return next(action);\n    };\n  }\n\n  return createLogger();\n}\n\nexport default createLoggerMiddleware;\n"]}
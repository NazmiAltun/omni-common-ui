{"version":3,"sources":["domain/createSignInRedirectMiddleware/index.js"],"names":["createSignInRedirectMiddleware","triggerSignInRedirectFlow","returnUrl","sessionStorage","lastUrlPath","location","pathname","search","signInRedirectWithValidation","triggerSignOutRedirectFlow","forceSignOutRedirect","store","next","action","Action","isApiAction","isFailure","error","status","type","info","dispatch"],"mappings":";;;;;QA0BgBA,8B,GAAAA,8B;;AA1BhB;;;;AACA;;;;AACA;;AAUA;;;;AAEA,IAAMC,4BAA4B,SAA5BA,yBAA4B,CAACC,SAAD,EAAe;AAC/CC,iBAAeC,WAAf,GACIF,aAAaG,SAASC,QAAT,GAAoBD,SAASE,MAD9C;AAEA,yCAAoBC,4BAApB;AACD,CAJD;;AAMA,IAAMC,6BAA6B,SAA7BA,0BAA6B,CAACP,SAAD,EAAe;AAChDC,iBAAeC,WAAf,GACIF,aAAaG,SAASC,QAAT,GAAoBD,SAASE,MAD9C;AAEA,yCAAoBG,oBAApB;AACD,CAJD;;AAMO,SAASV,8BAAT,GAA0C;AAC/C,SAAO,UAACW,KAAD;AAAA,WAAW,UAACC,IAAD;AAAA,aAAU,UAACC,MAAD,EAAY;AACtC;AACA,YAAI,mBAAQC,MAAR,CAAeC,WAAf,CAA2BF,MAA3B,KACA,mBAAQC,MAAR,CAAeE,SAAf,CAAyBH,MAAzB,CADA,IAEAA,OAAOI,KAAP,CAAaC,MAAb,KAAwB,GAF5B,EAEiC;AAC/BjB,oCAA0BY,OAAOX,SAAjC;;AAEF;AACC,SAND,MAMO;AACL,kBAAQW,OAAOM,IAAf;AACE;AACA;AACA;AACA;AACE,kBAAId,SAASC,QAAT,KAAsB,WAA1B,EAAuC,MADzC,CACiD;AAC/C,4BAAIc,IAAJ,CAAS,qFAAT;AACA;AACF;AAA+B;AAC7BnB,wCAA0BY,OAAOX,SAAjC;AACA;AACA,kBAAIW,OAAOM,IAAP,qCAAJ,EAA6C;AAC3CR,sBAAMU,QAAN,CAAe,EAAEF,iCAAF,EAAf;AACD;AACD;AACF;AACA;AACEV,yCAA2BI,OAAOX,SAAlC;AACA;AACF;AAAS;AAnBX;AAqBD;;AAED,eAAOU,KAAKC,MAAL,CAAP;AACD,OAjCiB;AAAA,KAAX;AAAA,GAAP;AAkCD;;kBAEcb,8B","file":"index.js","sourcesContent":["import log from 'domain/log';\nimport ApiCall from 'containers/ApiCalls';\nimport {\n  LOAD_USER_ERROR,\n  USER_EXPIRED,\n  USER_NOT_FOUND,\n  USER_SIGNED_OUT,\n  SESSION_TERMINATED,\n  TRIGGER_USER_CLEAR,\n  TRIGGER_SIGNIN_REDIRECT,\n  TRIGGER_SIGNOUT_REDIRECT,\n} from 'data/SingleSignOn/actions';\nimport { createUserManager } from 'data/SingleSignOn';\n\nconst triggerSignInRedirectFlow = (returnUrl) => {\n  sessionStorage.lastUrlPath =\n      returnUrl || location.pathname + location.search;\n  createUserManager().signInRedirectWithValidation();\n};\n\nconst triggerSignOutRedirectFlow = (returnUrl) => {\n  sessionStorage.lastUrlPath =\n      returnUrl || location.pathname + location.search;\n  createUserManager().forceSignOutRedirect();\n};\n\nexport function createSignInRedirectMiddleware() {\n  return (store) => (next) => (action) => {\n    // bounce any 401s to the login page\n    if (ApiCall.Action.isApiAction(action) &&\n        ApiCall.Action.isFailure(action) &&\n        action.error.status === 401) {\n      triggerSignInRedirectFlow(action.returnUrl);\n\n    // handle trigger and state change actions\n    } else {\n      switch (action.type) {\n        case LOAD_USER_ERROR:\n        case USER_EXPIRED:\n        case USER_NOT_FOUND:\n        case SESSION_TERMINATED:\n          if (location.pathname === '/callback') break;  // still processing the callback\n          log.info('createSignInRedirectMiddleware: Caught an invalid user/session action. Redirecting.');\n          // intentionally fall through to the next case!\n        case TRIGGER_SIGNIN_REDIRECT:  // eslint-disable-line\n          triggerSignInRedirectFlow(action.returnUrl);\n          // in impersonate mode this prevents an infinite loop\n          if (action.type === TRIGGER_SIGNIN_REDIRECT) {\n            store.dispatch({ type: TRIGGER_USER_CLEAR });\n          }\n          break;\n        case USER_SIGNED_OUT:\n        case TRIGGER_SIGNOUT_REDIRECT:\n          triggerSignOutRedirectFlow(action.returnUrl);\n          break;\n        default: break;\n      }\n    }\n\n    return next(action);\n  };\n}\n\nexport default createSignInRedirectMiddleware;\n"]}
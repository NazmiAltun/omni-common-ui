{"version":3,"sources":["domain/BreadcrumbsBuilder/spec.js"],"names":["describe","props","params","undefined","location","routes","buildRoute","expectedItems","beforeEach","path","context","it","result","buildWithProps","to","be","eql","breadcrumbLabels","label","href","clickable","hidden","backLinkHref","groupId"],"mappings":"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","file":"spec.js","sourcesContent":["import { expect } from 'chai';\nimport BreadcrumbsBuilder from './';\n\n// <Breadcrumbs state params location routes buildRoute>\n\ndescribe('BreadcrumbsBuilder', () => {\n  const props = {\n    params: undefined,\n    location: undefined,\n    routes: undefined,\n    buildRoute: undefined,\n  };\n\n  let expectedItems;\n\n  beforeEach(() => {\n    props.params = {};\n    props.location = {};\n    props.routes = [];\n    props.buildRoute = (path) => `/${path}`;\n    expectedItems = undefined;\n  });\n\n  context('breadcrumb rendering', () => {\n    it('when there are no labelled route segments', () => {\n      props.routes = [{\n        path: '/group/1',\n      }];\n      const result = BreadcrumbsBuilder.buildWithProps(props);\n      expect(result).to.be.eql([]);\n    });\n\n    it('when there is one labelled route segment', () => {\n      props.routes = [{\n        path: 'group/:groupId',\n        breadcrumbLabels: 'Group',\n      }];\n      expectedItems = [{\n        label: 'Group',\n        href: '/group/:groupId',\n        clickable: true,\n        hidden: false,\n        backLinkHref: null,\n      }];\n      const result = BreadcrumbsBuilder.buildWithProps(props);\n      expect(result).to.be.eql(expectedItems);\n    });\n\n    it('with two items when there are two labelled route segments', () => {\n      props.routes = [{\n        path: 'group/:groupId',\n        breadcrumbLabels: 'Group',\n      }, {\n        path: 'dashboard',\n      }, {\n        path: 'members',\n        breadcrumbLabels: 'Members',\n      }];\n      expectedItems = [{\n        label: 'Group',\n        href: '/group/:groupId',\n        clickable: true,\n        hidden: false,\n        backLinkHref: null,\n      }, {\n        label: 'Members',\n        href: '/group/:groupId/dashboard/members',\n        clickable: false,\n        hidden: false,\n        backLinkHref: null,\n      }];\n      const result = BreadcrumbsBuilder.buildWithProps(props);\n      expect(result).to.be.eql(expectedItems);\n    });\n\n    it('with more labels than routes when label value(s) are arrays', () => {\n      props.routes = [{\n        path: 'group/:groupId',\n        breadcrumbLabels: ['Home', 'Group'],\n      }, {\n        path: 'members',\n        breadcrumbLabels: 'Members',\n      }];\n      expectedItems = [{\n        label: 'Home',\n        href: '/group/:groupId',\n        clickable: true,\n        hidden: false,\n        backLinkHref: null,\n      }, {\n        label: 'Group',\n        href: '/group/:groupId',\n        clickable: true,\n        hidden: false,\n        backLinkHref: null,\n      }, {\n        label: 'Members',\n        href: '/group/:groupId/members',\n        clickable: false,\n        hidden: false,\n        backLinkHref: null,\n      }];\n      const result = BreadcrumbsBuilder.buildWithProps(props);\n      expect(result).to.be.eql(expectedItems);\n    });\n\n    it('with labels that are functions', () => {\n      props.params = {\n        groupId: '10',\n      };\n      props.routes = [{\n        path: 'group/:groupId',\n        breadcrumbLabels: ({ params: { groupId } }) => `Group ${groupId}`,\n      }, {\n        path: 'members',\n        breadcrumbLabels: () => 'Members',\n      }];\n      expectedItems = [{\n        label: 'Group 10',\n        href: '/group/:groupId',\n        clickable: true,\n        hidden: false,\n        backLinkHref: null,\n      }, {\n        label: 'Members',\n        href: '/group/:groupId/members',\n        clickable: false,\n        hidden: false,\n        backLinkHref: null,\n      }];\n      const result = BreadcrumbsBuilder.buildWithProps(props);\n      expect(result).to.be.eql(expectedItems);\n    });\n\n    it('with labels of mixed types containing a full object definition', () => {\n      props.params = {\n        groupId: '10',\n      };\n      props.routes = [{\n        path: 'group/:groupId',\n        breadcrumbLabels: 'Group',\n      }, {\n        path: 'members/edit',\n        breadcrumbLabels: () => [{\n          label: 'Members',\n          href: '/group/:groupId/members',\n          clickable: false,\n          hidden: true,\n          backLinkHref: '/',\n        }, 'Edit'],\n      }];\n      expectedItems = [{\n        label: 'Group',\n        href: '/group/:groupId',\n        clickable: true,\n        hidden: false,\n        backLinkHref: null,\n      }, {\n        label: 'Members',\n        href: '/group/:groupId/members',\n        clickable: false,\n        hidden: true,\n        backLinkHref: '/',\n      }, {\n        label: 'Edit',\n        href: '/group/:groupId/members/edit',\n        clickable: false,\n        hidden: false,\n        backLinkHref: null,\n      }];\n      const result = BreadcrumbsBuilder.buildWithProps(props);\n      expect(result).to.be.eql(expectedItems);\n    });\n  });\n});\n"]}
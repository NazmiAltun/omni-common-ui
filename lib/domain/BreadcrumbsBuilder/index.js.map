{"version":3,"sources":["domain/BreadcrumbsBuilder/index.js"],"names":["ACCEPTABLE_LABELS_TYPES","Set","ALWAYS_APPLIED_PARAMS","mode","buildWithProps","props","params","routes","buildRoute","getRouteSegments","filter","route","string","path","buildRouteHref","toRouteIdx","paths","slice","map","join","Object","assign","breadcrumbs","forEach","routeDescriptor","routeIdx","labels","breadcrumbLabels","has","function","err","warn","array","Array","prototype","push","apply","l","labelOrObject","label","href","clickable","boolean","hidden","backLinkHref","length"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,0BAA0B,IAAIC,GAAJ,CAAQ,CAAC,QAAD,EAAW,QAAX,EAAqB,UAArB,CAAR,CAAhC;AACA,IAAMC,wBAAwB,EAAEC,MAAM,EAAR,EAA9B;;kBAEe;AACbC,kBAAgB,wBAACC,KAAD,EAAW;AAAA,QACjBC,MADiB,GACcD,KADd,CACjBC,MADiB;AAAA,QACTC,MADS,GACcF,KADd,CACTE,MADS;AAAA,QACDC,UADC,GACcH,KADd,CACDG,UADC;;;AAGzB,QAAMC,mBAAmB,SAAnBA,gBAAmB;AAAA,aACvBF,OAAOG,MAAP,CAAc,UAACC,KAAD;AAAA,eAAW,gBAAGC,MAAH,CAAUD,MAAME,IAAhB,CAAX;AAAA,OAAd,CADuB;AAAA,KAAzB;;AAGA,QAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACrC,UAAMC,QAAQP,mBACXQ,KADW,CACL,CADK,EACFF,aAAa,CADX,EAEXG,GAFW,CAEP,UAACP,KAAD;AAAA,eAAWA,MAAME,IAAjB;AAAA,OAFO,CAAd;AAGA,UAAMA,OAAOG,MAAMG,IAAN,CAAW,GAAX,CAAb;AACA,aAAOX,WAAWK,IAAX,EACHO,OAAOC,MAAP,CAAc,EAAd,EAAkBf,MAAlB,EAA0BJ,yBAAyB,EAAnD,CADG,CAAP;AAED,KAPD;;AASA,QAAMoB,cAAc,EAApB;;AAEAb,uBAAmBc,OAAnB,CAA2B,UAACC,eAAD,EAAkBC,QAAlB,EAA+B;AACxD,UAAIC,SAASF,gBAAgBG,gBAA7B;AACA,UAAI,CAAE3B,wBAAwB4B,GAAxB,QAAmCF,MAAnC,yCAAmCA,MAAnC,EAAN,EAAkD;AAClD,UAAI,gBAAGG,QAAH,CAAYH,MAAZ,CAAJ,EAAyB;AACvB,YAAI;AACFA,mBAASA,OAAOrB,KAAP,CAAT;AACD,SAFD,CAEE,OAAOyB,GAAP,EAAY;AACZ,wBAAIC,IAAJ,4CAAqDP,gBAAgBX,IAArE,QAA+EiB,GAA/E;AACD;AACF;AACDJ,eAAS,gBAAGM,KAAH,CAASN,MAAT,IAAmBA,MAAnB,GAA4B,CAACA,MAAD,CAArC;AACAO,YAAMC,SAAN,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2Bd,WAA3B,EACEI,OAAOhB,MAAP,CAAc,UAAC2B,CAAD;AAAA,eAAOA,CAAP;AAAA,OAAd,EAAwBnB,GAAxB,CAA4B,UAACoB,aAAD;AAAA,eAAoB;AAC9CC,iBAAOD,cAAcC,KAAd,IAAuBD,aADgB;AAE9CE,gBAAMF,cAAcE,IAAd,IAAsB1B,eAAeW,QAAf,CAFkB;AAG9CgB,qBAAW,gBAAGC,OAAH,CAAWJ,cAAcG,SAAzB,IAAsCH,cAAcG,SAApD,GAAgE,IAH7B;AAI9CE,kBAAQ,gBAAGD,OAAH,CAAWJ,cAAcK,MAAzB,IAAmCL,cAAcK,MAAjD,GAA0D,KAJpB;AAK9CC,wBAAc,gBAAGhC,MAAH,CAAU0B,cAAcM,YAAxB,IAAwCN,cAAcM,YAAtD,GAAqE;AALrC,SAApB;AAAA,OAA5B,CADF;AAQD,KAnBD;;AAqBA;AACA,QAAItB,YAAYuB,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BvB,kBAAYA,YAAYuB,MAAZ,GAAqB,CAAjC,EAAoCJ,SAApC,GAAgD,KAAhD;AACD;;AAED,WAAOnB,WAAP;AACD;AA7CY,C","file":"index.js","sourcesContent":["import log from 'domain/log';\nimport is from 'is_js';\n\nconst ACCEPTABLE_LABELS_TYPES = new Set(['string', 'object', 'function']);\nconst ALWAYS_APPLIED_PARAMS = { mode: '' };\n\nexport default {\n  buildWithProps: (props) => {\n    const { params, routes, buildRoute } = props;\n\n    const getRouteSegments = () =>\n      routes.filter((route) => is.string(route.path));\n\n    const buildRouteHref = (toRouteIdx) => {\n      const paths = getRouteSegments()\n        .slice(0, toRouteIdx + 1)\n        .map((route) => route.path);\n      const path = paths.join('/');\n      return buildRoute(path,\n          Object.assign({}, params, ALWAYS_APPLIED_PARAMS || {}));\n    };\n\n    const breadcrumbs = [];\n\n    getRouteSegments().forEach((routeDescriptor, routeIdx) => {\n      let labels = routeDescriptor.breadcrumbLabels;\n      if (! ACCEPTABLE_LABELS_TYPES.has(typeof labels)) return;\n      if (is.function(labels)) {\n        try {\n          labels = labels(props);\n        } catch (err) {\n          log.warn(`Error in \\`breadcrumbLabels\\` in route \\`${routeDescriptor.path}\\``, err);\n        }\n      }\n      labels = is.array(labels) ? labels : [labels];\n      Array.prototype.push.apply(breadcrumbs,\n        labels.filter((l) => l).map((labelOrObject) => ({\n          label: labelOrObject.label || labelOrObject,\n          href: labelOrObject.href || buildRouteHref(routeIdx),\n          clickable: is.boolean(labelOrObject.clickable) ? labelOrObject.clickable : true,\n          hidden: is.boolean(labelOrObject.hidden) ? labelOrObject.hidden : false,\n          backLinkHref: is.string(labelOrObject.backLinkHref) ? labelOrObject.backLinkHref : null,\n        })));\n    });\n\n    // the last one shouldn't be clickable\n    if (breadcrumbs.length > 1) {\n      breadcrumbs[breadcrumbs.length - 1].clickable = false;\n    }\n\n    return breadcrumbs;\n  },\n};\n"]}
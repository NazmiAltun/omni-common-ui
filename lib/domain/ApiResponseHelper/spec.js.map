{"version":3,"sources":["domain/ApiResponseHelper/spec.js"],"names":["describe","it","fetchWasCalled","undefined","to","equal","a","result","data","error","loading","be","false","true","Error","shouldFetch","isLoading","hasFailed","hasSucceeded","mock","create","an","instanceof","null","context","message","object","someKey","responsify"],"mappings":"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","file":"spec.js","sourcesContent":["import { ApiResponse } from 'domain/ApiResponse';\nimport { ApiResponseHelper } from './';\nimport { expect } from 'chai';\n\ndescribe('ApiResponseHelper', () => {\n  describe('#fetchWasCalled()', () => {\n    it('returns false for any value that is not an object', () => {\n      expect(ApiResponseHelper.fetchWasCalled(undefined)).to.equal(false, 'undefined');\n      expect(ApiResponseHelper.fetchWasCalled(null)).to.equal(false, 'null');\n      expect(ApiResponseHelper.fetchWasCalled(1)).to.equal(false, 'number');\n      expect(ApiResponseHelper.fetchWasCalled('test')).to.equal(false, 'string');\n      expect(ApiResponseHelper.fetchWasCalled(() => {})).to.equal(false, 'function');\n      expect(ApiResponseHelper.fetchWasCalled([])).to.equal(false, 'array');\n    });\n\n    it('returns false for any object that is not an ApiResponse', () => {\n      expect(ApiResponseHelper.fetchWasCalled({})).to.equal(false, 'empty object');\n      expect(ApiResponseHelper.fetchWasCalled({ a: 'a' })).to.equal(false, 'other objects');\n    });\n\n    it('returns false for an object similar to ApiResponse', () => {\n      const result = ApiResponseHelper.fetchWasCalled({ data: null, error: null, loading: null });\n      expect(result).to.be.false;\n    });\n\n    it('returns false for a default ApiResponse', () => {\n      expect(ApiResponseHelper.fetchWasCalled(new ApiResponse())).to.be.false;\n    });\n\n    it('returns true for an ApiResponse with loading=true', () => {\n      expect(ApiResponseHelper.fetchWasCalled(new ApiResponse({ loading: true }))).to.be.true;\n    });\n\n    it('returns true for an ApiResponse with a data property different from undefined', () => {\n      expect(ApiResponseHelper.fetchWasCalled(new ApiResponse({ data: null }))).to.be.true;\n    });\n\n    it('returns true for an ApiResponse with a error being an instance of Error', () => {\n      expect(ApiResponseHelper.fetchWasCalled(new ApiResponse({ error: new Error() }))).to.be.true;\n    });\n  });\n\n  describe('#shouldFetch()', () => {\n    it('returns true for any value that is not an object', () => {\n      expect(ApiResponseHelper.shouldFetch(undefined)).to.equal(true, 'undefined');\n      expect(ApiResponseHelper.shouldFetch(null)).to.equal(true, 'null');\n      expect(ApiResponseHelper.shouldFetch(1)).to.equal(true, 'number');\n      expect(ApiResponseHelper.shouldFetch('test')).to.equal(true, 'string');\n      expect(ApiResponseHelper.shouldFetch(() => {})).to.equal(true, 'function');\n      expect(ApiResponseHelper.shouldFetch([])).to.equal(true, 'array');\n    });\n\n    it('returns true for any object that is not an ApiResponse', () => {\n      expect(ApiResponseHelper.shouldFetch({})).to.equal(true, 'empty object');\n      expect(ApiResponseHelper.shouldFetch({ a: 'a' })).to.equal(true, 'other objects');\n    });\n\n    it('returns true for an object similar to ApiResponse', () => {\n      const result = ApiResponseHelper.shouldFetch({ data: null, error: null, loading: null });\n      expect(result).to.be.true;\n    });\n\n    it('returns true for a default ApiResponse', () => {\n      expect(ApiResponseHelper.shouldFetch(new ApiResponse())).to.be.true;\n    });\n\n    it('returns false for an ApiResponse with loading=true', () => {\n      expect(ApiResponseHelper.shouldFetch(new ApiResponse({ loading: true }))).to.be.false;\n    });\n\n    it('returns false for an ApiResponse with a data property different from undefined', () => {\n      expect(ApiResponseHelper.shouldFetch(new ApiResponse({ data: null }))).to.be.false;\n    });\n\n    it('returns false for an ApiResponse with a error being an instance of Error', () => {\n      expect(ApiResponseHelper.shouldFetch(new ApiResponse({ error: new Error() }))).to.be.false;\n    });\n  });\n\n  describe('#isLoading()', () => {\n    it('returns false if apiResponse is not an ApiResponse', () => {\n      expect(ApiResponseHelper.isLoading(undefined)).to.equal(false, 'undefined');\n      expect(ApiResponseHelper.isLoading({ loading: true })).to.equal(false, 'object');\n    });\n\n    it('returns false if the ApiResponse\\'s loading property is not true', () => {\n      expect(ApiResponseHelper.isLoading(new ApiResponse({ loading: 20 }))).to.be.false;\n    });\n\n    it('returns true if the ApiResponse\\'s loading=true', () => {\n      expect(ApiResponseHelper.isLoading(new ApiResponse({ loading: true }))).to.be.true;\n    });\n  });\n\n  describe('#hasFailed()', () => {\n    it('returns false if apiResponse is not an ApiResponse', () => {\n      expect(ApiResponseHelper.hasFailed(undefined)).to.equal(false, 'undefined');\n      expect(ApiResponseHelper.hasFailed({ loading: true })).to.equal(false, 'object');\n    });\n\n    it('returns false if the ApiResponse\\'s error property is not an Error', () => {\n      expect(ApiResponseHelper.hasFailed(new ApiResponse({ error: 20 }))).to.be.false;\n    });\n\n    it('returns true if the ApiResponse\\'s error=true', () => {\n      expect(ApiResponseHelper.hasFailed(new ApiResponse({ error: new Error() }))).to.be.true;\n    });\n  });\n\n  describe('#hasSucceeded()', () => {\n    it('returns false if apiResponse is not an ApiResponse', () => {\n      expect(ApiResponseHelper.hasSucceeded(undefined)).to.equal(false, 'undefined');\n      expect(ApiResponseHelper.hasSucceeded({ loading: true })).to.equal(false, 'object');\n    });\n\n    it('returns true if the ApiResponse\\'s data property is not undefined', () => {\n      expect(ApiResponseHelper.hasSucceeded(new ApiResponse({ data: null }))).to.be.true;\n    });\n  });\n\n  describe('#create', () => {\n    it('returns the same ApiResponse if one is received', () => {\n      const mock = new ApiResponse();\n      expect(ApiResponseHelper.create(mock)).to.equal(mock);\n    });\n\n    it('returns an errored ApiResponse if passed an instance of Error', () => {\n      const error = new Error();\n      expect(ApiResponseHelper.create(error).error).to.equal(error);\n    });\n\n    it('returns an ApiResponse if passed undefined', () => {\n      expect(ApiResponseHelper.create()).to.be.an.instanceof(ApiResponse);\n    });\n\n    it('returns a succeeded ApiResponse if any other value', () => {\n      expect(ApiResponseHelper.create(null).data).to.be.null;\n    });\n\n    context('when received an object with just one key', () => {\n      context('when the key is loading', () => {\n        it('returns an ApiResponse with the value of loading', () => {\n          expect(ApiResponseHelper.create({ loading: true }).loading).to.be.true;\n          expect(ApiResponseHelper.create({ loading: false }).loading).to.be.false;\n        });\n\n        it('keeps as false any value other than true', () => {\n          expect(ApiResponseHelper.create({ loading: 'hi!' }).loading).to.be.false;\n        });\n\n        it('returns a default ApiResponse if loading set to undefined', () => {\n          const result = ApiResponseHelper.create({ loading: undefined });\n          expect(result.loading).to.be.false;\n          expect(result.error).to.be.undefined;\n          expect(result.data).to.be.undefined;\n        });\n      });\n\n      context('when the key is error', () => {\n        it('returns an errored ApiResponse with the passed error' +\n            ' if it is an instance of Error', () => {\n          const error = new Error();\n          expect(ApiResponseHelper.create({ error }).error).to.equal(error);\n        });\n\n        it('wraps the error in an Error instance if it is not already', () => {\n          const { error } = ApiResponseHelper.create({ error: 'hi!' });\n          expect(error).to.be.an.instanceof(Error);\n          expect(error.message).to.equal('hi!');\n        });\n\n        it('returns a default ApiResponse if error set to undefined', () => {\n          const result = ApiResponseHelper.create({ error: undefined });\n          expect(result.loading).to.be.false;\n          expect(result.error).to.be.undefined;\n          expect(result.data).to.be.undefined;\n        });\n      });\n\n      context('when the key is data', () => {\n        it('returns an ApiResponse with the provided data', () => {\n          expect(ApiResponseHelper.create({ data: 'hi!' }).data).to.equal('hi!');\n        });\n\n        it('returns a default ApiResponse if data set to undefined', () => {\n          const result = ApiResponseHelper.create({ data: undefined });\n          expect(result.loading).to.be.false;\n          expect(result.error).to.be.undefined;\n          expect(result.data).to.be.undefined;\n        });\n      });\n\n      context('when the key is any other', () => {\n        it('returns an ApiResponse with the provided object', () => {\n          const object = { someKey: 'hi!' };\n          expect(ApiResponseHelper.create(object).data).to.equal(object);\n        });\n      });\n    });\n  });\n\n  describe('#responsify', () => {\n    it('is the same as #create()', () => {\n      expect(ApiResponseHelper.responsify).to.equal(ApiResponseHelper.create);\n    });\n  });\n});\n"]}
{"version":3,"sources":["domain/ApiResponseHelper/spec.js"],"names":["describe","test","expect","fetchWasCalled","undefined","toBe","a","result","data","error","loading","Error","shouldFetch","isLoading","hasFailed","hasSucceeded","mock","create","toBeInstanceOf","toBeNull","toBeUndefined","message","object","someKey","responsify"],"mappings":";;AAAA;;AACA;;AAEAA,SAAS,mBAAT,EAA8B,YAAM;AAClCC,OAAK,mDAAL,EAA0D,YAAM;AAC9DC,WAAO,oBAAkBC,cAAlB,CAAiCC,SAAjC,CAAP,EAAoDC,IAApD,CAAyD,KAAzD;AACAH,WAAO,oBAAkBC,cAAlB,CAAiC,IAAjC,CAAP,EAA+CE,IAA/C,CAAoD,KAApD;AACAH,WAAO,oBAAkBC,cAAlB,CAAiC,CAAjC,CAAP,EAA4CE,IAA5C,CAAiD,KAAjD;AACAH,WAAO,oBAAkBC,cAAlB,CAAiC,MAAjC,CAAP,EAAiDE,IAAjD,CAAsD,KAAtD;AACAH,WAAO,oBAAkBC,cAAlB,CAAiC,YAAM,CAAE,CAAzC,CAAP,EAAmDE,IAAnD,CAAwD,KAAxD;AACAH,WAAO,oBAAkBC,cAAlB,CAAiC,EAAjC,CAAP,EAA6CE,IAA7C,CAAkD,KAAlD;AACD,GAPD;;AASAJ,OAAK,yDAAL,EAAgE,YAAM;AACpEC,WAAO,oBAAkBC,cAAlB,CAAiC,EAAjC,CAAP,EAA6CE,IAA7C,CAAkD,KAAlD;AACAH,WAAO,oBAAkBC,cAAlB,CAAiC,EAAEG,GAAG,GAAL,EAAjC,CAAP,EAAqDD,IAArD,CAA0D,KAA1D;AACD,GAHD;;AAKAJ,OAAK,oDAAL,EAA2D,YAAM;AAC/D,QAAMM,SAAS,oBAAkBJ,cAAlB,CAAiC,EAAEK,MAAM,IAAR,EAAcC,OAAO,IAArB,EAA2BC,SAAS,IAApC,EAAjC,CAAf;AACAR,WAAOK,MAAP,EAAeF,IAAf,CAAoB,KAApB;AACD,GAHD;;AAKAJ,OAAK,yCAAL,EAAgD,YAAM;AACpDC,WAAO,oBAAkBC,cAAlB,CAAiC,8BAAjC,CAAP,EAA4DE,IAA5D,CAAiE,KAAjE;AACD,GAFD;;AAIAJ,OAAK,mDAAL,EAA0D,YAAM;AAC9DC,WAAO,oBAAkBC,cAAlB,CAAiC,6BAAgB,EAAEO,SAAS,IAAX,EAAhB,CAAjC,CAAP,EAA6EL,IAA7E,CAAkF,IAAlF;AACD,GAFD;;AAIAJ,OAAK,+EAAL,EAAsF,YAAM;AAC1FC,WAAO,oBAAkBC,cAAlB,CAAiC,6BAAgB,EAAEK,MAAM,IAAR,EAAhB,CAAjC,CAAP,EAA0EH,IAA1E,CAA+E,IAA/E;AACD,GAFD;;AAIAJ,OAAK,yEAAL,EAAgF,YAAM;AACpFC,WAAO,oBAAkBC,cAAlB,CAAiC,6BAAgB,EAAEM,OAAO,IAAIE,KAAJ,EAAT,EAAhB,CAAjC,CAAP,EAAkFN,IAAlF,CAAuF,IAAvF;AACD,GAFD;AAGD,CAnCD;;AAqCAL,SAAS,gBAAT,EAA2B,YAAM;AAC/BC,OAAK,kDAAL,EAAyD,YAAM;AAC7DC,WAAO,oBAAkBU,WAAlB,CAA8BR,SAA9B,CAAP,EAAiDC,IAAjD,CAAsD,IAAtD;AACAH,WAAO,oBAAkBU,WAAlB,CAA8B,IAA9B,CAAP,EAA4CP,IAA5C,CAAiD,IAAjD;AACAH,WAAO,oBAAkBU,WAAlB,CAA8B,CAA9B,CAAP,EAAyCP,IAAzC,CAA8C,IAA9C;AACAH,WAAO,oBAAkBU,WAAlB,CAA8B,MAA9B,CAAP,EAA8CP,IAA9C,CAAmD,IAAnD;AACAH,WAAO,oBAAkBU,WAAlB,CAA8B,YAAM,CAAE,CAAtC,CAAP,EAAgDP,IAAhD,CAAqD,IAArD;AACAH,WAAO,oBAAkBU,WAAlB,CAA8B,EAA9B,CAAP,EAA0CP,IAA1C,CAA+C,IAA/C;AACD,GAPD;;AASAJ,OAAK,wDAAL,EAA+D,YAAM;AACnEC,WAAO,oBAAkBU,WAAlB,CAA8B,EAA9B,CAAP,EAA0CP,IAA1C,CAA+C,IAA/C;AACAH,WAAO,oBAAkBU,WAAlB,CAA8B,EAAEN,GAAG,GAAL,EAA9B,CAAP,EAAkDD,IAAlD,CAAuD,IAAvD;AACD,GAHD;;AAKAJ,OAAK,mDAAL,EAA0D,YAAM;AAC9D,QAAMM,SAAS,oBAAkBK,WAAlB,CAA8B,EAAEJ,MAAM,IAAR,EAAcC,OAAO,IAArB,EAA2BC,SAAS,IAApC,EAA9B,CAAf;AACAR,WAAOK,MAAP,EAAeF,IAAf,CAAoB,IAApB;AACD,GAHD;;AAKAJ,OAAK,wCAAL,EAA+C,YAAM;AACnDC,WAAO,oBAAkBU,WAAlB,CAA8B,8BAA9B,CAAP,EAAyDP,IAAzD,CAA8D,IAA9D;AACD,GAFD;;AAIAJ,OAAK,oDAAL,EAA2D,YAAM;AAC/DC,WAAO,oBAAkBU,WAAlB,CAA8B,6BAAgB,EAAEF,SAAS,IAAX,EAAhB,CAA9B,CAAP,EAA0EL,IAA1E,CAA+E,KAA/E;AACD,GAFD;;AAIAJ,OAAK,gFAAL,EAAuF,YAAM;AAC3FC,WAAO,oBAAkBU,WAAlB,CAA8B,6BAAgB,EAAEJ,MAAM,IAAR,EAAhB,CAA9B,CAAP,EAAuEH,IAAvE,CAA4E,KAA5E;AACD,GAFD;;AAIAJ,OAAK,0EAAL,EAAiF,YAAM;AACrFC,WAAO,oBAAkBU,WAAlB,CAA8B,6BAAgB,EAAEH,OAAO,IAAIE,KAAJ,EAAT,EAAhB,CAA9B,CAAP,EAA+EN,IAA/E,CAAoF,KAApF;AACD,GAFD;AAGD,CAnCD;;AAqCAL,SAAS,cAAT,EAAyB,YAAM;AAC7BC,OAAK,oDAAL,EAA2D,YAAM;AAC/DC,WAAO,oBAAkBW,SAAlB,CAA4BT,SAA5B,CAAP,EAA+CC,IAA/C,CAAoD,KAApD;AACAH,WAAO,oBAAkBW,SAAlB,CAA4B,EAAEH,SAAS,IAAX,EAA5B,CAAP,EAAuDL,IAAvD,CAA4D,KAA5D;AACD,GAHD;;AAKAJ,OAAK,kEAAL,EAAyE,YAAM;AAC7EC,WAAO,oBAAkBW,SAAlB,CAA4B,6BAAgB,EAAEH,SAAS,EAAX,EAAhB,CAA5B,CAAP,EAAsEL,IAAtE,CAA2E,KAA3E;AACD,GAFD;;AAIAJ,OAAK,iDAAL,EAAwD,YAAM;AAC5DC,WAAO,oBAAkBW,SAAlB,CAA4B,6BAAgB,EAAEH,SAAS,IAAX,EAAhB,CAA5B,CAAP,EAAwEL,IAAxE,CAA6E,IAA7E;AACD,GAFD;AAGD,CAbD;;AAeAL,SAAS,cAAT,EAAyB,YAAM;AAC7BC,OAAK,oDAAL,EAA2D,YAAM;AAC/DC,WAAO,oBAAkBY,SAAlB,CAA4BV,SAA5B,CAAP,EAA+CC,IAA/C,CAAoD,KAApD;AACAH,WAAO,oBAAkBY,SAAlB,CAA4B,EAAEJ,SAAS,IAAX,EAA5B,CAAP,EAAuDL,IAAvD,CAA4D,KAA5D;AACD,GAHD;;AAKAJ,OAAK,oEAAL,EAA2E,YAAM;AAC/EC,WAAO,oBAAkBY,SAAlB,CAA4B,6BAAgB,EAAEL,OAAO,EAAT,EAAhB,CAA5B,CAAP,EAAoEJ,IAApE,CAAyE,KAAzE;AACD,GAFD;;AAIAJ,OAAK,+CAAL,EAAsD,YAAM;AAC1DC,WAAO,oBAAkBY,SAAlB,CAA4B,6BAAgB,EAAEL,OAAO,IAAIE,KAAJ,EAAT,EAAhB,CAA5B,CAAP,EAA6EN,IAA7E,CAAkF,IAAlF;AACD,GAFD;AAGD,CAbD;;AAeAL,SAAS,iBAAT,EAA4B,YAAM;AAChCC,OAAK,oDAAL,EAA2D,YAAM;AAC/DC,WAAO,oBAAkBa,YAAlB,CAA+BX,SAA/B,CAAP,EAAkDC,IAAlD,CAAuD,KAAvD;AACAH,WAAO,oBAAkBa,YAAlB,CAA+B,EAAEL,SAAS,IAAX,EAA/B,CAAP,EAA0DL,IAA1D,CAA+D,KAA/D;AACD,GAHD;;AAKAJ,OAAK,mEAAL,EAA0E,YAAM;AAC9EC,WAAO,oBAAkBa,YAAlB,CAA+B,6BAAgB,EAAEP,MAAM,IAAR,EAAhB,CAA/B,CAAP,EAAwEH,IAAxE,CAA6E,IAA7E;AACD,GAFD;AAGD,CATD;;AAWAL,SAAS,SAAT,EAAoB,YAAM;AACxBC,OAAK,iDAAL,EAAwD,YAAM;AAC5D,QAAMe,OAAO,8BAAb;AACAd,WAAO,oBAAkBe,MAAlB,CAAyBD,IAAzB,CAAP,EAAuCX,IAAvC,CAA4CW,IAA5C;AACD,GAHD;;AAKAf,OAAK,+DAAL,EAAsE,YAAM;AAC1E,QAAMQ,QAAQ,IAAIE,KAAJ,EAAd;AACAT,WAAO,oBAAkBe,MAAlB,CAAyBR,KAAzB,EAAgCA,KAAvC,EAA8CJ,IAA9C,CAAmDI,KAAnD;AACD,GAHD;;AAKAR,OAAK,4CAAL,EAAmD,YAAM;AACvDC,WAAO,oBAAkBe,MAAlB,EAAP,EAAmCC,cAAnC;AACD,GAFD;;AAIAjB,OAAK,oDAAL,EAA2D,YAAM;AAC/DC,WAAO,oBAAkBe,MAAlB,CAAyB,IAAzB,EAA+BT,IAAtC,EAA4CW,QAA5C;AACD,GAFD;;AAIAnB,WAAS,2CAAT,EAAsD,YAAM;AAC1DA,aAAS,yBAAT,EAAoC,YAAM;AACxCC,WAAK,kDAAL,EAAyD,YAAM;AAC7DC,eAAO,oBAAkBe,MAAlB,CAAyB,EAAEP,SAAS,IAAX,EAAzB,EAA4CA,OAAnD,EAA4DL,IAA5D,CAAiE,IAAjE;AACAH,eAAO,oBAAkBe,MAAlB,CAAyB,EAAEP,SAAS,KAAX,EAAzB,EAA6CA,OAApD,EAA6DL,IAA7D,CAAkE,KAAlE;AACD,OAHD;;AAKAJ,WAAK,0CAAL,EAAiD,YAAM;AACrDC,eAAO,oBAAkBe,MAAlB,CAAyB,EAAEP,SAAS,KAAX,EAAzB,EAA6CA,OAApD,EAA6DL,IAA7D,CAAkE,KAAlE;AACD,OAFD;;AAIAJ,WAAK,2DAAL,EAAkE,YAAM;AACtE,YAAMM,SAAS,oBAAkBU,MAAlB,CAAyB,EAAEP,SAASN,SAAX,EAAzB,CAAf;AACAF,eAAOK,OAAOG,OAAd,EAAuBL,IAAvB,CAA4B,KAA5B;AACAH,eAAOK,OAAOE,KAAd,EAAqBW,aAArB;AACAlB,eAAOK,OAAOC,IAAd,EAAoBY,aAApB;AACD,OALD;AAMD,KAhBD;;AAkBApB,aAAS,uBAAT,EAAkC,YAAM;AACtCC,WAAK,yDACD,gCADJ,EACsC,YAAM;AAC1C,YAAMQ,QAAQ,IAAIE,KAAJ,EAAd;AACAT,eAAO,oBAAkBe,MAAlB,CAAyB,EAAER,YAAF,EAAzB,EAAoCA,KAA3C,EAAkDJ,IAAlD,CAAuDI,KAAvD;AACD,OAJD;;AAMAR,WAAK,2DAAL,EAAkE,YAAM;AAAA,oCACpD,oBAAkBgB,MAAlB,CAAyB,EAAER,OAAO,KAAT,EAAzB,CADoD;AAAA,YAC9DA,KAD8D,yBAC9DA,KAD8D;;AAEtEP,eAAOO,KAAP,EAAcS,cAAd,CAA6BP,KAA7B;AACAT,eAAOO,MAAMY,OAAb,EAAsBhB,IAAtB,CAA2B,KAA3B;AACD,OAJD;;AAMAJ,WAAK,yDAAL,EAAgE,YAAM;AACpE,YAAMM,SAAS,oBAAkBU,MAAlB,CAAyB,EAAER,OAAOL,SAAT,EAAzB,CAAf;AACAF,eAAOK,OAAOG,OAAd,EAAuBL,IAAvB,CAA4B,KAA5B;AACAH,eAAOK,OAAOE,KAAd,EAAqBW,aAArB;AACAlB,eAAOK,OAAOC,IAAd,EAAoBY,aAApB;AACD,OALD;AAMD,KAnBD;;AAqBApB,aAAS,sBAAT,EAAiC,YAAM;AACrCC,WAAK,+CAAL,EAAsD,YAAM;AAC1DC,eAAO,oBAAkBe,MAAlB,CAAyB,EAAET,MAAM,KAAR,EAAzB,EAA0CA,IAAjD,EAAuDH,IAAvD,CAA4D,KAA5D;AACD,OAFD;;AAIAJ,WAAK,wDAAL,EAA+D,YAAM;AACnE,YAAMM,SAAS,oBAAkBU,MAAlB,CAAyB,EAAET,MAAMJ,SAAR,EAAzB,CAAf;AACAF,eAAOK,OAAOG,OAAd,EAAuBL,IAAvB,CAA4B,KAA5B;AACAH,eAAOK,OAAOE,KAAd,EAAqBW,aAArB;AACAlB,eAAOK,OAAOC,IAAd,EAAoBY,aAApB;AACD,OALD;AAMD,KAXD;;AAaApB,aAAS,2BAAT,EAAsC,YAAM;AAC1CC,WAAK,iDAAL,EAAwD,YAAM;AAC5D,YAAMqB,SAAS,EAAEC,SAAS,KAAX,EAAf;AACArB,eAAO,oBAAkBe,MAAlB,CAAyBK,MAAzB,EAAiCd,IAAxC,EAA8CH,IAA9C,CAAmDiB,MAAnD;AACD,OAHD;AAID,KALD;AAMD,GA3DD;AA4DD,CA/ED;;AAiFAtB,SAAS,aAAT,EAAwB,YAAM;AAC5BC,OAAK,0BAAL,EAAiC,YAAM;AACrCC,WAAO,oBAAkBsB,UAAzB,EAAqCnB,IAArC,CAA0C,oBAAkBY,MAA5D;AACD,GAFD;AAGD,CAJD","file":"spec.js","sourcesContent":["import { ApiResponse } from 'domain/ApiResponse';\nimport { ApiResponseHelper } from './';\n\ndescribe('#fetchWasCalled()', () => {\n  test('returns false for any value that is not an object', () => {\n    expect(ApiResponseHelper.fetchWasCalled(undefined)).toBe(false);\n    expect(ApiResponseHelper.fetchWasCalled(null)).toBe(false);\n    expect(ApiResponseHelper.fetchWasCalled(1)).toBe(false);\n    expect(ApiResponseHelper.fetchWasCalled('test')).toBe(false);\n    expect(ApiResponseHelper.fetchWasCalled(() => {})).toBe(false);\n    expect(ApiResponseHelper.fetchWasCalled([])).toBe(false);\n  });\n\n  test('returns false for any object that is not an ApiResponse', () => {\n    expect(ApiResponseHelper.fetchWasCalled({})).toBe(false);\n    expect(ApiResponseHelper.fetchWasCalled({ a: 'a' })).toBe(false);\n  });\n\n  test('returns false for an object similar to ApiResponse', () => {\n    const result = ApiResponseHelper.fetchWasCalled({ data: null, error: null, loading: null });\n    expect(result).toBe(false);\n  });\n\n  test('returns false for a default ApiResponse', () => {\n    expect(ApiResponseHelper.fetchWasCalled(new ApiResponse())).toBe(false);\n  });\n\n  test('returns true for an ApiResponse with loading=true', () => {\n    expect(ApiResponseHelper.fetchWasCalled(new ApiResponse({ loading: true }))).toBe(true);\n  });\n\n  test('returns true for an ApiResponse with a data property different from undefined', () => {\n    expect(ApiResponseHelper.fetchWasCalled(new ApiResponse({ data: null }))).toBe(true);\n  });\n\n  test('returns true for an ApiResponse with a error being an instance of Error', () => {\n    expect(ApiResponseHelper.fetchWasCalled(new ApiResponse({ error: new Error() }))).toBe(true);\n  });\n});\n\ndescribe('#shouldFetch()', () => {\n  test('returns true for any value that is not an object', () => {\n    expect(ApiResponseHelper.shouldFetch(undefined)).toBe(true);\n    expect(ApiResponseHelper.shouldFetch(null)).toBe(true);\n    expect(ApiResponseHelper.shouldFetch(1)).toBe(true);\n    expect(ApiResponseHelper.shouldFetch('test')).toBe(true);\n    expect(ApiResponseHelper.shouldFetch(() => {})).toBe(true);\n    expect(ApiResponseHelper.shouldFetch([])).toBe(true);\n  });\n\n  test('returns true for any object that is not an ApiResponse', () => {\n    expect(ApiResponseHelper.shouldFetch({})).toBe(true);\n    expect(ApiResponseHelper.shouldFetch({ a: 'a' })).toBe(true);\n  });\n\n  test('returns true for an object similar to ApiResponse', () => {\n    const result = ApiResponseHelper.shouldFetch({ data: null, error: null, loading: null });\n    expect(result).toBe(true);\n  });\n\n  test('returns true for a default ApiResponse', () => {\n    expect(ApiResponseHelper.shouldFetch(new ApiResponse())).toBe(true);\n  });\n\n  test('returns false for an ApiResponse with loading=true', () => {\n    expect(ApiResponseHelper.shouldFetch(new ApiResponse({ loading: true }))).toBe(false);\n  });\n\n  test('returns false for an ApiResponse with a data property different from undefined', () => {\n    expect(ApiResponseHelper.shouldFetch(new ApiResponse({ data: null }))).toBe(false);\n  });\n\n  test('returns false for an ApiResponse with a error being an instance of Error', () => {\n    expect(ApiResponseHelper.shouldFetch(new ApiResponse({ error: new Error() }))).toBe(false);\n  });\n});\n\ndescribe('#isLoading()', () => {\n  test('returns false if apiResponse is not an ApiResponse', () => {\n    expect(ApiResponseHelper.isLoading(undefined)).toBe(false);\n    expect(ApiResponseHelper.isLoading({ loading: true })).toBe(false);\n  });\n\n  test('returns false if the ApiResponse\\'s loading property is not true', () => {\n    expect(ApiResponseHelper.isLoading(new ApiResponse({ loading: 20 }))).toBe(false);\n  });\n\n  test('returns true if the ApiResponse\\'s loading=true', () => {\n    expect(ApiResponseHelper.isLoading(new ApiResponse({ loading: true }))).toBe(true);\n  });\n});\n\ndescribe('#hasFailed()', () => {\n  test('returns false if apiResponse is not an ApiResponse', () => {\n    expect(ApiResponseHelper.hasFailed(undefined)).toBe(false);\n    expect(ApiResponseHelper.hasFailed({ loading: true })).toBe(false);\n  });\n\n  test('returns false if the ApiResponse\\'s error property is not an Error', () => {\n    expect(ApiResponseHelper.hasFailed(new ApiResponse({ error: 20 }))).toBe(false);\n  });\n\n  test('returns true if the ApiResponse\\'s error=true', () => {\n    expect(ApiResponseHelper.hasFailed(new ApiResponse({ error: new Error() }))).toBe(true);\n  });\n});\n\ndescribe('#hasSucceeded()', () => {\n  test('returns false if apiResponse is not an ApiResponse', () => {\n    expect(ApiResponseHelper.hasSucceeded(undefined)).toBe(false);\n    expect(ApiResponseHelper.hasSucceeded({ loading: true })).toBe(false);\n  });\n\n  test('returns true if the ApiResponse\\'s data property is not undefined', () => {\n    expect(ApiResponseHelper.hasSucceeded(new ApiResponse({ data: null }))).toBe(true);\n  });\n});\n\ndescribe('#create', () => {\n  test('returns the same ApiResponse if one is received', () => {\n    const mock = new ApiResponse();\n    expect(ApiResponseHelper.create(mock)).toBe(mock);\n  });\n\n  test('returns an errored ApiResponse if passed an instance of Error', () => {\n    const error = new Error();\n    expect(ApiResponseHelper.create(error).error).toBe(error);\n  });\n\n  test('returns an ApiResponse if passed undefined', () => {\n    expect(ApiResponseHelper.create()).toBeInstanceOf(ApiResponse);\n  });\n\n  test('returns a succeeded ApiResponse if any other value', () => {\n    expect(ApiResponseHelper.create(null).data).toBeNull();\n  });\n\n  describe('when received an object with just one key', () => {\n    describe('when the key is loading', () => {\n      test('returns an ApiResponse with the value of loading', () => {\n        expect(ApiResponseHelper.create({ loading: true }).loading).toBe(true);\n        expect(ApiResponseHelper.create({ loading: false }).loading).toBe(false);\n      });\n\n      test('keeps as false any value other than true', () => {\n        expect(ApiResponseHelper.create({ loading: 'hi!' }).loading).toBe(false);\n      });\n\n      test('returns a default ApiResponse if loading set to undefined', () => {\n        const result = ApiResponseHelper.create({ loading: undefined });\n        expect(result.loading).toBe(false);\n        expect(result.error).toBeUndefined();\n        expect(result.data).toBeUndefined();\n      });\n    });\n\n    describe('when the key is error', () => {\n      test('returns an errored ApiResponse with the passed error' +\n          ' if it is an instance of Error', () => {\n        const error = new Error();\n        expect(ApiResponseHelper.create({ error }).error).toBe(error);\n      });\n\n      test('wraps the error in an Error instance if it is not already', () => {\n        const { error } = ApiResponseHelper.create({ error: 'hi!' });\n        expect(error).toBeInstanceOf(Error);\n        expect(error.message).toBe('hi!');\n      });\n\n      test('returns a default ApiResponse if error set to undefined', () => {\n        const result = ApiResponseHelper.create({ error: undefined });\n        expect(result.loading).toBe(false);\n        expect(result.error).toBeUndefined();\n        expect(result.data).toBeUndefined();\n      });\n    });\n\n    describe('when the key is data', () => {\n      test('returns an ApiResponse with the provided data', () => {\n        expect(ApiResponseHelper.create({ data: 'hi!' }).data).toBe('hi!');\n      });\n\n      test('returns a default ApiResponse if data set to undefined', () => {\n        const result = ApiResponseHelper.create({ data: undefined });\n        expect(result.loading).toBe(false);\n        expect(result.error).toBeUndefined();\n        expect(result.data).toBeUndefined();\n      });\n    });\n\n    describe('when the key is any other', () => {\n      test('returns an ApiResponse with the provided object', () => {\n        const object = { someKey: 'hi!' };\n        expect(ApiResponseHelper.create(object).data).toBe(object);\n      });\n    });\n  });\n});\n\ndescribe('#responsify', () => {\n  test('is the same as #create()', () => {\n    expect(ApiResponseHelper.responsify).toBe(ApiResponseHelper.create);\n  });\n});\n"]}
{"version":3,"sources":["domain/testClass/spec.js"],"names":["describe","testClass","beforeEach","require","enableTestClasses","default","it","to","throw","not"],"mappings":";;AAAA;;AACA;;AAEAA,SAAS,WAAT,EAAsB,YAAM;AAC1B,MAAIC,kBAAJ;;AAEAC,aAAW,YAAM;AACf;AACAD,gBAAYE,QAAQ,yBAAR,EAAmC;AAC7C,uBAAiB,mBAAQ,EAAEC,mBAAmB,IAArB,EAAR;AAD4B,KAAnC,EAETC,OAFH;AAGD,GALD;;AAOAC,KAAG,qEAAH,EAA0E,YAAM;AAC9E,sBAAO;AAAA,aAAML,UAAU,UAAV,CAAN;AAAA,KAAP,EAAoCM,EAApC,CAAuCC,KAAvC;AACD,GAFD;;AAIAF,KAAG,2CAAH,EAAgD,YAAM;AACpD,sBAAO;AAAA,aAAML,UAAU,YAAV,CAAN;AAAA,KAAP,EAAsCM,EAAtC,CAAyCE,GAAzC,CAA6CD,KAA7C;AACD,GAFD;AAGD,CAjBD","file":"spec.js","sourcesContent":["import { Map } from 'immutable';\nimport { expect } from 'chai';\n\ndescribe('testClass', () => {\n  let testClass;\n\n  beforeEach(() => {\n    // eslint-disable-next-line global-require, import/no-webpack-loader-syntax\n    testClass = require('inject?domain/Config!./')({\n      'domain/Config': new Map({ enableTestClasses: true }),\n    }).default;\n  });\n\n  it('throws an error if the given class contains unacceptable characters', () => {\n    expect(() => testClass('my thing')).to.throw();\n  });\n\n  it('does not throw if the given class is okay', () => {\n    expect(() => testClass('my-thing-5')).to.not.throw();\n  });\n});\n"]}
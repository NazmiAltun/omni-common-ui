{"version":3,"sources":["domain/MediaQuery/index.js"],"names":["styleMedia","window","media","style","document","createElement","script","getElementsByTagName","type","id","parentNode","insertBefore","info","getComputedStyle","currentStyle","matchMedium","text","styleSheet","cssText","textContent","width","localMatchMedia","matches","hasMediaQueries","isListening","timeoutID","queries","handleChange","clearTimeout","setTimeout","i","il","length","mql","listeners","j","jl","call","mediaQuery","index","addListener","listener","addEventListener","push","removeListener","splice"],"mappings":"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","file":"index.js","sourcesContent":["let styleMedia = window.styleMedia || window.media;\n\n// For those that don't support matchMedium\nif (! styleMedia) {\n  const style = document.createElement('style');\n  const script = document.getElementsByTagName('script')[0];\n\n  style.type = 'text/css';\n  style.id = 'matchmediajs-test';\n\n  script.parentNode.insertBefore(style, script);\n\n  // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n  const info = ('getComputedStyle' in window && window.getComputedStyle(style, null)) ||\n    style.currentStyle;\n\n  styleMedia = {\n    matchMedium: (media) => {\n      const text = `@media ${media}{ #matchmediajs-test { width: 1px; } }`;\n\n      // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n      if (style.styleSheet) {\n        style.styleSheet.cssText = text;\n      } else {\n        style.textContent = text;\n      }\n\n      // Test if media query is true or false\n      return info.width === '1px';\n    },\n  };\n}\n\nconst localMatchMedia = (media) => ({\n  matches: styleMedia.matchMedium(media || 'all'),\n  media: media || 'all',\n});\n\nconst hasMediaQueries = localMatchMedia('only all').matches;\nlet isListening = false;\nlet timeoutID = 0;// setTimeout for debouncing 'handleChange'\nconst queries = [];// Contains each 'mql' and associated 'listeners' if 'addListener' is used\nconst handleChange = () => {\n  // Debounce\n  clearTimeout(timeoutID);\n\n  timeoutID = setTimeout(() => {\n    for (let i = 0, il = queries.length; i < il; i++) {\n      const mql = queries[i].mql;\n      const listeners = queries[i].listeners || [];\n      const matches = localMatchMedia(mql.media).matches;\n\n      // Update mql.matches value and call listeners\n      // Fire listeners only if transitioning to or from matched state\n      if (matches !== mql.matches) {\n        mql.matches = matches;\n\n        for (let j = 0, jl = listeners.length; j < jl; j++) {\n          listeners[j].call(window, mql);\n        }\n      }\n    }\n  }, 30);\n};\n\nexport const mediaQuery = (media) => {\n  const mql = localMatchMedia(media);\n  const listeners = [];\n  let index = 0;\n\n  mql.addListener = (listener) => {\n    // Changes would not occur to css media type so return now (Affects IE <= 8)\n    if (! hasMediaQueries) {\n      return;\n    }\n\n    // Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n    // There should only ever be 1 resize listener running for performance\n    if (! isListening) {\n      isListening = true;\n      window.addEventListener('resize', handleChange, true);\n    }\n\n    // Push object only if it has not been pushed already\n    if (index === 0) {\n      index = queries.push({\n        mql,\n        listeners,\n      });\n    }\n\n    listeners.push(listener);\n  };\n\n  mql.removeListener = (listener) => {\n    for (let i = 0, il = listeners.length; i < il; i++) {\n      if (listeners[i] === listener) {\n        listeners.splice(i, 1);\n      }\n    }\n  };\n\n  return mql;\n};\n\nexport default mediaQuery;\n"]}
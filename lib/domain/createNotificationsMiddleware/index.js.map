{"version":3,"sources":["domain/createNotificationsMiddleware/index.js"],"names":["createNotificationsMiddleware","Strategy","config","object","_config","number","triggerOnStartAfterMs","window","setTimeout","emit","TimerStrategy","intervalMs","setInterval","SignalRStrategy","STRATEGIES","timer","signalr","string","strategy","dispatch","apiUrl","StrategyClass","Object","keys","toString","store","emitter","on","method","fullUrl","info","next","action"],"mappings":";;;;;QAyCgBA,6B,GAAAA,6B;;AAzChB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;IAEMC,Q;;;AACJ,oBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAElB,6BAAU,gBAAGC,MAAH,CAAUD,MAAV,CAAV,EAA6B,0BAA7B;AACA,UAAKE,OAAL,GAAeF,MAAf;AACA,QAAI,CAAE,gBAAGG,MAAH,CAAUH,OAAOI,qBAAjB,CAAN,EAA+C;AAC/CC,WAAOC,UAAP,CAAkB,YAAM;AACtB,YAAKC,IAAL,CAAU,cAAV;AACD,KAFD,EAEGP,OAAOI,qBAFV;AALkB;AAQnB;;;;;IAGGI,a;;;AACJ,yBAAYR,MAAZ,EAAoB;AAAA;;AAAA,+HACZA,MADY;;AAElB,QAAI,CAAE,gBAAGG,MAAH,CAAUH,OAAOS,UAAjB,CAAN,EAAoC;AACpCJ,WAAOK,WAAP,CAAmB,YAAM;AACvB,aAAKH,IAAL,CAAU,cAAV;AACD,KAFD,EAEGP,OAAOS,UAFV;AAHkB;AAMnB;;;EAPyBV,Q;;IAUtBY,e;;;AACJ,2BAAYX,MAAZ,EAAoB;AAAA;;AAAA,mIACZA,MADY;;AAElB,6BAAU,KAAV,EAAiB,iBAAjB;AAFkB;AAGnB;;;EAJ2BD,Q;;AAO9B,IAAMa,aAAa;AACjBC,SAAOL,aADU;AAEjBM,WAASH;AAFQ,CAAnB;;AAKO,SAASb,6BAAT,GAAoD;AAAA,MAAbE,MAAa,uEAAJ,EAAI;;AACzD,2BAAU,gBAAGe,MAAH,CAAUf,OAAOgB,QAAjB,CAAV,EAAsC,mCAAtC;AACA,2BAAU,gBAAGf,MAAH,CAAUD,OAAOiB,QAAjB,CAAV,EAAsC,oCAAtC;AACA,2BAAU,gBAAGF,MAAH,CAAUf,OAAOiB,QAAP,CAAgBC,MAA1B,CAAV,EAA6C,kCAA7C;;AAEA,MAAMC,gBAAgBP,WAAWZ,OAAOgB,QAAlB,CAAtB;AACA,2BAAU,CAAC,CAAEG,aAAb,sCACsCC,OAAOC,IAAP,CAAYT,UAAZ,EAAwBU,QAAxB,EADtC;;AAGA,SAAO,UAACC,KAAD,EAAW;AAChB,QAAMC,UAAU,IAAIL,aAAJ,CAAkBnB,MAAlB,CAAhB;AACAwB,YAAQC,EAAR,CAAW,cAAX,EAA2B,YAAM;AAAA,6BAG3BzB,OAAOiB,QAHoB;AAAA,UAE7BS,MAF6B,oBAE7BA,MAF6B;AAAA,UAErBR,MAFqB,oBAErBA,MAFqB;;;AAK/B,UAAMS,UAAU,mBAAST,MAAT,CAAhB;;AAEAK,YAAMN,QAAN,CACI,sCAAuB,eAAvB,EAAwCU,OAAxC,EAAiDD,MAAjD,CADJ;AAED,KATD;;AAWA,kBAAIE,IAAJ,uCAA8C5B,OAAOgB,QAArD;;AAEA,WAAO,UAACa,IAAD;AAAA,aAAU,UAACC,MAAD;AAAA,eAAYD,KAAKC,MAAL,CAAZ;AAAA,OAAV;AAAA,KAAP;AACD,GAhBD;AAiBD;;kBAEchC,6B","file":"index.js","sourcesContent":["import is from 'is_js';\nimport invariant from 'invariant';\nimport EventEmitter from 'event-emitter';\nimport createApiActionCreator from 'domain/createApiActionCreator';\nimport { buildUrl } from 'domain/Api';\nimport log from 'domain/log';\n\nclass Strategy extends EventEmitter {\n  constructor(config) {\n    super();\n    invariant(is.object(config), 'config must be an object');\n    this._config = config;\n    if (! is.number(config.triggerOnStartAfterMs)) return;\n    window.setTimeout(() => {\n      this.emit('notification');\n    }, config.triggerOnStartAfterMs);\n  }\n}\n\nclass TimerStrategy extends Strategy {\n  constructor(config) {\n    super(config);\n    if (! is.number(config.intervalMs)) return;\n    window.setInterval(() => {\n      this.emit('notification');\n    }, config.intervalMs);\n  }\n}\n\nclass SignalRStrategy extends Strategy {\n  constructor(config) {\n    super(config);\n    invariant(false, 'NOT IMPLEMENTED');\n  }\n}\n\nconst STRATEGIES = {\n  timer: TimerStrategy,\n  signalr: SignalRStrategy,\n};\n\nexport function createNotificationsMiddleware(config = {}) {\n  invariant(is.string(config.strategy), 'trigger strategy must be a string');\n  invariant(is.object(config.dispatch), 'trigger dispatch must be an object');\n  invariant(is.string(config.dispatch.apiUrl), 'dispatch apiUrl must be a string');\n\n  const StrategyClass = STRATEGIES[config.strategy];\n  invariant(!! StrategyClass,\n      `strategy must be valid (one of ${Object.keys(STRATEGIES).toString()})`);\n\n  return (store) => {\n    const emitter = new StrategyClass(config);\n    emitter.on('notification', () => {\n      const {\n        method, apiUrl,\n      } = config.dispatch;\n\n      const fullUrl = buildUrl(apiUrl);\n\n      store.dispatch(\n          createApiActionCreator('NOTIFICATIONS', fullUrl, method));\n    });\n\n    log.info(`Pulling notifications using the \\`${config.strategy}\\` strategy`);\n\n    return (next) => (action) => next(action);\n  };\n}\n\nexport default createNotificationsMiddleware;\n"]}
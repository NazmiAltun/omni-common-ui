{"version":3,"sources":["domain/createNotificationsMiddleware/index.js"],"names":["createNotificationsMiddleware","STRATEGIES","timer","signalr","config","string","strategy","object","dispatch","apiUrl","StrategyClass","Object","keys","toString","emitter","store","next","action","user","getState","get","accessToken","access_token","on","method","disableDefault","fullUrl","actionExtras","actionObjectName","url","requestExtras","successExtras","failureExtras","info"],"mappings":";;;;;QAcgBA,6B,GAAAA,6B;;AAdhB;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMC,aAAa;AACjBC,wBADiB;AAEjBC;AAFiB,CAAnB;;AAKO,SAASH,6BAAT,GAAoD;AAAA,MAAbI,MAAa,uEAAJ,EAAI;;AACzD,2BAAU,gBAAGC,MAAH,CAAUD,OAAOE,QAAjB,CAAV,EAAsC,mCAAtC;AACA,2BAAU,gBAAGC,MAAH,CAAUH,OAAOI,QAAjB,CAAV,EAAsC,oCAAtC;AACA,2BAAU,gBAAGH,MAAH,CAAUD,OAAOI,QAAP,CAAgBC,MAA1B,CAAV,EAA6C,kCAA7C;;AAEA,MAAMC,gBAAgBT,WAAWG,OAAOE,QAAlB,CAAtB;AACA,2BAAU,CAAC,CAAEI,aAAb,sCACsCC,OAAOC,IAAP,CAAYX,UAAZ,EAAwBY,QAAxB,EADtC;;AAGA,MAAIC,gBAAJ;;AAEA,SAAO,UAACC,KAAD;AAAA,WAAW,UAACC,IAAD;AAAA,aAAU,UAACC,MAAD,EAAY;AACtC,YAAMC,OAAOH,MAAMI,QAAN,GAAiBC,GAAjB,CAAqB,cAArB,EAAqCF,IAArC,IAA6C,EAA1D;AADsC,YAEhBG,WAFgB,GAEAH,IAFA,CAE9BI,YAF8B;;;AAItC,YAAI,gBAAGjB,MAAH,CAAUgB,WAAV,KAA0B,CAAEP,OAAhC,EAAyC;AACvCA,oBAAU,IAAIJ,aAAJ,CAAkBN,MAAlB,EAA0BiB,WAA1B,CAAV;;AAEAP,kBAAQS,EAAR,CAAW,cAAX,EAA2B,YAAM;AAAA,mCAG3BnB,OAAOI,QAHoB;AAAA,gBAE7BgB,MAF6B,oBAE7BA,MAF6B;AAAA,gBAErBf,MAFqB,oBAErBA,MAFqB;AAAA,gBAEbgB,cAFa,oBAEbA,cAFa;;;AAK/B,gBAAMC,UAAU,mBAASjB,MAAT,CAAhB;AACA,gBAAMkB,eAAeF,iBAAiB,EAAEA,gBAAgB,IAAlB,EAAjB,GAA4C,EAAjE;;AAEAV,kBAAMP,QAAN,CACI,sCAAuB;AACrBoB,gCAAkB,eADG;AAErBC,mBAAKH,OAFgB;AAGrBF,4BAHqB;AAIrBM,6BAAeH,YAJM,EAIS;AAC9BI,6BAAeJ,YALM;AAMrBK,6BAAeL;AANM,aAAvB,CADJ;AASD,WAjBD;;AAmBA,wBAAIM,IAAJ,mCAA0C7B,OAAOE,QAAjD;AACD;;AAED,eAAOU,KAAKC,MAAL,CAAP;AACD,OA9BiB;AAAA,KAAX;AAAA,GAAP;AA+BD;;kBAEcjB,6B","file":"index.js","sourcesContent":["import is from 'is_js';\nimport invariant from 'invariant';\nimport createApiActionCreator from 'domain/createApiActionCreator';\nimport { buildUrl } from 'domain/Api';\nimport log from 'domain/log';\n\nimport TimerStrategy from './timer';\nimport SignalRStrategy from './signalr';\n\nconst STRATEGIES = {\n  timer: TimerStrategy,\n  signalr: SignalRStrategy,\n};\n\nexport function createNotificationsMiddleware(config = {}) {\n  invariant(is.string(config.strategy), 'trigger strategy must be a string');\n  invariant(is.object(config.dispatch), 'trigger dispatch must be an object');\n  invariant(is.string(config.dispatch.apiUrl), 'dispatch apiUrl must be a string');\n\n  const StrategyClass = STRATEGIES[config.strategy];\n  invariant(!! StrategyClass,\n      `strategy must be valid (one of ${Object.keys(STRATEGIES).toString()})`);\n\n  let emitter;\n\n  return (store) => (next) => (action) => {\n    const user = store.getState().get('singleSignOn').user || {};\n    const { access_token: accessToken } = user;\n\n    if (is.string(accessToken) && ! emitter) {\n      emitter = new StrategyClass(config, accessToken);\n\n      emitter.on('notification', () => {\n        const {\n          method, apiUrl, disableDefault,\n        } = config.dispatch;\n\n        const fullUrl = buildUrl(apiUrl);\n        const actionExtras = disableDefault ? { disableDefault: true } : {};\n\n        store.dispatch(\n            createApiActionCreator({\n              actionObjectName: 'NOTIFICATIONS',\n              url: fullUrl,\n              method,\n              requestExtras: actionExtras,  // disableDefault in request, success, failure\n              successExtras: actionExtras,\n              failureExtras: actionExtras,\n            }));\n      });\n\n      log.info(`Notification pull strategy: \\`${config.strategy}\\``);\n    }\n\n    return next(action);\n  };\n}\n\nexport default createNotificationsMiddleware;\n"]}
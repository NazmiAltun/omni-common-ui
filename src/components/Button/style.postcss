@import 'main.postcss';

.Button:not(.__autoWidth),
.NeoButton:not(.__autoWidth) {
  flex-basis: 0%;
  flex-grow: 1;

  /* responsive buttons until this breakpoint */
  @media (--md-viewport-new) {
    flex-basis: auto;
    flex-grow: 0;
  }
}

/* shared styles */
.Button,
.NeoButton {
  border: none;
  cursor: pointer;
  font-size: var(--fontSize-sm);
  outline: none;
  text-transform: uppercase;
  user-select: none;

  &[disabled] {
    cursor: not-allowed;
  }

  &.__block {
    display: block;
    width: 100%;
  }

  &.__autoWidth {
    /* prevent responsive mode upper margin pad */
    margin-top: 0 !important;
  }
}

/* new button styles */
.NeoButton {
  border: 1px solid transparent;
  border-radius: 5px;
  min-height: var(--touchableMinHeightNew);
  min-width: 0;
  padding: 0 15px;
  text-align: center;
  transition: all 0.1s ease;
  will-change: background, border, box-shadow, color, opacity;

  @media (--md-viewport-new) {
    min-width: 100px;
  }

  @mixin fontButton;

  &_default,
  &_inverse {
    background-color: transparent;
  }

  &_default {
    border-color: var(--colorPrimaryNew);
    color: var(--colorPrimaryNew);

    &:hover:not([disabled]),
    &.__active {
      color: var(--colorTextInverse);
    }
  }

  &_inverse {
    border-color: white;
    color: var(--colorTextInverse);

    &.__active {
      color: var(--colorTextInverse);
    }

    &:hover:not([disabled],.__active) {
      background-color: var(--colorInverseButtonHover) !important;
      color: var(--colorPrimaryNew);
    }
  }

  &_primary {
    background-color: var(--colorPrimaryNew);
    color: var(--colorTextInverse);
  }

  &_primaryInverse {
    background-color: white;
    color: var(--colorPrimaryNew);

    &.__active {
      color: var(--colorTextInverse);
    }

    &:hover:not([disabled],.__active) {
      background-color: var(--colorInverseButtonHover) !important;
    }
  }

  &:hover:not([disabled],.__active) {
    background-color: var(--colorButtonHover);
  }

  &:hover:not([disabled]),
  &.__active {
    border-color: transparent;
    box-shadow: 0 1px 2px 1px var(--colorBorder);
  }

  &.__active {
    background-color: var(--colorButtonActive);
  }

  &[disabled] {
    opacity: 0.4;
  }

  &.__autoWidth {
    & + &,
    & + .ButtonLink {
      margin-left: 10px;
    }
  }

  & + &,
  & + .ButtonLink {
    margin-left: 10px;
  }
}

/* deprecated button styles */
.Button {
  min-height: var(--touchableMinHeight);
  min-width: var(--buttonMinWidth);
  padding: var(--touchablePaddingVertical) var(--touchablePaddingHorizontal);

  &_default {
    background-color: transparent;
    border: var(--hairThin) solid var(--colorPrimary);
    color: var(--colorPrimary);

    &:hover {
      background-color: var(--colorActive);
      border-color: var(--colorActive);
      color: var(--colorTextInverse);
    }

    &:active,
    &.__active {
      background-color: var(--colorActive);
      border-color: var(--colorActive);
      color: var(--colorTextInverse);
    }

    &[disabled] {
      background-color: transparent !important;
      border: var(--hairThin) solid var(--colorPrimaryDisabled);
      color: var(--colorPrimaryDisabled) !important;
      cursor: not-allowed;

      &:active {
        background-color: transparent;
        color: var(--colorPrimaryDisabled);
      }

      &.__active {
        background-color: var(--colorPrimaryDisabled) !important;
        color: var(--colorTextInverse) !important;
      }
    }
  }

  &_primary {
    background-color: var(--colorPrimary);
    color: var(--colorTextInverse);

    &:hover {
      background-color: var(--colorActive);
    }

    &.__active {
      background-color: var(--colorActive);
    }

    &[disabled] {
      background-color: transparent;
      border: var(--hairThin) solid var(--colorPrimaryDisabled);
      color: var(--colorPrimaryDisabled);
    }
  }

  &_defaultInverse {
    background-color: transparent;
    border: var(--hairThin) solid var(--colorBase);
    color: var(--colorBase);

    &:hover {
      background-color: var(--colorActive);
      border-color: var(--colorActive);
      color: var(--colorTextInverse);
    }

    &:active,
    &.__active {
      background-color: var(--colorActive);
      border-color: var(--colorActive);
      color: var(--colorTextInverse);
    }

    &[disabled] {
      border: var(--hairThin) solid var(--colorPrimaryDisabled);
      color: var(--colorPrimaryDisabled);
      cursor: not-allowed;

      &:not(.__active) {
        background-color: transparent !important;
      }

      &:active,
      &:hover {
        background-color: transparent;
      }

      &.__active {
        background-color: var(--colorPrimaryDisabled);
        color: var(--colorTextInverse);
      }
    }
  }

  &_primaryInverse {
    background-color: var(--colorBase);
    color: var(--colorPrimary);

    &:hover {
      background-color: var(--colorActive);
      color: var(--colorTextInverse);
    }

    &.__active {
      background-color: var(--colorActive);
      color: var(--colorTextInverse);
    }

    &[disabled] {
      background-color: transparent;
      border: var(--hairThin) solid var(--colorPrimaryDisabled);
      color: var(--colorPrimaryDisabled);
    }
  }

  &[disabled] {
    background-color: var(--colorPrimaryDisabled);
    color: var(--colorTextInverse);
    cursor: not-allowed;

    &.__active {
      background-color: var(--colorPrimaryDisabled);
      color: var(--colorTextInverse);
    }
  }
}

/* when a <Button> becomes a <Link> */
.ButtonLink {
  text-decoration: none;

  &.__neo {
    & + &,
    & + .NeoButton {
      margin-left: 10px;
    }
  }

  &.__block {
    display: block;
    width: 100%;
  }
}

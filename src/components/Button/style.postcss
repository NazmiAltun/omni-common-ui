@import 'main.postcss';

.Button {
  border: 1px solid transparent;
  border-radius: 5px;
  cursor: pointer;
  font-size: var(--fontSize-sm);
  min-height: var(--touchableMinHeightNew);
  min-width: 0;
  outline: none;
  padding: 0 15px;
  text-align: center;
  text-transform: uppercase;
  transition: all var(--transitionDurationBase) ease;
  user-select: none;
  white-space: nowrap;
  will-change: background, border, box-shadow, color, opacity;

  @media (--md-viewport-new) {
    min-width: 100px;
  }

  @mixin fontButton;

  &[disabled] {
    cursor: not-allowed;
  }

  &.__block {
    display: block;
    width: 100%;
  }

  &.__autoWidth {
    /* prevent responsive mode upper margin pad */
    margin-top: 0 !important;
  }

  &:not(.__autoWidth) {
    flex-basis: 0%;
    flex-grow: 1;

    /* responsive buttons until this breakpoint */
    @media (--md-viewport-new) {
      flex-basis: auto;
      flex-grow: 0;
    }
  }

  &:hover:not([disabled],.__active) {
    background-color: var(--colorButtonHover);
  }

  &:hover:not([disabled]),
  &.__active {
    border-color: transparent;
    box-shadow: 0 1px 2px 1px var(--colorBorder);
  }

  &.__active {
    background-color: var(--colorActive);
  }

  &.__default,
  &.__inverse {
    background-color: transparent;
  }

  &.__default {
    border-color: var(--colorPrimary);
    color: var(--colorPrimary);

    &:hover:not([disabled]),
    &.__active {
      border-color: transparent;
      color: var(--colorTextInverse);
    }

    &.__active {
      background-color: var(--colorActive);
    }

    &.__inverse {
      border-color: var(--colorBase);
      color: var(--colorTextInverse);

      &.__active {
        color: var(--colorTextInverse);
      }

      &:hover:not([disabled],.__active) {
        background-color: var(--colorInverseButtonHover) !important;
        border-color: transparent;
        color: var(--colorPrimary);
      }
    }
  }

  &.__primary {
    background-color: var(--colorPrimary);
    color: var(--colorTextInverse);

    &.__inverse {
      background-color: var(--colorBase);
      color: var(--colorPrimary);

      &.__active {
        color: var(--colorTextInverse);
      }

      &:hover:not([disabled],.__active) {
        background-color: var(--colorInverseButtonHover) !important;
      }
    }
  }

  &.__correct {
    background: transparent;
    border-color: var(--colorCorrect);
    color: var(--colorCorrect);

    &:hover:not([disabled]),
    &.__active {
      background-color: var(--colorCorrect);
      color: var(--colorTextInverse);
    }
  }

  &.__wrong {
    background: transparent;
    border-color: var(--colorWrong);
    color: var(--colorWrong);

    &:hover:not([disabled]),
    &.__active {
      background-color: var(--colorWrong);
      color: var(--colorTextInverse);
    }
  }

  &.__needsAttention {
    background: transparent;
    border-color: var(--colorNeedsAttention);
    color: var(--colorNeedsAttention);

    &:hover:not([disabled]),
    &.__active {
      background-color: var(--colorNeedsAttention);
      color: var(--colorTextInverse);
    }
  }

  &.__black {
    background: transparent;
    border-color: var(--colorTextBase);
    color: var(--colorTextBase);

    &:hover:not([disabled]),
    &.__active {
      background-color: var(--colorTextBase);
      color: var(--colorTextInverse);
    }
  }

  &[disabled] {
    opacity: 0.4;
  }

  &.__autoWidth {
    & + &,
    & + .ButtonLink {
      margin-left: 10px;
    }
  }

  & + &,
  & + .ButtonLink {
    margin-left: 10px;
  }
}

/* when a <Button> becomes a <Link> */
.ButtonLink {
  text-decoration: none;

  & + &,
  & + .Button {
    margin-left: 10px;
  }

  &.__block {
    display: block;
    width: 100%;
  }
}
